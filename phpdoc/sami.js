
(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:MarkdownExtended" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MarkdownExtended.html">MarkdownExtended</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:MarkdownExtended_API" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MarkdownExtended/API.html">API</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:MarkdownExtended_API_ContentInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/API/ContentInterface.html">ContentInterface</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_API_GamutInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/API/GamutInterface.html">GamutInterface</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_API_Kernel" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/API/Kernel.html">Kernel</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_API_OutputFormatInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/API/OutputFormatInterface.html">OutputFormatInterface</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_API_TemplateInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/API/TemplateInterface.html">TemplateInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:MarkdownExtended_Console" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MarkdownExtended/Console.html">Console</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:MarkdownExtended_Console_AbstractConsole" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Console/AbstractConsole.html">AbstractConsole</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Console_Console" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Console/Console.html">Console</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Console_Stream" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Console/Stream.html">Stream</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Console_UserInput" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Console/UserInput.html">UserInput</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Console_UserOption" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Console/UserOption.html">UserOption</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:MarkdownExtended_Exception" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MarkdownExtended/Exception.html">Exception</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:MarkdownExtended_Exception_ErrorException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Exception/ErrorException.html">ErrorException</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Exception_Exception" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Exception/Exception.html">Exception</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Exception_FileSystemException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Exception/FileSystemException.html">FileSystemException</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Exception_InvalidArgumentException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Exception/InvalidArgumentException.html">InvalidArgumentException</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Exception_RuntimeException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Exception/RuntimeException.html">RuntimeException</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Exception_UnexpectedValueException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Exception/UnexpectedValueException.html">UnexpectedValueException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:MarkdownExtended_Grammar" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MarkdownExtended/Grammar.html">Grammar</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:MarkdownExtended_Grammar_Filter" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MarkdownExtended/Grammar/Filter.html">Filter</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:MarkdownExtended_Grammar_Filter_Abbreviation" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/Abbreviation.html">Abbreviation</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_Anchor" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/Anchor.html">Anchor</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_AutoLink" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/AutoLink.html">AutoLink</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_BlockInclusion" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/BlockInclusion.html">BlockInclusion</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_BlockQuote" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/BlockQuote.html">BlockQuote</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_CodeBlock" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/CodeBlock.html">CodeBlock</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_DefinitionList" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/DefinitionList.html">DefinitionList</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_Detab" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/Detab.html">Detab</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_Emphasis" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/Emphasis.html">Emphasis</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_FencedCodeBlock" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/FencedCodeBlock.html">FencedCodeBlock</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_HTML" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/HTML.html">HTML</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_HardBreak" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/HardBreak.html">HardBreak</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_Header" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/Header.html">Header</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_HorizontalRule" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/HorizontalRule.html">HorizontalRule</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_Image" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/Image.html">Image</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_LinkDefinition" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/LinkDefinition.html">LinkDefinition</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_ListItem" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/ListItem.html">ListItem</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_Maths" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/Maths.html">Maths</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_MetaData" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/MetaData.html">MetaData</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_Note" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/Note.html">Note</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_Span" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/Span.html">Span</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter_Table" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter/Table.html">Table</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_AbstractGamut" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/AbstractGamut.html">AbstractGamut</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Filter" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Filter.html">Filter</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_GamutLoader" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/GamutLoader.html">GamutLoader</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Lexer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Lexer.html">Lexer</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Grammar_Tools" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Grammar/Tools.html">Tools</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:MarkdownExtended_OutputFormat" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MarkdownExtended/OutputFormat.html">OutputFormat</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:MarkdownExtended_OutputFormat_AbstractOutputFormat" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/OutputFormat/AbstractOutputFormat.html">AbstractOutputFormat</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_OutputFormat_Html" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/OutputFormat/Html.html">Html</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_OutputFormat_Man" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/OutputFormat/Man.html">Man</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:MarkdownExtended_Util" >                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MarkdownExtended/Util.html">Util</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:MarkdownExtended_Util_CacheRegistry" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Util/CacheRegistry.html">CacheRegistry</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Util_ContentCollection" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Util/ContentCollection.html">ContentCollection</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Util_DomIdRegistry" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Util/DomIdRegistry.html">DomIdRegistry</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Util_Helper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Util/Helper.html">Helper</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Util_Registry" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="MarkdownExtended/Util/Registry.html">Registry</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:MarkdownExtended_Content" >                    <div style="padding-left:26px" class="hd leaf">                        <a href="MarkdownExtended/Content.html">Content</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_MarkdownExtended" >                    <div style="padding-left:26px" class="hd leaf">                        <a href="MarkdownExtended/MarkdownExtended.html">MarkdownExtended</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_OutputFormatBag" >                    <div style="padding-left:26px" class="hd leaf">                        <a href="MarkdownExtended/OutputFormatBag.html">OutputFormatBag</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Parser" >                    <div style="padding-left:26px" class="hd leaf">                        <a href="MarkdownExtended/Parser.html">Parser</a>                    </div>                </li>                            <li data-name="class:MarkdownExtended_Templater" >                    <div style="padding-left:26px" class="hd leaf">                        <a href="MarkdownExtended/Templater.html">Templater</a>                    </div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": "MarkdownExtended.html", "name": "MarkdownExtended", "doc": "Namespace MarkdownExtended"},{"type": "Namespace", "link": "MarkdownExtended/API.html", "name": "MarkdownExtended\\API", "doc": "Namespace MarkdownExtended\\API"},{"type": "Namespace", "link": "MarkdownExtended/Console.html", "name": "MarkdownExtended\\Console", "doc": "Namespace MarkdownExtended\\Console"},{"type": "Namespace", "link": "MarkdownExtended/Exception.html", "name": "MarkdownExtended\\Exception", "doc": "Namespace MarkdownExtended\\Exception"},{"type": "Namespace", "link": "MarkdownExtended/Grammar.html", "name": "MarkdownExtended\\Grammar", "doc": "Namespace MarkdownExtended\\Grammar"},{"type": "Namespace", "link": "MarkdownExtended/Grammar/Filter.html", "name": "MarkdownExtended\\Grammar\\Filter", "doc": "Namespace MarkdownExtended\\Grammar\\Filter"},{"type": "Namespace", "link": "MarkdownExtended/OutputFormat.html", "name": "MarkdownExtended\\OutputFormat", "doc": "Namespace MarkdownExtended\\OutputFormat"},{"type": "Namespace", "link": "MarkdownExtended/Util.html", "name": "MarkdownExtended\\Util", "doc": "Namespace MarkdownExtended\\Util"},
            {"type": "Interface", "fromName": "MarkdownExtended\\API", "fromLink": "MarkdownExtended/API.html", "link": "MarkdownExtended/API/ContentInterface.html", "name": "MarkdownExtended\\API\\ContentInterface", "doc": "&quot;Interface to implement for content objects&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method___toString", "name": "MarkdownExtended\\API\\ContentInterface::__toString", "doc": "&quot;Use the content as a string&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method___toArray", "name": "MarkdownExtended\\API\\ContentInterface::__toArray", "doc": "&quot;Get the content as an array&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_setSource", "name": "MarkdownExtended\\API\\ContentInterface::setSource", "doc": "&quot;Sets the original source of the content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getSource", "name": "MarkdownExtended\\API\\ContentInterface::getSource", "doc": "&quot;Gets the original source of the content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_setParsingOptions", "name": "MarkdownExtended\\API\\ContentInterface::setParsingOptions", "doc": "&quot;Sets the array of options used to parse the content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getParsingOptions", "name": "MarkdownExtended\\API\\ContentInterface::getParsingOptions", "doc": "&quot;Gets the array of options used to parse the content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_setContent", "name": "MarkdownExtended\\API\\ContentInterface::setContent", "doc": "&quot;Sets the content&#039;s \&quot;final\&quot; content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getContent", "name": "MarkdownExtended\\API\\ContentInterface::getContent", "doc": "&quot;Gets the content&#039;s \&quot;final\&quot; content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_setCharset", "name": "MarkdownExtended\\API\\ContentInterface::setCharset", "doc": "&quot;Sets the content&#039;s character set&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getCharset", "name": "MarkdownExtended\\API\\ContentInterface::getCharset", "doc": "&quot;Gets the content&#039;s character set&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_setTitle", "name": "MarkdownExtended\\API\\ContentInterface::setTitle", "doc": "&quot;Sets the content&#039;s title&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getTitle", "name": "MarkdownExtended\\API\\ContentInterface::getTitle", "doc": "&quot;Gets the content&#039;s title&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_setBody", "name": "MarkdownExtended\\API\\ContentInterface::setBody", "doc": "&quot;Sets the content&#039;s body&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getBody", "name": "MarkdownExtended\\API\\ContentInterface::getBody", "doc": "&quot;Gets the content&#039;s body&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_setNotes", "name": "MarkdownExtended\\API\\ContentInterface::setNotes", "doc": "&quot;Sets the content&#039;s footnotes&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_addNote", "name": "MarkdownExtended\\API\\ContentInterface::addNote", "doc": "&quot;Adds a content&#039;s footnote&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getNotes", "name": "MarkdownExtended\\API\\ContentInterface::getNotes", "doc": "&quot;Gets the content&#039;s notes&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getNotesFormatted", "name": "MarkdownExtended\\API\\ContentInterface::getNotesFormatted", "doc": "&quot;Gets the content&#039;s notes formatted in current output format&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_setMetadata", "name": "MarkdownExtended\\API\\ContentInterface::setMetadata", "doc": "&quot;Sets content&#039;s metadata&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_addMetadata", "name": "MarkdownExtended\\API\\ContentInterface::addMetadata", "doc": "&quot;Adds a new content&#039;s metadata&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getMetadata", "name": "MarkdownExtended\\API\\ContentInterface::getMetadata", "doc": "&quot;Gets one or all content&#039;s metadata&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getMetadataFormatted", "name": "MarkdownExtended\\API\\ContentInterface::getMetadataFormatted", "doc": "&quot;Gets content&#039;s metadata formatted in current output format&quot;"},
            
            {"type": "Interface", "fromName": "MarkdownExtended\\API", "fromLink": "MarkdownExtended/API.html", "link": "MarkdownExtended/API/GamutInterface.html", "name": "MarkdownExtended\\API\\GamutInterface", "doc": "&quot;Interface to implement for filter objects&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\API\\GamutInterface", "fromLink": "MarkdownExtended/API/GamutInterface.html", "link": "MarkdownExtended/API/GamutInterface.html#method_getDefaultMethod", "name": "MarkdownExtended\\API\\GamutInterface::getDefaultMethod", "doc": "&quot;Must return a method name&quot;"},
            
            {"type": "Interface", "fromName": "MarkdownExtended\\API", "fromLink": "MarkdownExtended/API.html", "link": "MarkdownExtended/API/OutputFormatInterface.html", "name": "MarkdownExtended\\API\\OutputFormatInterface", "doc": "&quot;Interface to implement for any output format object&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\API\\OutputFormatInterface", "fromLink": "MarkdownExtended/API/OutputFormatInterface.html", "link": "MarkdownExtended/API/OutputFormatInterface.html#method_buildTag", "name": "MarkdownExtended\\API\\OutputFormatInterface::buildTag", "doc": "&quot;This may construct a valid string for concerned tag, content and attributes&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\OutputFormatInterface", "fromLink": "MarkdownExtended/API/OutputFormatInterface.html", "link": "MarkdownExtended/API/OutputFormatInterface.html#method_getTagString", "name": "MarkdownExtended\\API\\OutputFormatInterface::getTagString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\OutputFormatInterface", "fromLink": "MarkdownExtended/API/OutputFormatInterface.html", "link": "MarkdownExtended/API/OutputFormatInterface.html#method_getNotesToString", "name": "MarkdownExtended\\API\\OutputFormatInterface::getNotesToString", "doc": "&quot;Gets the notes list as string&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\OutputFormatInterface", "fromLink": "MarkdownExtended/API/OutputFormatInterface.html", "link": "MarkdownExtended/API/OutputFormatInterface.html#method_getMetadataToString", "name": "MarkdownExtended\\API\\OutputFormatInterface::getMetadataToString", "doc": "&quot;Gets the metadata list as string&quot;"},
            
            {"type": "Interface", "fromName": "MarkdownExtended\\API", "fromLink": "MarkdownExtended/API.html", "link": "MarkdownExtended/API/TemplateInterface.html", "name": "MarkdownExtended\\API\\TemplateInterface", "doc": "&quot;Interface to implement for all template objects&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\API\\TemplateInterface", "fromLink": "MarkdownExtended/API/TemplateInterface.html", "link": "MarkdownExtended/API/TemplateInterface.html#method_parse", "name": "MarkdownExtended\\API\\TemplateInterface::parse", "doc": "&quot;Insert a content in a template&quot;"},
            
            
            {"type": "Class", "fromName": "MarkdownExtended\\API", "fromLink": "MarkdownExtended/API.html", "link": "MarkdownExtended/API/ContentInterface.html", "name": "MarkdownExtended\\API\\ContentInterface", "doc": "&quot;Interface to implement for content objects&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method___toString", "name": "MarkdownExtended\\API\\ContentInterface::__toString", "doc": "&quot;Use the content as a string&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method___toArray", "name": "MarkdownExtended\\API\\ContentInterface::__toArray", "doc": "&quot;Get the content as an array&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_setSource", "name": "MarkdownExtended\\API\\ContentInterface::setSource", "doc": "&quot;Sets the original source of the content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getSource", "name": "MarkdownExtended\\API\\ContentInterface::getSource", "doc": "&quot;Gets the original source of the content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_setParsingOptions", "name": "MarkdownExtended\\API\\ContentInterface::setParsingOptions", "doc": "&quot;Sets the array of options used to parse the content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getParsingOptions", "name": "MarkdownExtended\\API\\ContentInterface::getParsingOptions", "doc": "&quot;Gets the array of options used to parse the content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_setContent", "name": "MarkdownExtended\\API\\ContentInterface::setContent", "doc": "&quot;Sets the content&#039;s \&quot;final\&quot; content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getContent", "name": "MarkdownExtended\\API\\ContentInterface::getContent", "doc": "&quot;Gets the content&#039;s \&quot;final\&quot; content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_setCharset", "name": "MarkdownExtended\\API\\ContentInterface::setCharset", "doc": "&quot;Sets the content&#039;s character set&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getCharset", "name": "MarkdownExtended\\API\\ContentInterface::getCharset", "doc": "&quot;Gets the content&#039;s character set&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_setTitle", "name": "MarkdownExtended\\API\\ContentInterface::setTitle", "doc": "&quot;Sets the content&#039;s title&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getTitle", "name": "MarkdownExtended\\API\\ContentInterface::getTitle", "doc": "&quot;Gets the content&#039;s title&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_setBody", "name": "MarkdownExtended\\API\\ContentInterface::setBody", "doc": "&quot;Sets the content&#039;s body&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getBody", "name": "MarkdownExtended\\API\\ContentInterface::getBody", "doc": "&quot;Gets the content&#039;s body&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_setNotes", "name": "MarkdownExtended\\API\\ContentInterface::setNotes", "doc": "&quot;Sets the content&#039;s footnotes&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_addNote", "name": "MarkdownExtended\\API\\ContentInterface::addNote", "doc": "&quot;Adds a content&#039;s footnote&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getNotes", "name": "MarkdownExtended\\API\\ContentInterface::getNotes", "doc": "&quot;Gets the content&#039;s notes&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getNotesFormatted", "name": "MarkdownExtended\\API\\ContentInterface::getNotesFormatted", "doc": "&quot;Gets the content&#039;s notes formatted in current output format&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_setMetadata", "name": "MarkdownExtended\\API\\ContentInterface::setMetadata", "doc": "&quot;Sets content&#039;s metadata&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_addMetadata", "name": "MarkdownExtended\\API\\ContentInterface::addMetadata", "doc": "&quot;Adds a new content&#039;s metadata&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getMetadata", "name": "MarkdownExtended\\API\\ContentInterface::getMetadata", "doc": "&quot;Gets one or all content&#039;s metadata&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\ContentInterface", "fromLink": "MarkdownExtended/API/ContentInterface.html", "link": "MarkdownExtended/API/ContentInterface.html#method_getMetadataFormatted", "name": "MarkdownExtended\\API\\ContentInterface::getMetadataFormatted", "doc": "&quot;Gets content&#039;s metadata formatted in current output format&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\API", "fromLink": "MarkdownExtended/API.html", "link": "MarkdownExtended/API/GamutInterface.html", "name": "MarkdownExtended\\API\\GamutInterface", "doc": "&quot;Interface to implement for filter objects&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\API\\GamutInterface", "fromLink": "MarkdownExtended/API/GamutInterface.html", "link": "MarkdownExtended/API/GamutInterface.html#method_getDefaultMethod", "name": "MarkdownExtended\\API\\GamutInterface::getDefaultMethod", "doc": "&quot;Must return a method name&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\API", "fromLink": "MarkdownExtended/API.html", "link": "MarkdownExtended/API/Kernel.html", "name": "MarkdownExtended\\API\\Kernel", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\API\\Kernel", "fromLink": "MarkdownExtended/API/Kernel.html", "link": "MarkdownExtended/API/Kernel.html#method_getInstance", "name": "MarkdownExtended\\API\\Kernel::getInstance", "doc": "&quot;Get Kernel&#039;s instance&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\Kernel", "fromLink": "MarkdownExtended/API/Kernel.html", "link": "MarkdownExtended/API/Kernel.html#method_createInstance", "name": "MarkdownExtended\\API\\Kernel::createInstance", "doc": "&quot;Create a Kernel instance&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\Kernel", "fromLink": "MarkdownExtended/API/Kernel.html", "link": "MarkdownExtended/API/Kernel.html#method_getApiFromType", "name": "MarkdownExtended\\API\\Kernel::getApiFromType", "doc": "&quot;Get the API&#039;s interface by object&#039;s type&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\Kernel", "fromLink": "MarkdownExtended/API/Kernel.html", "link": "MarkdownExtended/API/Kernel.html#method_get", "name": "MarkdownExtended\\API\\Kernel::get", "doc": "&quot;Gets a service by name&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\Kernel", "fromLink": "MarkdownExtended/API/Kernel.html", "link": "MarkdownExtended/API/Kernel.html#method_has", "name": "MarkdownExtended\\API\\Kernel::has", "doc": "&quot;Tests if a service exists&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\Kernel", "fromLink": "MarkdownExtended/API/Kernel.html", "link": "MarkdownExtended/API/Kernel.html#method_set", "name": "MarkdownExtended\\API\\Kernel::set", "doc": "&quot;Sets a service&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\Kernel", "fromLink": "MarkdownExtended/API/Kernel.html", "link": "MarkdownExtended/API/Kernel.html#method_remove", "name": "MarkdownExtended\\API\\Kernel::remove", "doc": "&quot;Removes an existing service&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\Kernel", "fromLink": "MarkdownExtended/API/Kernel.html", "link": "MarkdownExtended/API/Kernel.html#method_valid", "name": "MarkdownExtended\\API\\Kernel::valid", "doc": "&quot;Tests if a class implements concerned API&#039;s interface&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\Kernel", "fromLink": "MarkdownExtended/API/Kernel.html", "link": "MarkdownExtended/API/Kernel.html#method_validate", "name": "MarkdownExtended\\API\\Kernel::validate", "doc": "&quot;Tests if a class implements concerned API&#039;s interface and throws an exception if not&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\Kernel", "fromLink": "MarkdownExtended/API/Kernel.html", "link": "MarkdownExtended/API/Kernel.html#method_getConfig", "name": "MarkdownExtended\\API\\Kernel::getConfig", "doc": "&quot;Gets a configuration entry&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\Kernel", "fromLink": "MarkdownExtended/API/Kernel.html", "link": "MarkdownExtended/API/Kernel.html#method_setConfig", "name": "MarkdownExtended\\API\\Kernel::setConfig", "doc": "&quot;Sets a configuration entry&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\Kernel", "fromLink": "MarkdownExtended/API/Kernel.html", "link": "MarkdownExtended/API/Kernel.html#method_addConfig", "name": "MarkdownExtended\\API\\Kernel::addConfig", "doc": "&quot;Merges a configuration entry (concatenates string or merges array)&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\Kernel", "fromLink": "MarkdownExtended/API/Kernel.html", "link": "MarkdownExtended/API/Kernel.html#method_applyConfig", "name": "MarkdownExtended\\API\\Kernel::applyConfig", "doc": "&quot;Applies a callback option (if it is callable) on parameters&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\Kernel", "fromLink": "MarkdownExtended/API/Kernel.html", "link": "MarkdownExtended/API/Kernel.html#method_getResourcePath", "name": "MarkdownExtended\\API\\Kernel::getResourcePath", "doc": "&quot;Finds an internal resource file by type&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\API", "fromLink": "MarkdownExtended/API.html", "link": "MarkdownExtended/API/OutputFormatInterface.html", "name": "MarkdownExtended\\API\\OutputFormatInterface", "doc": "&quot;Interface to implement for any output format object&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\API\\OutputFormatInterface", "fromLink": "MarkdownExtended/API/OutputFormatInterface.html", "link": "MarkdownExtended/API/OutputFormatInterface.html#method_buildTag", "name": "MarkdownExtended\\API\\OutputFormatInterface::buildTag", "doc": "&quot;This may construct a valid string for concerned tag, content and attributes&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\OutputFormatInterface", "fromLink": "MarkdownExtended/API/OutputFormatInterface.html", "link": "MarkdownExtended/API/OutputFormatInterface.html#method_getTagString", "name": "MarkdownExtended\\API\\OutputFormatInterface::getTagString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\OutputFormatInterface", "fromLink": "MarkdownExtended/API/OutputFormatInterface.html", "link": "MarkdownExtended/API/OutputFormatInterface.html#method_getNotesToString", "name": "MarkdownExtended\\API\\OutputFormatInterface::getNotesToString", "doc": "&quot;Gets the notes list as string&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\API\\OutputFormatInterface", "fromLink": "MarkdownExtended/API/OutputFormatInterface.html", "link": "MarkdownExtended/API/OutputFormatInterface.html#method_getMetadataToString", "name": "MarkdownExtended\\API\\OutputFormatInterface::getMetadataToString", "doc": "&quot;Gets the metadata list as string&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\API", "fromLink": "MarkdownExtended/API.html", "link": "MarkdownExtended/API/TemplateInterface.html", "name": "MarkdownExtended\\API\\TemplateInterface", "doc": "&quot;Interface to implement for all template objects&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\API\\TemplateInterface", "fromLink": "MarkdownExtended/API/TemplateInterface.html", "link": "MarkdownExtended/API/TemplateInterface.html#method_parse", "name": "MarkdownExtended\\API\\TemplateInterface::parse", "doc": "&quot;Insert a content in a template&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Console", "fromLink": "MarkdownExtended/Console.html", "link": "MarkdownExtended/Console/AbstractConsole.html", "name": "MarkdownExtended\\Console\\AbstractConsole", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method___construct", "name": "MarkdownExtended\\Console\\AbstractConsole::__construct", "doc": "&quot;Initializes a new console app&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_setStream", "name": "MarkdownExtended\\Console\\AbstractConsole::setStream", "doc": "&quot;Sets console&#039;s stream handler&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_setUserInput", "name": "MarkdownExtended\\Console\\AbstractConsole::setUserInput", "doc": "&quot;Sets console&#039;s user input handler&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_setArgumentRequired", "name": "MarkdownExtended\\Console\\AbstractConsole::setArgumentRequired", "doc": "&quot;Defines if an argument is required or not&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_setName", "name": "MarkdownExtended\\Console\\AbstractConsole::setName", "doc": "&quot;Sets the command&#039;s name&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_setShortname", "name": "MarkdownExtended\\Console\\AbstractConsole::setShortname", "doc": "&quot;Sets the command&#039;s short-name&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_setVersion", "name": "MarkdownExtended\\Console\\AbstractConsole::setVersion", "doc": "&quot;Sets the command&#039;s version number&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_setShortVersionString", "name": "MarkdownExtended\\Console\\AbstractConsole::setShortVersionString", "doc": "&quot;Sets the command&#039;s short version string&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_setLongVersionString", "name": "MarkdownExtended\\Console\\AbstractConsole::setLongVersionString", "doc": "&quot;Sets the command&#039;s long version string&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_setDescription", "name": "MarkdownExtended\\Console\\AbstractConsole::setDescription", "doc": "&quot;Sets the command&#039;s description&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_setUsage", "name": "MarkdownExtended\\Console\\AbstractConsole::setUsage", "doc": "&quot;Sets the command&#039;s usage string&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_setSynopsis", "name": "MarkdownExtended\\Console\\AbstractConsole::setSynopsis", "doc": "&quot;Sets the command&#039;s synopsis&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_addCliOption", "name": "MarkdownExtended\\Console\\AbstractConsole::addCliOption", "doc": "&quot;Adds a new CLI option available for the command&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_getOption", "name": "MarkdownExtended\\Console\\AbstractConsole::getOption", "doc": "&quot;Gets a script&#039;s option value&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_enableHardDebug", "name": "MarkdownExtended\\Console\\AbstractConsole::enableHardDebug", "doc": "&quot;Enables hard debugging&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_parseOptions", "name": "MarkdownExtended\\Console\\AbstractConsole::parseOptions", "doc": "&quot;Get the command line user options&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_runVersion", "name": "MarkdownExtended\\Console\\AbstractConsole::runVersion", "doc": "&quot;Runs the &lt;code&gt;--version&lt;\/code&gt; option&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_runHelp", "name": "MarkdownExtended\\Console\\AbstractConsole::runHelp", "doc": "&quot;Runs the &lt;code&gt;--help&lt;\/code&gt; option&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_runUsage", "name": "MarkdownExtended\\Console\\AbstractConsole::runUsage", "doc": "&quot;Runs the usage string&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\AbstractConsole", "fromLink": "MarkdownExtended/Console/AbstractConsole.html", "link": "MarkdownExtended/Console/AbstractConsole.html#method_run", "name": "MarkdownExtended\\Console\\AbstractConsole::run", "doc": "&quot;Actually run command&#039;s process&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Console", "fromLink": "MarkdownExtended/Console.html", "link": "MarkdownExtended/Console/Console.html", "name": "MarkdownExtended\\Console\\Console", "doc": "&quot;This is the markdown-extended shell script definition&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Console\\Console", "fromLink": "MarkdownExtended/Console/Console.html", "link": "MarkdownExtended/Console/Console.html#method___construct", "name": "MarkdownExtended\\Console\\Console::__construct", "doc": "&quot;Initialized the command&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\Console", "fromLink": "MarkdownExtended/Console/Console.html", "link": "MarkdownExtended/Console/Console.html#method_getMarkdownExtendedParser", "name": "MarkdownExtended\\Console\\Console::getMarkdownExtendedParser", "doc": "&quot;Gets markdown parser with current options&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\Console", "fromLink": "MarkdownExtended/Console/Console.html", "link": "MarkdownExtended/Console/Console.html#method_getResults", "name": "MarkdownExtended\\Console\\Console::getResults", "doc": "&quot;Gets rendering results&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\Console", "fromLink": "MarkdownExtended/Console/Console.html", "link": "MarkdownExtended/Console/Console.html#method_run", "name": "MarkdownExtended\\Console\\Console::run", "doc": "&quot;Actually run the command process&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Console", "fromLink": "MarkdownExtended/Console.html", "link": "MarkdownExtended/Console/Stream.html", "name": "MarkdownExtended\\Console\\Stream", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Console\\Stream", "fromLink": "MarkdownExtended/Console/Stream.html", "link": "MarkdownExtended/Console/Stream.html#method___construct", "name": "MarkdownExtended\\Console\\Stream::__construct", "doc": "&quot;Initializes all streams&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\Stream", "fromLink": "MarkdownExtended/Console/Stream.html", "link": "MarkdownExtended/Console/Stream.html#method_setStream", "name": "MarkdownExtended\\Console\\Stream::setStream", "doc": "&quot;Sets a stream resource by type in stdin, stdout or stderr&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\Stream", "fromLink": "MarkdownExtended/Console/Stream.html", "link": "MarkdownExtended/Console/Stream.html#method_getStream", "name": "MarkdownExtended\\Console\\Stream::getStream", "doc": "&quot;Gets a stream by type: stdin, stdout or stderr&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\Stream", "fromLink": "MarkdownExtended/Console/Stream.html", "link": "MarkdownExtended/Console/Stream.html#method_setExceptionHandlerCallback", "name": "MarkdownExtended\\Console\\Stream::setExceptionHandlerCallback", "doc": "&quot;Sets a callback triggered when an exception is caught&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\Stream", "fromLink": "MarkdownExtended/Console/Stream.html", "link": "MarkdownExtended/Console/Stream.html#method_setVerbosity", "name": "MarkdownExtended\\Console\\Stream::setVerbosity", "doc": "&quot;Sets stream verbosity flag&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\Stream", "fromLink": "MarkdownExtended/Console/Stream.html", "link": "MarkdownExtended/Console/Stream.html#method_getVerbosity", "name": "MarkdownExtended\\Console\\Stream::getVerbosity", "doc": "&quot;Gets stream verbosity flag&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\Stream", "fromLink": "MarkdownExtended/Console/Stream.html", "link": "MarkdownExtended/Console/Stream.html#method__exit", "name": "MarkdownExtended\\Console\\Stream::_exit", "doc": "&quot;Actually exits current process&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\Stream", "fromLink": "MarkdownExtended/Console/Stream.html", "link": "MarkdownExtended/Console/Stream.html#method_handleException", "name": "MarkdownExtended\\Console\\Stream::handleException", "doc": "&quot;Write a caught exception&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\Stream", "fromLink": "MarkdownExtended/Console/Stream.html", "link": "MarkdownExtended/Console/Stream.html#method_write", "name": "MarkdownExtended\\Console\\Stream::write", "doc": "&quot;Write an info to CLI output&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\Stream", "fromLink": "MarkdownExtended/Console/Stream.html", "link": "MarkdownExtended/Console/Stream.html#method_writeln", "name": "MarkdownExtended\\Console\\Stream::writeln", "doc": "&quot;Write an info to CLI output with line break&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\Stream", "fromLink": "MarkdownExtended/Console/Stream.html", "link": "MarkdownExtended/Console/Stream.html#method_writetable", "name": "MarkdownExtended\\Console\\Stream::writetable", "doc": "&quot;Write an info to CLI output with line break&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\Stream", "fromLink": "MarkdownExtended/Console/Stream.html", "link": "MarkdownExtended/Console/Stream.html#method_verbose", "name": "MarkdownExtended\\Console\\Stream::verbose", "doc": "&quot;Write an info to CLI output in verbose mode&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\Stream", "fromLink": "MarkdownExtended/Console/Stream.html", "link": "MarkdownExtended/Console/Stream.html#method_verboseln", "name": "MarkdownExtended\\Console\\Stream::verboseln", "doc": "&quot;Write an info to CLI output with line break in verbose mode&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\Stream", "fromLink": "MarkdownExtended/Console/Stream.html", "link": "MarkdownExtended/Console/Stream.html#method_debug", "name": "MarkdownExtended\\Console\\Stream::debug", "doc": "&quot;Write an info to CLI output in debug mode&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\Stream", "fromLink": "MarkdownExtended/Console/Stream.html", "link": "MarkdownExtended/Console/Stream.html#method_debugln", "name": "MarkdownExtended\\Console\\Stream::debugln", "doc": "&quot;Write an info to CLI output with line break in debug mode&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\Stream", "fromLink": "MarkdownExtended/Console/Stream.html", "link": "MarkdownExtended/Console/Stream.html#method_getPipedInput", "name": "MarkdownExtended\\Console\\Stream::getPipedInput", "doc": "&quot;Get any output from previous command STDIN piped\nsee &lt;a href=\&quot;http:\/\/stackoverflow.com\/a\/9711142\/2512020\&quot;&gt;http:\/\/stackoverflow.com\/a\/9711142\/2512020&lt;\/a&gt;&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Console", "fromLink": "MarkdownExtended/Console.html", "link": "MarkdownExtended/Console/UserInput.html", "name": "MarkdownExtended\\Console\\UserInput", "doc": "&quot;A class to manage command line options based on a set of definitions&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Console\\UserInput", "fromLink": "MarkdownExtended/Console/UserInput.html", "link": "MarkdownExtended/Console/UserInput.html#method___construct", "name": "MarkdownExtended\\Console\\UserInput::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\UserInput", "fromLink": "MarkdownExtended/Console/UserInput.html", "link": "MarkdownExtended/Console/UserInput.html#method_getOption", "name": "MarkdownExtended\\Console\\UserInput::getOption", "doc": "&quot;Gets an option object by name or shortcut&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\UserInput", "fromLink": "MarkdownExtended/Console/UserInput.html", "link": "MarkdownExtended/Console/UserInput.html#method_getIndexedOptions", "name": "MarkdownExtended\\Console\\UserInput::getIndexedOptions", "doc": "&quot;Gets the array of options indexed by their names&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\UserInput", "fromLink": "MarkdownExtended/Console/UserInput.html", "link": "MarkdownExtended/Console/UserInput.html#method_getFilteredOptions", "name": "MarkdownExtended\\Console\\UserInput::getFilteredOptions", "doc": "&quot;Gets an array of a value of each option, indexed by their names&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\UserInput", "fromLink": "MarkdownExtended/Console/UserInput.html", "link": "MarkdownExtended/Console/UserInput.html#method_getOptionsInfo", "name": "MarkdownExtended\\Console\\UserInput::getOptionsInfo", "doc": "&quot;Gets an automatic information of a set of options&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\UserInput", "fromLink": "MarkdownExtended/Console/UserInput.html", "link": "MarkdownExtended/Console/UserInput.html#method_getOptionsSynopsis", "name": "MarkdownExtended\\Console\\UserInput::getOptionsSynopsis", "doc": "&quot;Gets an automatic synopsis of a set of options&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\UserInput", "fromLink": "MarkdownExtended/Console/UserInput.html", "link": "MarkdownExtended/Console/UserInput.html#method_parseOptions", "name": "MarkdownExtended\\Console\\UserInput::parseOptions", "doc": "&quot;Parse the command line user options based on CLI options definitions&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\UserInput", "fromLink": "MarkdownExtended/Console/UserInput.html", "link": "MarkdownExtended/Console/UserInput.html#method_getSanitizedUserInput", "name": "MarkdownExtended\\Console\\UserInput::getSanitizedUserInput", "doc": "&quot;Gets the input array of options and arguments&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Console", "fromLink": "MarkdownExtended/Console.html", "link": "MarkdownExtended/Console/UserOption.html", "name": "MarkdownExtended\\Console\\UserOption", "doc": "&quot;A class to manage one command line option based on a definition&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Console\\UserOption", "fromLink": "MarkdownExtended/Console/UserOption.html", "link": "MarkdownExtended/Console/UserOption.html#method___construct", "name": "MarkdownExtended\\Console\\UserOption::__construct", "doc": "&quot;Organize and cleanup an option definition&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\UserOption", "fromLink": "MarkdownExtended/Console/UserOption.html", "link": "MarkdownExtended/Console/UserOption.html#method_validateUserValue", "name": "MarkdownExtended\\Console\\UserOption::validateUserValue", "doc": "&quot;Validate a user CLI option value&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\UserOption", "fromLink": "MarkdownExtended/Console/UserOption.html", "link": "MarkdownExtended/Console/UserOption.html#method_getInfo", "name": "MarkdownExtended\\Console\\UserOption::getInfo", "doc": "&quot;Gets an automatic information about the option&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\UserOption", "fromLink": "MarkdownExtended/Console/UserOption.html", "link": "MarkdownExtended/Console/UserOption.html#method_getSynopsis", "name": "MarkdownExtended\\Console\\UserOption::getSynopsis", "doc": "&quot;Gets an automatic synopsis of the option&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\UserOption", "fromLink": "MarkdownExtended/Console/UserOption.html", "link": "MarkdownExtended/Console/UserOption.html#method_getArgumentString", "name": "MarkdownExtended\\Console\\UserOption::getArgumentString", "doc": "&quot;Gets an option value type as string&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\UserOption", "fromLink": "MarkdownExtended/Console/UserOption.html", "link": "MarkdownExtended/Console/UserOption.html#method_has", "name": "MarkdownExtended\\Console\\UserOption::has", "doc": "&quot;Alias of `$this-&gt;data-&gt;.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\UserOption", "fromLink": "MarkdownExtended/Console/UserOption.html", "link": "MarkdownExtended/Console/UserOption.html#method_get", "name": "MarkdownExtended\\Console\\UserOption::get", "doc": "&quot;Alias of `$this-&gt;data-&gt;.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Console\\UserOption", "fromLink": "MarkdownExtended/Console/UserOption.html", "link": "MarkdownExtended/Console/UserOption.html#method_set", "name": "MarkdownExtended\\Console\\UserOption::set", "doc": "&quot;Alias of `$this-&gt;data-&gt;.&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended", "fromLink": "MarkdownExtended.html", "link": "MarkdownExtended/Content.html", "name": "MarkdownExtended\\Content", "doc": "&quot;The default MarkdownExtended Content object&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method___construct", "name": "MarkdownExtended\\Content::__construct", "doc": "&quot;Construct a new content object with a source and current parsing options&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method___toString", "name": "MarkdownExtended\\Content::__toString", "doc": "&quot;Use the content as a string&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method___toArray", "name": "MarkdownExtended\\Content::__toArray", "doc": "&quot;Get the content as an array&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_setSource", "name": "MarkdownExtended\\Content::setSource", "doc": "&quot;Sets the original source of the content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_getSource", "name": "MarkdownExtended\\Content::getSource", "doc": "&quot;Gets the original source of the content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_setParsingOptions", "name": "MarkdownExtended\\Content::setParsingOptions", "doc": "&quot;Sets the array of options used to parse the content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_getParsingOptions", "name": "MarkdownExtended\\Content::getParsingOptions", "doc": "&quot;Gets the array of options used to parse the content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_setContent", "name": "MarkdownExtended\\Content::setContent", "doc": "&quot;Sets the content&#039;s \&quot;final\&quot; content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_getContent", "name": "MarkdownExtended\\Content::getContent", "doc": "&quot;Gets the content&#039;s \&quot;final\&quot; content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_setCharset", "name": "MarkdownExtended\\Content::setCharset", "doc": "&quot;Sets the content&#039;s character set&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_getCharset", "name": "MarkdownExtended\\Content::getCharset", "doc": "&quot;Gets the content&#039;s character set&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_setTitle", "name": "MarkdownExtended\\Content::setTitle", "doc": "&quot;Sets the content&#039;s title&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_getTitle", "name": "MarkdownExtended\\Content::getTitle", "doc": "&quot;Gets the content&#039;s title&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_setBody", "name": "MarkdownExtended\\Content::setBody", "doc": "&quot;Sets the content&#039;s body&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_getBody", "name": "MarkdownExtended\\Content::getBody", "doc": "&quot;Gets the content&#039;s body&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_setNotes", "name": "MarkdownExtended\\Content::setNotes", "doc": "&quot;Sets the content&#039;s footnotes&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_addNote", "name": "MarkdownExtended\\Content::addNote", "doc": "&quot;Adds a content&#039;s footnote&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_getNotes", "name": "MarkdownExtended\\Content::getNotes", "doc": "&quot;Gets the content&#039;s notes&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_getNotesFormatted", "name": "MarkdownExtended\\Content::getNotesFormatted", "doc": "&quot;Gets the content&#039;s notes formatted in current output format&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_setMetadata", "name": "MarkdownExtended\\Content::setMetadata", "doc": "&quot;Sets content&#039;s metadata&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_addMetadata", "name": "MarkdownExtended\\Content::addMetadata", "doc": "&quot;Adds a new content&#039;s metadata&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_getMetadata", "name": "MarkdownExtended\\Content::getMetadata", "doc": "&quot;Gets one or all content&#039;s metadata&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Content", "fromLink": "MarkdownExtended/Content.html", "link": "MarkdownExtended/Content.html#method_getMetadataFormatted", "name": "MarkdownExtended\\Content::getMetadataFormatted", "doc": "&quot;Gets content&#039;s metadata formatted in current output format&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Exception", "fromLink": "MarkdownExtended/Exception.html", "link": "MarkdownExtended/Exception/ErrorException.html", "name": "MarkdownExtended\\Exception\\ErrorException", "doc": "&quot;Specific ErrorException with a default status code of 95&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Exception\\ErrorException", "fromLink": "MarkdownExtended/Exception/ErrorException.html", "link": "MarkdownExtended/Exception/ErrorException.html#method___construct", "name": "MarkdownExtended\\Exception\\ErrorException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Exception", "fromLink": "MarkdownExtended/Exception.html", "link": "MarkdownExtended/Exception/Exception.html", "name": "MarkdownExtended\\Exception\\Exception", "doc": "&quot;Specific Exception with a default status code 94&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Exception\\Exception", "fromLink": "MarkdownExtended/Exception/Exception.html", "link": "MarkdownExtended/Exception/Exception.html#method___construct", "name": "MarkdownExtended\\Exception\\Exception::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Exception", "fromLink": "MarkdownExtended/Exception.html", "link": "MarkdownExtended/Exception/FileSystemException.html", "name": "MarkdownExtended\\Exception\\FileSystemException", "doc": "&quot;Specific Exception to use for file-system errors, with a default status code of 91&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Exception\\FileSystemException", "fromLink": "MarkdownExtended/Exception/FileSystemException.html", "link": "MarkdownExtended/Exception/FileSystemException.html#method___construct", "name": "MarkdownExtended\\Exception\\FileSystemException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Exception", "fromLink": "MarkdownExtended/Exception.html", "link": "MarkdownExtended/Exception/InvalidArgumentException.html", "name": "MarkdownExtended\\Exception\\InvalidArgumentException", "doc": "&quot;Specific InvalidArgumentException with a default status code of 90&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Exception\\InvalidArgumentException", "fromLink": "MarkdownExtended/Exception/InvalidArgumentException.html", "link": "MarkdownExtended/Exception/InvalidArgumentException.html#method___construct", "name": "MarkdownExtended\\Exception\\InvalidArgumentException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Exception", "fromLink": "MarkdownExtended/Exception.html", "link": "MarkdownExtended/Exception/RuntimeException.html", "name": "MarkdownExtended\\Exception\\RuntimeException", "doc": "&quot;Specific RuntimeException with a default status code of 93&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Exception\\RuntimeException", "fromLink": "MarkdownExtended/Exception/RuntimeException.html", "link": "MarkdownExtended/Exception/RuntimeException.html#method___construct", "name": "MarkdownExtended\\Exception\\RuntimeException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Exception", "fromLink": "MarkdownExtended/Exception.html", "link": "MarkdownExtended/Exception/UnexpectedValueException.html", "name": "MarkdownExtended\\Exception\\UnexpectedValueException", "doc": "&quot;Specific UnexpectedValueException with a default status code of 92&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Exception\\UnexpectedValueException", "fromLink": "MarkdownExtended/Exception/UnexpectedValueException.html", "link": "MarkdownExtended/Exception/UnexpectedValueException.html#method___construct", "name": "MarkdownExtended\\Exception\\UnexpectedValueException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar", "fromLink": "MarkdownExtended/Grammar.html", "link": "MarkdownExtended/Grammar/AbstractGamut.html", "name": "MarkdownExtended\\Grammar\\AbstractGamut", "doc": "&quot;A basic class for filters and tools with management of parsing \&quot;hashes\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\AbstractGamut", "fromLink": "MarkdownExtended/Grammar/AbstractGamut.html", "link": "MarkdownExtended/Grammar/AbstractGamut.html#method_runGamut", "name": "MarkdownExtended\\Grammar\\AbstractGamut::runGamut", "doc": "&quot;Run a gamut stack from a filter or tool&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\AbstractGamut", "fromLink": "MarkdownExtended/Grammar/AbstractGamut.html", "link": "MarkdownExtended/Grammar/AbstractGamut.html#method_resetHash", "name": "MarkdownExtended\\Grammar\\AbstractGamut::resetHash", "doc": "&quot;Reset the hash table&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\AbstractGamut", "fromLink": "MarkdownExtended/Grammar/AbstractGamut.html", "link": "MarkdownExtended/Grammar/AbstractGamut.html#method_setHash", "name": "MarkdownExtended\\Grammar\\AbstractGamut::setHash", "doc": "&quot;Reference a new hash&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\AbstractGamut", "fromLink": "MarkdownExtended/Grammar/AbstractGamut.html", "link": "MarkdownExtended/Grammar/AbstractGamut.html#method_getHash", "name": "MarkdownExtended\\Grammar\\AbstractGamut::getHash", "doc": "&quot;Retrieve a hash by its key&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar", "fromLink": "MarkdownExtended/Grammar.html", "link": "MarkdownExtended/Grammar/Filter.html", "name": "MarkdownExtended\\Grammar\\Filter", "doc": "&quot;Base class for all filters&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter.html#method_getDefaultMethod", "name": "MarkdownExtended\\Grammar\\Filter::getDefaultMethod", "doc": "&quot;Must return a method name&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter::transform", "doc": "&quot;Must process the filter on a text&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter.html#method_hashPart", "name": "MarkdownExtended\\Grammar\\Filter::hashPart", "doc": "&quot;Creates a hash for any sub-content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter.html#method_hashBlock", "name": "MarkdownExtended\\Grammar\\Filter::hashBlock", "doc": "&quot;Shortcut function for hashPart with block-level boundaries.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter.html#method_hashClean", "name": "MarkdownExtended\\Grammar\\Filter::hashClean", "doc": "&quot;Called whenever a tag must be hashed when a function insert a \&quot;clean\&quot; tag\nin $text, it pass through this function and is automatically escaped,\nblocking invalid nested overlap.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter.html#method_unhash", "name": "MarkdownExtended\\Grammar\\Filter::unhash", "doc": "&quot;Swap back in all the tags hashed by _HashHTMLBlocks.&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/Abbreviation.html", "name": "MarkdownExtended\\Grammar\\Filter\\Abbreviation", "doc": "&quot;Process Markdown abbreviations&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Abbreviation", "fromLink": "MarkdownExtended/Grammar/Filter/Abbreviation.html", "link": "MarkdownExtended/Grammar/Filter/Abbreviation.html#method__setup", "name": "MarkdownExtended\\Grammar\\Filter\\Abbreviation::_setup", "doc": "&quot;Prepare masks for predefined abbreviations and descriptions&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Abbreviation", "fromLink": "MarkdownExtended/Grammar/Filter/Abbreviation.html", "link": "MarkdownExtended/Grammar/Filter/Abbreviation.html#method__teardown", "name": "MarkdownExtended\\Grammar\\Filter\\Abbreviation::_teardown", "doc": "&quot;Reset masks created by the &lt;code&gt;_setup()&lt;\/code&gt; method&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Abbreviation", "fromLink": "MarkdownExtended/Grammar/Filter/Abbreviation.html", "link": "MarkdownExtended/Grammar/Filter/Abbreviation.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\Abbreviation::transform", "doc": "&quot;Find defined abbreviations in text and wrap them in &lt;abbr&gt; elements&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Abbreviation", "fromLink": "MarkdownExtended/Grammar/Filter/Abbreviation.html", "link": "MarkdownExtended/Grammar/Filter/Abbreviation.html#method_strip", "name": "MarkdownExtended\\Grammar\\Filter\\Abbreviation::strip", "doc": "&quot;Strips abbreviations from text, stores titles in hash references.&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/Anchor.html", "name": "MarkdownExtended\\Grammar\\Filter\\Anchor", "doc": "&quot;Process Markdown links&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Anchor", "fromLink": "MarkdownExtended/Grammar/Filter/Anchor.html", "link": "MarkdownExtended/Grammar/Filter/Anchor.html#method__setup", "name": "MarkdownExtended\\Grammar\\Filter\\Anchor::_setup", "doc": "&quot;Set up the &lt;code&gt;in_anchor&lt;\/code&gt; config flag on &lt;code&gt;false&lt;\/code&gt;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Anchor", "fromLink": "MarkdownExtended/Grammar/Filter/Anchor.html", "link": "MarkdownExtended/Grammar/Filter/Anchor.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\Anchor::transform", "doc": "&quot;Turn Markdown link shortcuts into XHTML &lt;a&gt; tags.&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/AutoLink.html", "name": "MarkdownExtended\\Grammar\\Filter\\AutoLink", "doc": "&quot;Process Markdown automatic links&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\AutoLink", "fromLink": "MarkdownExtended/Grammar/Filter/AutoLink.html", "link": "MarkdownExtended/Grammar/Filter/AutoLink.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\AutoLink::transform", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/BlockInclusion.html", "name": "MarkdownExtended\\Grammar\\Filter\\BlockInclusion", "doc": "&quot;Process the inclusion of third-party Markdown files&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\BlockInclusion", "fromLink": "MarkdownExtended/Grammar/Filter/BlockInclusion.html", "link": "MarkdownExtended/Grammar/Filter/BlockInclusion.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\BlockInclusion::transform", "doc": "&quot;Find defined inclusion blocks&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/BlockQuote.html", "name": "MarkdownExtended\\Grammar\\Filter\\BlockQuote", "doc": "&quot;Process Markdown blockquotes&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\BlockQuote", "fromLink": "MarkdownExtended/Grammar/Filter/BlockQuote.html", "link": "MarkdownExtended/Grammar/Filter/BlockQuote.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\BlockQuote::transform", "doc": "&quot;Create blockquotes blocks&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/CodeBlock.html", "name": "MarkdownExtended\\Grammar\\Filter\\CodeBlock", "doc": "&quot;Process Markdown code blocks&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\CodeBlock", "fromLink": "MarkdownExtended/Grammar/Filter/CodeBlock.html", "link": "MarkdownExtended/Grammar/Filter/CodeBlock.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\CodeBlock::transform", "doc": "&quot;Process Markdown &lt;code&gt;&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;&lt;\/code&gt; blocks.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\CodeBlock", "fromLink": "MarkdownExtended/Grammar/Filter/CodeBlock.html", "link": "MarkdownExtended/Grammar/Filter/CodeBlock.html#method_span", "name": "MarkdownExtended\\Grammar\\Filter\\CodeBlock::span", "doc": "&quot;Create a code span markup for $code. Called from handleSpanToken.&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/DefinitionList.html", "name": "MarkdownExtended\\Grammar\\Filter\\DefinitionList", "doc": "&quot;Process Markdown definitions lists&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\DefinitionList", "fromLink": "MarkdownExtended/Grammar/Filter/DefinitionList.html", "link": "MarkdownExtended/Grammar/Filter/DefinitionList.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\DefinitionList::transform", "doc": "&quot;Form HTML definition lists.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\DefinitionList", "fromLink": "MarkdownExtended/Grammar/Filter/DefinitionList.html", "link": "MarkdownExtended/Grammar/Filter/DefinitionList.html#method_transformItems", "name": "MarkdownExtended\\Grammar\\Filter\\DefinitionList::transformItems", "doc": "&quot;Process the contents of a single definition list, splitting it\ninto individual term and definition list items.&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/Detab.html", "name": "MarkdownExtended\\Grammar\\Filter\\Detab", "doc": "&quot;Class Detab&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Detab", "fromLink": "MarkdownExtended/Grammar/Filter/Detab.html", "link": "MarkdownExtended/Grammar/Filter/Detab.html#method_init", "name": "MarkdownExtended\\Grammar\\Filter\\Detab::init", "doc": "&quot;Check for the availability of the function in the &lt;code&gt;utf8_strlen&lt;\/code&gt; property\n(initially &lt;code&gt;mb_strlen&lt;\/code&gt;). If the function is not available, create a\nfunction that will loosely count the number of UTF-8 characters with a\nregular expression.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Detab", "fromLink": "MarkdownExtended/Grammar/Filter/Detab.html", "link": "MarkdownExtended/Grammar/Filter/Detab.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\Detab::transform", "doc": "&quot;Replace tabs with the appropriate amount of space.&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/Emphasis.html", "name": "MarkdownExtended\\Grammar\\Filter\\Emphasis", "doc": "&quot;Process Markdown emphasis: bold &amp;amp; italic&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Emphasis", "fromLink": "MarkdownExtended/Grammar/Filter/Emphasis.html", "link": "MarkdownExtended/Grammar/Filter/Emphasis.html#method_prepare", "name": "MarkdownExtended\\Grammar\\Filter\\Emphasis::prepare", "doc": "&quot;Prepare regular expressions for searching emphasis tokens in any context.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Emphasis", "fromLink": "MarkdownExtended/Grammar/Filter/Emphasis.html", "link": "MarkdownExtended/Grammar/Filter/Emphasis.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\Emphasis::transform", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/FencedCodeBlock.html", "name": "MarkdownExtended\\Grammar\\Filter\\FencedCodeBlock", "doc": "&quot;Process Markdown fenced code blocks&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\FencedCodeBlock", "fromLink": "MarkdownExtended/Grammar/Filter/FencedCodeBlock.html", "link": "MarkdownExtended/Grammar/Filter/FencedCodeBlock.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\FencedCodeBlock::transform", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/HTML.html", "name": "MarkdownExtended\\Grammar\\Filter\\HTML", "doc": "&quot;Process Markdown in-text HTML&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\HTML", "fromLink": "MarkdownExtended/Grammar/Filter/HTML.html", "link": "MarkdownExtended/Grammar/Filter/HTML.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\HTML::transform", "doc": "&quot;Hashify HTML Blocks and \&quot;clean tags\&quot;.&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/HardBreak.html", "name": "MarkdownExtended\\Grammar\\Filter\\HardBreak", "doc": "&quot;Process Markdown hard breaks&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\HardBreak", "fromLink": "MarkdownExtended/Grammar/Filter/HardBreak.html", "link": "MarkdownExtended/Grammar/Filter/HardBreak.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\HardBreak::transform", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/Header.html", "name": "MarkdownExtended\\Grammar\\Filter\\Header", "doc": "&quot;Process Markdown headers&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Header", "fromLink": "MarkdownExtended/Grammar/Filter/Header.html", "link": "MarkdownExtended/Grammar/Filter/Header.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\Header::transform", "doc": "&quot;Redefined to add id attribute support.&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/HorizontalRule.html", "name": "MarkdownExtended\\Grammar\\Filter\\HorizontalRule", "doc": "&quot;Process Markdown horizontal rules&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\HorizontalRule", "fromLink": "MarkdownExtended/Grammar/Filter/HorizontalRule.html", "link": "MarkdownExtended/Grammar/Filter/HorizontalRule.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\HorizontalRule::transform", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/Image.html", "name": "MarkdownExtended\\Grammar\\Filter\\Image", "doc": "&quot;Process Markdown images&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Image", "fromLink": "MarkdownExtended/Grammar/Filter/Image.html", "link": "MarkdownExtended/Grammar/Filter/Image.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\Image::transform", "doc": "&quot;Turn Markdown image shortcuts into &lt;img&gt; tags.&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/LinkDefinition.html", "name": "MarkdownExtended\\Grammar\\Filter\\LinkDefinition", "doc": "&quot;Process Markdown definitions links&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\LinkDefinition", "fromLink": "MarkdownExtended/Grammar/Filter/LinkDefinition.html", "link": "MarkdownExtended/Grammar/Filter/LinkDefinition.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\LinkDefinition::transform", "doc": "&quot;Mandatory method&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\LinkDefinition", "fromLink": "MarkdownExtended/Grammar/Filter/LinkDefinition.html", "link": "MarkdownExtended/Grammar/Filter/LinkDefinition.html#method_strip", "name": "MarkdownExtended\\Grammar\\Filter\\LinkDefinition::strip", "doc": "&quot;Strips link definitions from text, stores the URLs and titles in hash references&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/ListItem.html", "name": "MarkdownExtended\\Grammar\\Filter\\ListItem", "doc": "&quot;Process Markdown list items&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\ListItem", "fromLink": "MarkdownExtended/Grammar/Filter/ListItem.html", "link": "MarkdownExtended/Grammar/Filter/ListItem.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\ListItem::transform", "doc": "&quot;Form HTML ordered (numbered) and unordered (bulleted) lists.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\ListItem", "fromLink": "MarkdownExtended/Grammar/Filter/ListItem.html", "link": "MarkdownExtended/Grammar/Filter/ListItem.html#method_transformItems", "name": "MarkdownExtended\\Grammar\\Filter\\ListItem::transformItems", "doc": "&quot;Process the contents of a single ordered or unordered list, splitting it\n into individual list items.&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/Maths.html", "name": "MarkdownExtended\\Grammar\\Filter\\Maths", "doc": "&quot;Process Markdown mathematics&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Maths", "fromLink": "MarkdownExtended/Grammar/Filter/Maths.html", "link": "MarkdownExtended/Grammar/Filter/Maths.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\Maths::transform", "doc": "&quot;Wrap text between &amp;#91; and &amp;#93; in display math tags.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Maths", "fromLink": "MarkdownExtended/Grammar/Filter/Maths.html", "link": "MarkdownExtended/Grammar/Filter/Maths.html#method_span", "name": "MarkdownExtended\\Grammar\\Filter\\Maths::span", "doc": "&quot;Build each maths span&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/MetaData.html", "name": "MarkdownExtended\\Grammar\\Filter\\MetaData", "doc": "&quot;Process Markdown meta data&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\MetaData", "fromLink": "MarkdownExtended/Grammar/Filter/MetaData.html", "link": "MarkdownExtended/Grammar/Filter/MetaData.html#method__setup", "name": "MarkdownExtended\\Grammar\\Filter\\MetaData::_setup", "doc": "&quot;Prepare object with configuration&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\MetaData", "fromLink": "MarkdownExtended/Grammar/Filter/MetaData.html", "link": "MarkdownExtended/Grammar/Filter/MetaData.html#method_strip", "name": "MarkdownExtended\\Grammar\\Filter\\MetaData::strip", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\MetaData", "fromLink": "MarkdownExtended/Grammar/Filter/MetaData.html", "link": "MarkdownExtended/Grammar/Filter/MetaData.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\MetaData::transform", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\MetaData", "fromLink": "MarkdownExtended/Grammar/Filter/MetaData.html", "link": "MarkdownExtended/Grammar/Filter/MetaData.html#method_append", "name": "MarkdownExtended\\Grammar\\Filter\\MetaData::append", "doc": "&quot;Build meta data strings&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/Note.html", "name": "MarkdownExtended\\Grammar\\Filter\\Note", "doc": "&quot;Process Markdown notes: footnotes, glossary and bibliography notes&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Note", "fromLink": "MarkdownExtended/Grammar/Filter/Note.html", "link": "MarkdownExtended/Grammar/Filter/Note.html#method__setup", "name": "MarkdownExtended\\Grammar\\Filter\\Note::_setup", "doc": "&quot;Prepare all required arrays&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Note", "fromLink": "MarkdownExtended/Grammar/Filter/Note.html", "link": "MarkdownExtended/Grammar/Filter/Note.html#method_strip", "name": "MarkdownExtended\\Grammar\\Filter\\Note::strip", "doc": "&quot;Strips link definitions from text, stores the URLs and titles in hash references.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Note", "fromLink": "MarkdownExtended/Grammar/Filter/Note.html", "link": "MarkdownExtended/Grammar/Filter/Note.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\Note::transform", "doc": "&quot;Replace footnote references in $text [string][#id] and [^id] with a special text-token\nwhich will be replaced by the actual footnote marker in appendFootnotes.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Note", "fromLink": "MarkdownExtended/Grammar/Filter/Note.html", "link": "MarkdownExtended/Grammar/Filter/Note.html#method_append", "name": "MarkdownExtended\\Grammar\\Filter\\Note::append", "doc": "&quot;Append footnote list to text.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Note", "fromLink": "MarkdownExtended/Grammar/Filter/Note.html", "link": "MarkdownExtended/Grammar/Filter/Note.html#method_transformFootnote", "name": "MarkdownExtended\\Grammar\\Filter\\Note::transformFootnote", "doc": "&quot;Append footnote list to Content.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Note", "fromLink": "MarkdownExtended/Grammar/Filter/Note.html", "link": "MarkdownExtended/Grammar/Filter/Note.html#method_transformGlossary", "name": "MarkdownExtended\\Grammar\\Filter\\Note::transformGlossary", "doc": "&quot;Append glossary notes list to Content.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Note", "fromLink": "MarkdownExtended/Grammar/Filter/Note.html", "link": "MarkdownExtended/Grammar/Filter/Note.html#method_transformBibliography", "name": "MarkdownExtended\\Grammar\\Filter\\Note::transformBibliography", "doc": "&quot;Append bibliography notes list to Content.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Note", "fromLink": "MarkdownExtended/Grammar/Filter/Note.html", "link": "MarkdownExtended/Grammar/Filter/Note.html#method_getTypeInfo", "name": "MarkdownExtended\\Grammar\\Filter\\Note::getTypeInfo", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/Span.html", "name": "MarkdownExtended\\Grammar\\Filter\\Span", "doc": "&quot;Process Markdown spans&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Span", "fromLink": "MarkdownExtended/Grammar/Filter/Span.html", "link": "MarkdownExtended/Grammar/Filter/Span.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\Span::transform", "doc": "&quot;Take the string $str and parse it into tokens, hashing embedded HTML,\nescaped characters and handling code and maths spans.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Span", "fromLink": "MarkdownExtended/Grammar/Filter/Span.html", "link": "MarkdownExtended/Grammar/Filter/Span.html#method_handleSpanToken", "name": "MarkdownExtended\\Grammar\\Filter\\Span::handleSpanToken", "doc": "&quot;Handle $token provided by parseSpan by determining its nature and\nreturning the corresponding value that should replace it.&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar\\Filter", "fromLink": "MarkdownExtended/Grammar/Filter.html", "link": "MarkdownExtended/Grammar/Filter/Table.html", "name": "MarkdownExtended\\Grammar\\Filter\\Table", "doc": "&quot;Process Markdown tables&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Filter\\Table", "fromLink": "MarkdownExtended/Grammar/Filter/Table.html", "link": "MarkdownExtended/Grammar/Filter/Table.html#method_transform", "name": "MarkdownExtended\\Grammar\\Filter\\Table::transform", "doc": "&quot;Form HTML tables.&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar", "fromLink": "MarkdownExtended/Grammar.html", "link": "MarkdownExtended/Grammar/GamutLoader.html", "name": "MarkdownExtended\\Grammar\\GamutLoader", "doc": "&quot;Central class to execute filters and tools methods on a content&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\GamutLoader", "fromLink": "MarkdownExtended/Grammar/GamutLoader.html", "link": "MarkdownExtended/Grammar/GamutLoader.html#method_getGamutStack", "name": "MarkdownExtended\\Grammar\\GamutLoader::getGamutStack", "doc": "&quot;Gets a gamuts&#039; array by name&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\GamutLoader", "fromLink": "MarkdownExtended/Grammar/GamutLoader.html", "link": "MarkdownExtended/Grammar/GamutLoader.html#method_getGamutType", "name": "MarkdownExtended\\Grammar\\GamutLoader::getGamutType", "doc": "&quot;Gets the type of gamut in \&quot;filter\&quot;, \&quot;tools\&quot; or other&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\GamutLoader", "fromLink": "MarkdownExtended/Grammar/GamutLoader.html", "link": "MarkdownExtended/Grammar/GamutLoader.html#method_isGamutStackName", "name": "MarkdownExtended\\Grammar\\GamutLoader::isGamutStackName", "doc": "&quot;Tests if a string seems to be a gamuts&#039; stack reference&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\GamutLoader", "fromLink": "MarkdownExtended/Grammar/GamutLoader.html", "link": "MarkdownExtended/Grammar/GamutLoader.html#method_getGamutBaseName", "name": "MarkdownExtended\\Grammar\\GamutLoader::getGamutBaseName", "doc": "&quot;Gets the \&quot;base name\&quot; of a gamut entry in \&quot;filter:class\&quot;, \&quot;tools\&quot; or \&quot;custom class\&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\GamutLoader", "fromLink": "MarkdownExtended/Grammar/GamutLoader.html", "link": "MarkdownExtended/Grammar/GamutLoader.html#method_getAllGamuts", "name": "MarkdownExtended\\Grammar\\GamutLoader::getAllGamuts", "doc": "&quot;Gets an array of all defined gamuts&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\GamutLoader", "fromLink": "MarkdownExtended/Grammar/GamutLoader.html", "link": "MarkdownExtended/Grammar/GamutLoader.html#method_getAllGamutsReversed", "name": "MarkdownExtended\\Grammar\\GamutLoader::getAllGamutsReversed", "doc": "&quot;Gets an array of all defined gamuts as keys&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\GamutLoader", "fromLink": "MarkdownExtended/Grammar/GamutLoader.html", "link": "MarkdownExtended/Grammar/GamutLoader.html#method_isGamutEnabled", "name": "MarkdownExtended\\Grammar\\GamutLoader::isGamutEnabled", "doc": "&quot;Tests if a gamut is enabled&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\GamutLoader", "fromLink": "MarkdownExtended/Grammar/GamutLoader.html", "link": "MarkdownExtended/Grammar/GamutLoader.html#method_runGamuts", "name": "MarkdownExtended\\Grammar\\GamutLoader::runGamuts", "doc": "&quot;Runs a list of gamuts by priority on a content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\GamutLoader", "fromLink": "MarkdownExtended/Grammar/GamutLoader.html", "link": "MarkdownExtended/Grammar/GamutLoader.html#method_runGamutsMethod", "name": "MarkdownExtended\\Grammar\\GamutLoader::runGamutsMethod", "doc": "&quot;Runs a specific method of a list of gamuts by priority on a content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\GamutLoader", "fromLink": "MarkdownExtended/Grammar/GamutLoader.html", "link": "MarkdownExtended/Grammar/GamutLoader.html#method_runGamut", "name": "MarkdownExtended\\Grammar\\GamutLoader::runGamut", "doc": "&quot;Runs a single gamut on a content&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar", "fromLink": "MarkdownExtended/Grammar.html", "link": "MarkdownExtended/Grammar/Lexer.html", "name": "MarkdownExtended\\Grammar\\Lexer", "doc": "&quot;The lexer dispatches the content to the gamuts loader&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Lexer", "fromLink": "MarkdownExtended/Grammar/Lexer.html", "link": "MarkdownExtended/Grammar/Lexer.html#method___construct", "name": "MarkdownExtended\\Grammar\\Lexer::__construct", "doc": "&quot;Sets up some regex masks based on current configuration&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Lexer", "fromLink": "MarkdownExtended/Grammar/Lexer.html", "link": "MarkdownExtended/Grammar/Lexer.html#method_parse", "name": "MarkdownExtended\\Grammar\\Lexer::parse", "doc": "&quot;Performs some pre-processing on the input text\nand pass it through the document gamut.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Lexer", "fromLink": "MarkdownExtended/Grammar/Lexer.html", "link": "MarkdownExtended/Grammar/Lexer.html#method_runGamut", "name": "MarkdownExtended\\Grammar\\Lexer::runGamut", "doc": "&quot;Run a gamut stack from a filter or tool&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Lexer", "fromLink": "MarkdownExtended/Grammar/Lexer.html", "link": "MarkdownExtended/Grammar/Lexer.html#method_runGamuts", "name": "MarkdownExtended\\Grammar\\Lexer::runGamuts", "doc": "&quot;Call to MarkdownExtended\\Grammar\\GamutLoader for an array of gamuts&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Grammar", "fromLink": "MarkdownExtended/Grammar.html", "link": "MarkdownExtended/Grammar/Tools.html", "name": "MarkdownExtended\\Grammar\\Tools", "doc": "&quot;The base class for tools&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Tools", "fromLink": "MarkdownExtended/Grammar/Tools.html", "link": "MarkdownExtended/Grammar/Tools.html#method_getDefaultMethod", "name": "MarkdownExtended\\Grammar\\Tools::getDefaultMethod", "doc": "&quot;Must return a method name&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Tools", "fromLink": "MarkdownExtended/Grammar/Tools.html", "link": "MarkdownExtended/Grammar/Tools.html#method_prepareOutputFormat", "name": "MarkdownExtended\\Grammar\\Tools::prepareOutputFormat", "doc": "&quot;Works on a content before parsing&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Tools", "fromLink": "MarkdownExtended/Grammar/Tools.html", "link": "MarkdownExtended/Grammar/Tools.html#method_teardownOutputFormat", "name": "MarkdownExtended\\Grammar\\Tools::teardownOutputFormat", "doc": "&quot;Works on a content after parsing&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Tools", "fromLink": "MarkdownExtended/Grammar/Tools.html", "link": "MarkdownExtended/Grammar/Tools.html#method_AppendEndingNewLines", "name": "MarkdownExtended\\Grammar\\Tools::AppendEndingNewLines", "doc": "&quot;Make sure $text ends with a couple of newlines&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Tools", "fromLink": "MarkdownExtended/Grammar/Tools.html", "link": "MarkdownExtended/Grammar/Tools.html#method_EncodeAmpAndAngle", "name": "MarkdownExtended\\Grammar\\Tools::EncodeAmpAndAngle", "doc": "&quot;Smart processing for ampersands and angle brackets that need to\nbe encoded. Valid character entities are left alone unless the\nno-entities mode is set.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Tools", "fromLink": "MarkdownExtended/Grammar/Tools.html", "link": "MarkdownExtended/Grammar/Tools.html#method_EncodeAttribute", "name": "MarkdownExtended\\Grammar\\Tools::EncodeAttribute", "doc": "&quot;Encode text for a double-quoted HTML attribute. This function\nis &lt;em&gt;not&lt;\/em&gt; suitable for attributes enclosed in single quotes.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Tools", "fromLink": "MarkdownExtended/Grammar/Tools.html", "link": "MarkdownExtended/Grammar/Tools.html#method_ExtractAttributes", "name": "MarkdownExtended\\Grammar\\Tools::ExtractAttributes", "doc": "&quot;Extract attributes from string &#039;a=\&quot;b\&quot;&#039;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Tools", "fromLink": "MarkdownExtended/Grammar/Tools.html", "link": "MarkdownExtended/Grammar/Tools.html#method_Outdent", "name": "MarkdownExtended\\Grammar\\Tools::Outdent", "doc": "&quot;Remove one level of line-leading tabs or spaces&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Tools", "fromLink": "MarkdownExtended/Grammar/Tools.html", "link": "MarkdownExtended/Grammar/Tools.html#method_RebuildParagraph", "name": "MarkdownExtended\\Grammar\\Tools::RebuildParagraph", "doc": "&quot;Process paragraphs&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Tools", "fromLink": "MarkdownExtended/Grammar/Tools.html", "link": "MarkdownExtended/Grammar/Tools.html#method_RemoveUtf8Marker", "name": "MarkdownExtended\\Grammar\\Tools::RemoveUtf8Marker", "doc": "&quot;Remove UTF-8 BOM and marker character in input, if present.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Tools", "fromLink": "MarkdownExtended/Grammar/Tools.html", "link": "MarkdownExtended/Grammar/Tools.html#method_StandardizeLineEnding", "name": "MarkdownExtended\\Grammar\\Tools::StandardizeLineEnding", "doc": "&quot;Standardize line endings: DOS to Unix and Mac to Unix&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Grammar\\Tools", "fromLink": "MarkdownExtended/Grammar/Tools.html", "link": "MarkdownExtended/Grammar/Tools.html#method_StripSpacedLines", "name": "MarkdownExtended\\Grammar\\Tools::StripSpacedLines", "doc": "&quot;Strip any lines consisting only of spaces and tabs.&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended", "fromLink": "MarkdownExtended.html", "link": "MarkdownExtended/MarkdownExtended.html", "name": "MarkdownExtended\\MarkdownExtended", "doc": "&quot;PHP Markdown Extended&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\MarkdownExtended", "fromLink": "MarkdownExtended/MarkdownExtended.html", "link": "MarkdownExtended/MarkdownExtended.html#method_getAppInfo", "name": "MarkdownExtended\\MarkdownExtended::getAppInfo", "doc": "&quot;Gets app&#039;s information&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\MarkdownExtended", "fromLink": "MarkdownExtended/MarkdownExtended.html", "link": "MarkdownExtended/MarkdownExtended.html#method_getDefaults", "name": "MarkdownExtended\\MarkdownExtended::getDefaults", "doc": "&quot;App&#039;s default settings&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\MarkdownExtended", "fromLink": "MarkdownExtended/MarkdownExtended.html", "link": "MarkdownExtended/MarkdownExtended.html#method_parse", "name": "MarkdownExtended\\MarkdownExtended::parse", "doc": "&quot;Parse a markdown content or file&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\MarkdownExtended", "fromLink": "MarkdownExtended/MarkdownExtended.html", "link": "MarkdownExtended/MarkdownExtended.html#method_parseString", "name": "MarkdownExtended\\MarkdownExtended::parseString", "doc": "&quot;Parse a markdown content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\MarkdownExtended", "fromLink": "MarkdownExtended/MarkdownExtended.html", "link": "MarkdownExtended/MarkdownExtended.html#method_parseSource", "name": "MarkdownExtended\\MarkdownExtended::parseSource", "doc": "&quot;Parse a markdown file&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended", "fromLink": "MarkdownExtended.html", "link": "MarkdownExtended/OutputFormatBag.html", "name": "MarkdownExtended\\OutputFormatBag", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\OutputFormatBag", "fromLink": "MarkdownExtended/OutputFormatBag.html", "link": "MarkdownExtended/OutputFormatBag.html#method_load", "name": "MarkdownExtended\\OutputFormatBag::load", "doc": "&quot;Loads a new formatter&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormatBag", "fromLink": "MarkdownExtended/OutputFormatBag.html", "link": "MarkdownExtended/OutputFormatBag.html#method___call", "name": "MarkdownExtended\\OutputFormatBag::__call", "doc": "&quot;Magic method to pass any called method from the bag to its formatter&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormatBag", "fromLink": "MarkdownExtended/OutputFormatBag.html", "link": "MarkdownExtended/OutputFormatBag.html#method_setFormatter", "name": "MarkdownExtended\\OutputFormatBag::setFormatter", "doc": "&quot;Set the current formatter&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormatBag", "fromLink": "MarkdownExtended/OutputFormatBag.html", "link": "MarkdownExtended/OutputFormatBag.html#method_getFormatter", "name": "MarkdownExtended\\OutputFormatBag::getFormatter", "doc": "&quot;Get current formatter&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\OutputFormat", "fromLink": "MarkdownExtended/OutputFormat.html", "link": "MarkdownExtended/OutputFormat/AbstractOutputFormat.html", "name": "MarkdownExtended\\OutputFormat\\AbstractOutputFormat", "doc": "&quot;A basic output format class&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\AbstractOutputFormat", "fromLink": "MarkdownExtended/OutputFormat/AbstractOutputFormat.html", "link": "MarkdownExtended/OutputFormat/AbstractOutputFormat.html#method_buildTag", "name": "MarkdownExtended\\OutputFormat\\AbstractOutputFormat::buildTag", "doc": "&quot;This will try to call a method &lt;code&gt;build{TagName}()&lt;\/code&gt; if it exists, then will try to use\nthe object &lt;code&gt;$tags_map&lt;\/code&gt; static to automatically find what to do, and then call the\ndefault &lt;code&gt;getTagString()&lt;\/code&gt; method passing it the arguments.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\AbstractOutputFormat", "fromLink": "MarkdownExtended/OutputFormat/AbstractOutputFormat.html", "link": "MarkdownExtended/OutputFormat/AbstractOutputFormat.html#method_getTagString", "name": "MarkdownExtended\\OutputFormat\\AbstractOutputFormat::getTagString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\AbstractOutputFormat", "fromLink": "MarkdownExtended/OutputFormat/AbstractOutputFormat.html", "link": "MarkdownExtended/OutputFormat/AbstractOutputFormat.html#method_getNotesToString", "name": "MarkdownExtended\\OutputFormat\\AbstractOutputFormat::getNotesToString", "doc": "&quot;Gets the notes list as string&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\AbstractOutputFormat", "fromLink": "MarkdownExtended/OutputFormat/AbstractOutputFormat.html", "link": "MarkdownExtended/OutputFormat/AbstractOutputFormat.html#method_getMetadataToString", "name": "MarkdownExtended\\OutputFormat\\AbstractOutputFormat::getMetadataToString", "doc": "&quot;Gets the metadata list as string&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\OutputFormat", "fromLink": "MarkdownExtended/OutputFormat.html", "link": "MarkdownExtended/OutputFormat/Html.html", "name": "MarkdownExtended\\OutputFormat\\Html", "doc": "&quot;Format a content in full HTML&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Html", "fromLink": "MarkdownExtended/OutputFormat/Html.html", "link": "MarkdownExtended/OutputFormat/Html.html#method___construct", "name": "MarkdownExtended\\OutputFormat\\Html::__construct", "doc": "&quot;Get the configuration &#039;empty&lt;em&gt;element&lt;\/em&gt;suffix&#039;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Html", "fromLink": "MarkdownExtended/OutputFormat/Html.html", "link": "MarkdownExtended/OutputFormat/Html.html#method_getTagString", "name": "MarkdownExtended\\OutputFormat\\Html::getTagString", "doc": "&quot;Builder of HTML tags :\n    &amp;lt;TAG ATTR1=\&quot;ATTR_VAL1\&quot; .&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Html", "fromLink": "MarkdownExtended/OutputFormat/Html.html", "link": "MarkdownExtended/OutputFormat/Html.html#method_buildTitle", "name": "MarkdownExtended\\OutputFormat\\Html::buildTitle", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Html", "fromLink": "MarkdownExtended/OutputFormat/Html.html", "link": "MarkdownExtended/OutputFormat/Html.html#method_buildMetaData", "name": "MarkdownExtended\\OutputFormat\\Html::buildMetaData", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Html", "fromLink": "MarkdownExtended/OutputFormat/Html.html", "link": "MarkdownExtended/OutputFormat/Html.html#method_buildComment", "name": "MarkdownExtended\\OutputFormat\\Html::buildComment", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Html", "fromLink": "MarkdownExtended/OutputFormat/Html.html", "link": "MarkdownExtended/OutputFormat/Html.html#method_buildParagraph", "name": "MarkdownExtended\\OutputFormat\\Html::buildParagraph", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Html", "fromLink": "MarkdownExtended/OutputFormat/Html.html", "link": "MarkdownExtended/OutputFormat/Html.html#method_buildLink", "name": "MarkdownExtended\\OutputFormat\\Html::buildLink", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Html", "fromLink": "MarkdownExtended/OutputFormat/Html.html", "link": "MarkdownExtended/OutputFormat/Html.html#method_buildPreformatted", "name": "MarkdownExtended\\OutputFormat\\Html::buildPreformatted", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Html", "fromLink": "MarkdownExtended/OutputFormat/Html.html", "link": "MarkdownExtended/OutputFormat/Html.html#method_buildMaths", "name": "MarkdownExtended\\OutputFormat\\Html::buildMaths", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Html", "fromLink": "MarkdownExtended/OutputFormat/Html.html", "link": "MarkdownExtended/OutputFormat/Html.html#method_buildMathsBlock", "name": "MarkdownExtended\\OutputFormat\\Html::buildMathsBlock", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Html", "fromLink": "MarkdownExtended/OutputFormat/Html.html", "link": "MarkdownExtended/OutputFormat/Html.html#method_buildMathsSpan", "name": "MarkdownExtended\\OutputFormat\\Html::buildMathsSpan", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Html", "fromLink": "MarkdownExtended/OutputFormat/Html.html", "link": "MarkdownExtended/OutputFormat/Html.html#method_buildFootnoteStandardItem", "name": "MarkdownExtended\\OutputFormat\\Html::buildFootnoteStandardItem", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Html", "fromLink": "MarkdownExtended/OutputFormat/Html.html", "link": "MarkdownExtended/OutputFormat/Html.html#method_buildFootnoteGlossaryItem", "name": "MarkdownExtended\\OutputFormat\\Html::buildFootnoteGlossaryItem", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Html", "fromLink": "MarkdownExtended/OutputFormat/Html.html", "link": "MarkdownExtended/OutputFormat/Html.html#method_buildFootnoteBibliographyItem", "name": "MarkdownExtended\\OutputFormat\\Html::buildFootnoteBibliographyItem", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Html", "fromLink": "MarkdownExtended/OutputFormat/Html.html", "link": "MarkdownExtended/OutputFormat/Html.html#method_buildFootnoteStandardLink", "name": "MarkdownExtended\\OutputFormat\\Html::buildFootnoteStandardLink", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Html", "fromLink": "MarkdownExtended/OutputFormat/Html.html", "link": "MarkdownExtended/OutputFormat/Html.html#method_buildFootnoteGlossaryLink", "name": "MarkdownExtended\\OutputFormat\\Html::buildFootnoteGlossaryLink", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Html", "fromLink": "MarkdownExtended/OutputFormat/Html.html", "link": "MarkdownExtended/OutputFormat/Html.html#method_buildFootnoteBibliographyLink", "name": "MarkdownExtended\\OutputFormat\\Html::buildFootnoteBibliographyLink", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\OutputFormat", "fromLink": "MarkdownExtended/OutputFormat.html", "link": "MarkdownExtended/OutputFormat/Man.html", "name": "MarkdownExtended\\OutputFormat\\Man", "doc": "&quot;Format a content in UNIX Manpage format&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method___construct", "name": "MarkdownExtended\\OutputFormat\\Man::__construct", "doc": "&quot;Remind some commons&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildTag", "name": "MarkdownExtended\\OutputFormat\\Man::buildTag", "doc": "&quot;This will try to call a method &lt;code&gt;build{TagName}()&lt;\/code&gt; if it exists, then will try to use\nthe object &lt;code&gt;$tags_map&lt;\/code&gt; static to automatically find what to do, and then call the\ndefault &lt;code&gt;getTagString()&lt;\/code&gt; method passing it the arguments.&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_getTagString", "name": "MarkdownExtended\\OutputFormat\\Man::getTagString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_escapeString", "name": "MarkdownExtended\\OutputFormat\\Man::escapeString", "doc": "&quot;Escape a string ready for manpage output&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_trimString", "name": "MarkdownExtended\\OutputFormat\\Man::trimString", "doc": "&quot;Special &lt;code&gt;trim()&lt;\/code&gt; to actually trim and \&quot;r-trim\&quot; last EOL&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_teardown", "name": "MarkdownExtended\\OutputFormat\\Man::teardown", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildTitle", "name": "MarkdownExtended\\OutputFormat\\Man::buildTitle", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_indent", "name": "MarkdownExtended\\OutputFormat\\Man::indent", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_unindent", "name": "MarkdownExtended\\OutputFormat\\Man::unindent", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildMetaData", "name": "MarkdownExtended\\OutputFormat\\Man::buildMetaData", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildMetaTitle", "name": "MarkdownExtended\\OutputFormat\\Man::buildMetaTitle", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildParagraph", "name": "MarkdownExtended\\OutputFormat\\Man::buildParagraph", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildBold", "name": "MarkdownExtended\\OutputFormat\\Man::buildBold", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildItalic", "name": "MarkdownExtended\\OutputFormat\\Man::buildItalic", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildPreformatted", "name": "MarkdownExtended\\OutputFormat\\Man::buildPreformatted", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildCode", "name": "MarkdownExtended\\OutputFormat\\Man::buildCode", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildAbbreviation", "name": "MarkdownExtended\\OutputFormat\\Man::buildAbbreviation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildDefinitionList", "name": "MarkdownExtended\\OutputFormat\\Man::buildDefinitionList", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildDefinitionListItemTerm", "name": "MarkdownExtended\\OutputFormat\\Man::buildDefinitionListItemTerm", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildDefinitionListItemDefinition", "name": "MarkdownExtended\\OutputFormat\\Man::buildDefinitionListItemDefinition", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildNewLine", "name": "MarkdownExtended\\OutputFormat\\Man::buildNewLine", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildHorizontalRule", "name": "MarkdownExtended\\OutputFormat\\Man::buildHorizontalRule", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildComment", "name": "MarkdownExtended\\OutputFormat\\Man::buildComment", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildListItem", "name": "MarkdownExtended\\OutputFormat\\Man::buildListItem", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildUnorderedListItem", "name": "MarkdownExtended\\OutputFormat\\Man::buildUnorderedListItem", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildOrderedListItem", "name": "MarkdownExtended\\OutputFormat\\Man::buildOrderedListItem", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildList", "name": "MarkdownExtended\\OutputFormat\\Man::buildList", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildUnorderedList", "name": "MarkdownExtended\\OutputFormat\\Man::buildUnorderedList", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildOrderedList", "name": "MarkdownExtended\\OutputFormat\\Man::buildOrderedList", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildLink", "name": "MarkdownExtended\\OutputFormat\\Man::buildLink", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildBlockquote", "name": "MarkdownExtended\\OutputFormat\\Man::buildBlockquote", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildTableCaption", "name": "MarkdownExtended\\OutputFormat\\Man::buildTableCaption", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildTableBody", "name": "MarkdownExtended\\OutputFormat\\Man::buildTableBody", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildTableHeader", "name": "MarkdownExtended\\OutputFormat\\Man::buildTableHeader", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildTableFooter", "name": "MarkdownExtended\\OutputFormat\\Man::buildTableFooter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildTableLine", "name": "MarkdownExtended\\OutputFormat\\Man::buildTableLine", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildTableCell", "name": "MarkdownExtended\\OutputFormat\\Man::buildTableCell", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\OutputFormat\\Man", "fromLink": "MarkdownExtended/OutputFormat/Man.html", "link": "MarkdownExtended/OutputFormat/Man.html#method_buildTableCellHead", "name": "MarkdownExtended\\OutputFormat\\Man::buildTableCellHead", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended", "fromLink": "MarkdownExtended.html", "link": "MarkdownExtended/Parser.html", "name": "MarkdownExtended\\Parser", "doc": "&quot;Global MarkdownExtended parser&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Parser", "fromLink": "MarkdownExtended/Parser.html", "link": "MarkdownExtended/Parser.html#method___construct", "name": "MarkdownExtended\\Parser::__construct", "doc": "&quot;Constructs a new parser with optional custom options or configuration file&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Parser", "fromLink": "MarkdownExtended/Parser.html", "link": "MarkdownExtended/Parser.html#method_getKernel", "name": "MarkdownExtended\\Parser::getKernel", "doc": "&quot;Gets app&#039;s Kernel&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Parser", "fromLink": "MarkdownExtended/Parser.html", "link": "MarkdownExtended/Parser.html#method_resetOptions", "name": "MarkdownExtended\\Parser::resetOptions", "doc": "&quot;Resets options to defaults&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Parser", "fromLink": "MarkdownExtended/Parser.html", "link": "MarkdownExtended/Parser.html#method_setOptions", "name": "MarkdownExtended\\Parser::setOptions", "doc": "&quot;Defines custom options or configuration file&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Parser", "fromLink": "MarkdownExtended/Parser.html", "link": "MarkdownExtended/Parser.html#method_transform", "name": "MarkdownExtended\\Parser::transform", "doc": "&quot;Transforms a string&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Parser", "fromLink": "MarkdownExtended/Parser.html", "link": "MarkdownExtended/Parser.html#method_transformString", "name": "MarkdownExtended\\Parser::transformString", "doc": "&quot;Alias of &lt;code&gt;self::transform()&lt;\/code&gt;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Parser", "fromLink": "MarkdownExtended/Parser.html", "link": "MarkdownExtended/Parser.html#method_transformSource", "name": "MarkdownExtended\\Parser::transformSource", "doc": "&quot;Transforms a source file&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended", "fromLink": "MarkdownExtended.html", "link": "MarkdownExtended/Templater.html", "name": "MarkdownExtended\\Templater", "doc": "&quot;The default template object of MarkdownExtended&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Templater", "fromLink": "MarkdownExtended/Templater.html", "link": "MarkdownExtended/Templater.html#method___construct", "name": "MarkdownExtended\\Templater::__construct", "doc": "&quot;Initializes object&#039;s registries&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Templater", "fromLink": "MarkdownExtended/Templater.html", "link": "MarkdownExtended/Templater.html#method_parse", "name": "MarkdownExtended\\Templater::parse", "doc": "&quot;Insert a content in a template&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Templater", "fromLink": "MarkdownExtended/Templater.html", "link": "MarkdownExtended/Templater.html#method_getTemplate", "name": "MarkdownExtended\\Templater::getTemplate", "doc": "&quot;Gets a template file content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Templater", "fromLink": "MarkdownExtended/Templater.html", "link": "MarkdownExtended/Templater.html#method_getParams", "name": "MarkdownExtended\\Templater::getParams", "doc": "&quot;Gets the array of parameters to pass in the template based on a content object&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Util", "fromLink": "MarkdownExtended/Util.html", "link": "MarkdownExtended/Util/CacheRegistry.html", "name": "MarkdownExtended\\Util\\CacheRegistry", "doc": "&quot;Object to manage a cache registry&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Util\\CacheRegistry", "fromLink": "MarkdownExtended/Util/CacheRegistry.html", "link": "MarkdownExtended/Util/CacheRegistry.html#method___construct", "name": "MarkdownExtended\\Util\\CacheRegistry::__construct", "doc": "&quot;Initialize the cache registry&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\CacheRegistry", "fromLink": "MarkdownExtended/Util/CacheRegistry.html", "link": "MarkdownExtended/Util/CacheRegistry.html#method_isCached", "name": "MarkdownExtended\\Util\\CacheRegistry::isCached", "doc": "&quot;Tests if an index is cached&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\CacheRegistry", "fromLink": "MarkdownExtended/Util/CacheRegistry.html", "link": "MarkdownExtended/Util/CacheRegistry.html#method_getCache", "name": "MarkdownExtended\\Util\\CacheRegistry::getCache", "doc": "&quot;Gets current cached content of an index&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\CacheRegistry", "fromLink": "MarkdownExtended/Util/CacheRegistry.html", "link": "MarkdownExtended/Util/CacheRegistry.html#method_setCache", "name": "MarkdownExtended\\Util\\CacheRegistry::setCache", "doc": "&quot;Sets a cached content for an index&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Util", "fromLink": "MarkdownExtended/Util.html", "link": "MarkdownExtended/Util/ContentCollection.html", "name": "MarkdownExtended\\Util\\ContentCollection", "doc": "&quot;A simple Content objects collection&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Util\\ContentCollection", "fromLink": "MarkdownExtended/Util/ContentCollection.html", "link": "MarkdownExtended/Util/ContentCollection.html#method___construct", "name": "MarkdownExtended\\Util\\ContentCollection::__construct", "doc": "&quot;Constructs a new collection being sure that data are all &lt;code&gt;\\MarkdownExtended\\API\\ContentInterface&lt;\/code&gt;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\ContentCollection", "fromLink": "MarkdownExtended/Util/ContentCollection.html", "link": "MarkdownExtended/Util/ContentCollection.html#method_append", "name": "MarkdownExtended\\Util\\ContentCollection::append", "doc": "&quot;Appends a new collection entry&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\ContentCollection", "fromLink": "MarkdownExtended/Util/ContentCollection.html", "link": "MarkdownExtended/Util/ContentCollection.html#method_offsetSet", "name": "MarkdownExtended\\Util\\ContentCollection::offsetSet", "doc": "&quot;Sets a collection entry&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Util", "fromLink": "MarkdownExtended/Util.html", "link": "MarkdownExtended/Util/DomIdRegistry.html", "name": "MarkdownExtended\\Util\\DomIdRegistry", "doc": "&quot;A special registry to manage a collection of DOM ids&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Util\\DomIdRegistry", "fromLink": "MarkdownExtended/Util/DomIdRegistry.html", "link": "MarkdownExtended/Util/DomIdRegistry.html#method___construct", "name": "MarkdownExtended\\Util\\DomIdRegistry::__construct", "doc": "&quot;Initializes the registry&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\DomIdRegistry", "fromLink": "MarkdownExtended/Util/DomIdRegistry.html", "link": "MarkdownExtended/Util/DomIdRegistry.html#method_has", "name": "MarkdownExtended\\Util\\DomIdRegistry::has", "doc": "&quot;Verifies if a reference is already defined in registry&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\DomIdRegistry", "fromLink": "MarkdownExtended/Util/DomIdRegistry.html", "link": "MarkdownExtended/Util/DomIdRegistry.html#method_exists", "name": "MarkdownExtended\\Util\\DomIdRegistry::exists", "doc": "&quot;Verifies if an ID is already defined in the registry&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\DomIdRegistry", "fromLink": "MarkdownExtended/Util/DomIdRegistry.html", "link": "MarkdownExtended/Util/DomIdRegistry.html#method_get", "name": "MarkdownExtended\\Util\\DomIdRegistry::get", "doc": "&quot;Gets a DOM unique ID&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\DomIdRegistry", "fromLink": "MarkdownExtended/Util/DomIdRegistry.html", "link": "MarkdownExtended/Util/DomIdRegistry.html#method_set", "name": "MarkdownExtended\\Util\\DomIdRegistry::set", "doc": "&quot;Creates and get a new DOM unique ID&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Util", "fromLink": "MarkdownExtended/Util.html", "link": "MarkdownExtended/Util/Helper.html", "name": "MarkdownExtended\\Util\\Helper", "doc": "&quot;Helper class with static methods only&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Util\\Helper", "fromLink": "MarkdownExtended/Util/Helper.html", "link": "MarkdownExtended/Util/Helper.html#method_escapeCodeContent", "name": "MarkdownExtended\\Util\\Helper::escapeCodeContent", "doc": "&quot;Escape the code blocks contents to get HTML entities&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Helper", "fromLink": "MarkdownExtended/Util/Helper.html", "link": "MarkdownExtended/Util/Helper.html#method_fillPlaceholders", "name": "MarkdownExtended\\Util\\Helper::fillPlaceholders", "doc": "&quot;Replace any &lt;code&gt;%%&lt;\/code&gt; mask by a replacement&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Helper", "fromLink": "MarkdownExtended/Util/Helper.html", "link": "MarkdownExtended/Util/Helper.html#method_header2Label", "name": "MarkdownExtended\\Util\\Helper::header2Label", "doc": "&quot;Transform a header string to DOM valid label&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Helper", "fromLink": "MarkdownExtended/Util/Helper.html", "link": "MarkdownExtended/Util/Helper.html#method_humanReadable", "name": "MarkdownExtended\\Util\\Helper::humanReadable", "doc": "&quot;Transform a string to a human readable one&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Helper", "fromLink": "MarkdownExtended/Util/Helper.html", "link": "MarkdownExtended/Util/Helper.html#method_encodeEmailAddress", "name": "MarkdownExtended\\Util\\Helper::encodeEmailAddress", "doc": "&quot;Input: an email address, e.g. \&quot;foo@example.com\&quot;&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Helper", "fromLink": "MarkdownExtended/Util/Helper.html", "link": "MarkdownExtended/Util/Helper.html#method_getSafeString", "name": "MarkdownExtended\\Util\\Helper::getSafeString", "doc": "&quot;Gets a \&quot;safe string\&quot; from a &lt;code&gt;\\DateTime&lt;\/code&gt; or an array&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Helper", "fromLink": "MarkdownExtended/Util/Helper.html", "link": "MarkdownExtended/Util/Helper.html#method_isSingleLine", "name": "MarkdownExtended\\Util\\Helper::isSingleLine", "doc": "&quot;Tests if a content seems to be single line&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Helper", "fromLink": "MarkdownExtended/Util/Helper.html", "link": "MarkdownExtended/Util/Helper.html#method_buildRegex", "name": "MarkdownExtended\\Util\\Helper::buildRegex", "doc": "&quot;Get a ready-to-use regular expression from a string pattern&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Helper", "fromLink": "MarkdownExtended/Util/Helper.html", "link": "MarkdownExtended/Util/Helper.html#method_toCamelCase", "name": "MarkdownExtended\\Util\\Helper::toCamelCase", "doc": "&quot;Transform a name in CamelCase&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Helper", "fromLink": "MarkdownExtended/Util/Helper.html", "link": "MarkdownExtended/Util/Helper.html#method_fromCamelCase", "name": "MarkdownExtended\\Util\\Helper::fromCamelCase", "doc": "&quot;Transform a name from CamelCase to other&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Helper", "fromLink": "MarkdownExtended/Util/Helper.html", "link": "MarkdownExtended/Util/Helper.html#method_getPath", "name": "MarkdownExtended\\Util\\Helper::getPath", "doc": "&quot;Gets a wel-formatted path with environment-compliant directory separator&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Helper", "fromLink": "MarkdownExtended/Util/Helper.html", "link": "MarkdownExtended/Util/Helper.html#method_readFile", "name": "MarkdownExtended\\Util\\Helper::readFile", "doc": "&quot;Reads a file and returns its content&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Helper", "fromLink": "MarkdownExtended/Util/Helper.html", "link": "MarkdownExtended/Util/Helper.html#method_writeFile", "name": "MarkdownExtended\\Util\\Helper::writeFile", "doc": "&quot;Writes a file and returns content length&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Helper", "fromLink": "MarkdownExtended/Util/Helper.html", "link": "MarkdownExtended/Util/Helper.html#method_backupFile", "name": "MarkdownExtended\\Util\\Helper::backupFile", "doc": "&quot;Make a backup of a file&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Helper", "fromLink": "MarkdownExtended/Util/Helper.html", "link": "MarkdownExtended/Util/Helper.html#method_debug", "name": "MarkdownExtended\\Util\\Helper::debug", "doc": "&quot;Dump quite anything with an optional title&quot;"},
            
            {"type": "Class", "fromName": "MarkdownExtended\\Util", "fromLink": "MarkdownExtended/Util.html", "link": "MarkdownExtended/Util/Registry.html", "name": "MarkdownExtended\\Util\\Registry", "doc": "&quot;Basic registry object&quot;"},
                                                        {"type": "Method", "fromName": "MarkdownExtended\\Util\\Registry", "fromLink": "MarkdownExtended/Util/Registry.html", "link": "MarkdownExtended/Util/Registry.html#method___construct", "name": "MarkdownExtended\\Util\\Registry::__construct", "doc": "&quot;Initialize the registry&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Registry", "fromLink": "MarkdownExtended/Util/Registry.html", "link": "MarkdownExtended/Util/Registry.html#method_set", "name": "MarkdownExtended\\Util\\Registry::set", "doc": "&quot;Sets or resets a new instance in global registry&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Registry", "fromLink": "MarkdownExtended/Util/Registry.html", "link": "MarkdownExtended/Util/Registry.html#method_add", "name": "MarkdownExtended\\Util\\Registry::add", "doc": "&quot;Adds something to an existing entry of the global registry, the entry is created if it not exist&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Registry", "fromLink": "MarkdownExtended/Util/Registry.html", "link": "MarkdownExtended/Util/Registry.html#method_has", "name": "MarkdownExtended\\Util\\Registry::has", "doc": "&quot;Tests if an index exists in the registry&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Registry", "fromLink": "MarkdownExtended/Util/Registry.html", "link": "MarkdownExtended/Util/Registry.html#method_remove", "name": "MarkdownExtended\\Util\\Registry::remove", "doc": "&quot;Removes something to an existing entry of the global registry, the entry is created if it not exist&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Registry", "fromLink": "MarkdownExtended/Util/Registry.html", "link": "MarkdownExtended/Util/Registry.html#method_get", "name": "MarkdownExtended\\Util\\Registry::get", "doc": "&quot;Gets an entry from the global registry&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Registry", "fromLink": "MarkdownExtended/Util/Registry.html", "link": "MarkdownExtended/Util/Registry.html#method_getAll", "name": "MarkdownExtended\\Util\\Registry::getAll", "doc": "&quot;Gets the global registry&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Registry", "fromLink": "MarkdownExtended/Util/Registry.html", "link": "MarkdownExtended/Util/Registry.html#method_count", "name": "MarkdownExtended\\Util\\Registry::count", "doc": "&quot;Counts the registry entries&quot;"},
                    {"type": "Method", "fromName": "MarkdownExtended\\Util\\Registry", "fromLink": "MarkdownExtended/Util/Registry.html", "link": "MarkdownExtended/Util/Registry.html#method_extend", "name": "MarkdownExtended\\Util\\Registry::extend", "doc": "&quot;Extends a value with another, if types match&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


