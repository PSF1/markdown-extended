var search_data = {
    'index': {
        'searchIndex': ["markdownextended","markdownextended\\api","markdownextended\\console","markdownextended\\exception","markdownextended\\grammar","markdownextended\\grammar\\filter","markdownextended\\outputformat","markdownextended\\util","markdownextended\\api\\contentinterface","markdownextended\\api\\gamutinterface","markdownextended\\api\\kernel","markdownextended\\api\\outputformatinterface","markdownextended\\api\\templateinterface","markdownextended\\console\\abstractconsole","markdownextended\\console\\console","markdownextended\\console\\stream","markdownextended\\console\\userinput","markdownextended\\console\\useroption","markdownextended\\content","markdownextended\\exception\\badmethodcallexception","markdownextended\\exception\\domainexception","markdownextended\\exception\\errorexception","markdownextended\\exception\\exception","markdownextended\\exception\\invalidargumentexception","markdownextended\\exception\\runtimeexception","markdownextended\\exception\\unexpectedvalueexception","markdownextended\\grammar\\abstractgamut","markdownextended\\grammar\\filter","markdownextended\\grammar\\filter\\abbreviation","markdownextended\\grammar\\filter\\anchor","markdownextended\\grammar\\filter\\autolink","markdownextended\\grammar\\filter\\blockinclusion","markdownextended\\grammar\\filter\\blockquote","markdownextended\\grammar\\filter\\codeblock","markdownextended\\grammar\\filter\\definitionlist","markdownextended\\grammar\\filter\\detab","markdownextended\\grammar\\filter\\emphasis","markdownextended\\grammar\\filter\\fencedcodeblock","markdownextended\\grammar\\filter\\html","markdownextended\\grammar\\filter\\hardbreak","markdownextended\\grammar\\filter\\header","markdownextended\\grammar\\filter\\horizontalrule","markdownextended\\grammar\\filter\\image","markdownextended\\grammar\\filter\\linkdefinition","markdownextended\\grammar\\filter\\listitem","markdownextended\\grammar\\filter\\maths","markdownextended\\grammar\\filter\\metadata","markdownextended\\grammar\\filter\\note","markdownextended\\grammar\\filter\\span","markdownextended\\grammar\\filter\\table","markdownextended\\grammar\\gamutloader","markdownextended\\grammar\\lexer","markdownextended\\grammar\\tools","markdownextended\\markdownextended","markdownextended\\outputformatbag","markdownextended\\outputformat\\abstractoutputformat","markdownextended\\outputformat\\html","markdownextended\\outputformat\\man","markdownextended\\parser","markdownextended\\templater","markdownextended\\util\\cacheregistry","markdownextended\\util\\contentcollection","markdownextended\\util\\domidregistry","markdownextended\\util\\helper","markdownextended\\util\\registry","markdownextended\\api\\contentinterface::__tostring","markdownextended\\api\\contentinterface::__toarray","markdownextended\\api\\contentinterface::setsource","markdownextended\\api\\contentinterface::getsource","markdownextended\\api\\contentinterface::setparsingoptions","markdownextended\\api\\contentinterface::getparsingoptions","markdownextended\\api\\contentinterface::setcontent","markdownextended\\api\\contentinterface::getcontent","markdownextended\\api\\contentinterface::setcharset","markdownextended\\api\\contentinterface::getcharset","markdownextended\\api\\contentinterface::settitle","markdownextended\\api\\contentinterface::gettitle","markdownextended\\api\\contentinterface::setbody","markdownextended\\api\\contentinterface::getbody","markdownextended\\api\\contentinterface::setnotes","markdownextended\\api\\contentinterface::addnote","markdownextended\\api\\contentinterface::getnotes","markdownextended\\api\\contentinterface::getnotesformatted","markdownextended\\api\\contentinterface::setmetadata","markdownextended\\api\\contentinterface::addmetadata","markdownextended\\api\\contentinterface::getmetadata","markdownextended\\api\\contentinterface::getmetadataformatted","markdownextended\\api\\gamutinterface::getdefaultmethod","markdownextended\\api\\kernel::getinstance","markdownextended\\api\\kernel::createinstance","markdownextended\\api\\kernel::getapifromtype","markdownextended\\api\\kernel::get","markdownextended\\api\\kernel::has","markdownextended\\api\\kernel::set","markdownextended\\api\\kernel::remove","markdownextended\\api\\kernel::valid","markdownextended\\api\\kernel::validate","markdownextended\\api\\kernel::getconfig","markdownextended\\api\\kernel::setconfig","markdownextended\\api\\kernel::addconfig","markdownextended\\api\\kernel::applyconfig","markdownextended\\api\\kernel::getresourcepath","markdownextended\\api\\outputformatinterface::buildtag","markdownextended\\api\\outputformatinterface::gettagstring","markdownextended\\api\\outputformatinterface::getnotestostring","markdownextended\\api\\outputformatinterface::getmetadatatostring","markdownextended\\api\\templateinterface::parse","markdownextended\\console\\abstractconsole::__construct","markdownextended\\console\\abstractconsole::setstream","markdownextended\\console\\abstractconsole::setuserinput","markdownextended\\console\\abstractconsole::setargumentrequired","markdownextended\\console\\abstractconsole::setname","markdownextended\\console\\abstractconsole::setshortname","markdownextended\\console\\abstractconsole::setversion","markdownextended\\console\\abstractconsole::setshortversionstring","markdownextended\\console\\abstractconsole::setlongversionstring","markdownextended\\console\\abstractconsole::setdescription","markdownextended\\console\\abstractconsole::setusage","markdownextended\\console\\abstractconsole::setsynopsis","markdownextended\\console\\abstractconsole::addclioption","markdownextended\\console\\abstractconsole::getoption","markdownextended\\console\\abstractconsole::enableharddebug","markdownextended\\console\\abstractconsole::parseoptions","markdownextended\\console\\abstractconsole::runversion","markdownextended\\console\\abstractconsole::runhelp","markdownextended\\console\\abstractconsole::runusage","markdownextended\\console\\abstractconsole::run","markdownextended\\console\\console::__construct","markdownextended\\console\\console::getmarkdownextendedparser","markdownextended\\console\\console::getresults","markdownextended\\console\\console::run","markdownextended\\console\\stream::__construct","markdownextended\\console\\stream::setstream","markdownextended\\console\\stream::getstream","markdownextended\\console\\stream::setexceptionhandlercallback","markdownextended\\console\\stream::setverbosity","markdownextended\\console\\stream::getverbosity","markdownextended\\console\\stream::_exit","markdownextended\\console\\stream::handleexception","markdownextended\\console\\stream::write","markdownextended\\console\\stream::writeln","markdownextended\\console\\stream::writetable","markdownextended\\console\\stream::verbose","markdownextended\\console\\stream::verboseln","markdownextended\\console\\stream::debug","markdownextended\\console\\stream::debugln","markdownextended\\console\\stream::getpipedinput","markdownextended\\console\\userinput::__construct","markdownextended\\console\\userinput::getoption","markdownextended\\console\\userinput::getindexedoptions","markdownextended\\console\\userinput::getfilteredoptions","markdownextended\\console\\userinput::getoptionsinfo","markdownextended\\console\\userinput::getoptionssynopsis","markdownextended\\console\\userinput::parseoptions","markdownextended\\console\\userinput::getsanitizeduserinput","markdownextended\\console\\useroption::__construct","markdownextended\\console\\useroption::validateuservalue","markdownextended\\console\\useroption::getinfo","markdownextended\\console\\useroption::getsynopsis","markdownextended\\console\\useroption::getargumentstring","markdownextended\\console\\useroption::has","markdownextended\\console\\useroption::get","markdownextended\\console\\useroption::set","markdownextended\\content::__construct","markdownextended\\content::__tostring","markdownextended\\content::__toarray","markdownextended\\content::setsource","markdownextended\\content::getsource","markdownextended\\content::setparsingoptions","markdownextended\\content::getparsingoptions","markdownextended\\content::setcontent","markdownextended\\content::getcontent","markdownextended\\content::setcharset","markdownextended\\content::getcharset","markdownextended\\content::settitle","markdownextended\\content::gettitle","markdownextended\\content::setbody","markdownextended\\content::getbody","markdownextended\\content::setnotes","markdownextended\\content::addnote","markdownextended\\content::getnotes","markdownextended\\content::getnotesformatted","markdownextended\\content::setmetadata","markdownextended\\content::addmetadata","markdownextended\\content::getmetadata","markdownextended\\content::getmetadataformatted","markdownextended\\grammar\\abstractgamut::rungamut","markdownextended\\grammar\\abstractgamut::resethash","markdownextended\\grammar\\abstractgamut::sethash","markdownextended\\grammar\\abstractgamut::gethash","markdownextended\\grammar\\filter::getdefaultmethod","markdownextended\\grammar\\filter::transform","markdownextended\\grammar\\filter::hashpart","markdownextended\\grammar\\filter::hashblock","markdownextended\\grammar\\filter::hashclean","markdownextended\\grammar\\filter::unhash","markdownextended\\grammar\\filter\\abbreviation::_setup","markdownextended\\grammar\\filter\\abbreviation::_teardown","markdownextended\\grammar\\filter\\abbreviation::transform","markdownextended\\grammar\\filter\\abbreviation::strip","markdownextended\\grammar\\filter\\anchor::_setup","markdownextended\\grammar\\filter\\anchor::transform","markdownextended\\grammar\\filter\\autolink::transform","markdownextended\\grammar\\filter\\blockinclusion::transform","markdownextended\\grammar\\filter\\blockquote::transform","markdownextended\\grammar\\filter\\codeblock::transform","markdownextended\\grammar\\filter\\codeblock::span","markdownextended\\grammar\\filter\\definitionlist::transform","markdownextended\\grammar\\filter\\definitionlist::transformitems","markdownextended\\grammar\\filter\\detab::init","markdownextended\\grammar\\filter\\detab::transform","markdownextended\\grammar\\filter\\emphasis::prepare","markdownextended\\grammar\\filter\\emphasis::transform","markdownextended\\grammar\\filter\\fencedcodeblock::transform","markdownextended\\grammar\\filter\\html::transform","markdownextended\\grammar\\filter\\hardbreak::transform","markdownextended\\grammar\\filter\\header::transform","markdownextended\\grammar\\filter\\horizontalrule::transform","markdownextended\\grammar\\filter\\image::transform","markdownextended\\grammar\\filter\\linkdefinition::transform","markdownextended\\grammar\\filter\\linkdefinition::strip","markdownextended\\grammar\\filter\\listitem::transform","markdownextended\\grammar\\filter\\listitem::transformitems","markdownextended\\grammar\\filter\\maths::transform","markdownextended\\grammar\\filter\\maths::span","markdownextended\\grammar\\filter\\metadata::_setup","markdownextended\\grammar\\filter\\metadata::strip","markdownextended\\grammar\\filter\\metadata::transform","markdownextended\\grammar\\filter\\metadata::append","markdownextended\\grammar\\filter\\note::_setup","markdownextended\\grammar\\filter\\note::strip","markdownextended\\grammar\\filter\\note::transform","markdownextended\\grammar\\filter\\note::append","markdownextended\\grammar\\filter\\note::transformfootnote","markdownextended\\grammar\\filter\\note::transformglossary","markdownextended\\grammar\\filter\\note::transformbibliography","markdownextended\\grammar\\filter\\note::gettypeinfo","markdownextended\\grammar\\filter\\span::transform","markdownextended\\grammar\\filter\\span::handlespantoken","markdownextended\\grammar\\filter\\table::transform","markdownextended\\grammar\\gamutloader::getgamutstack","markdownextended\\grammar\\gamutloader::getgamuttype","markdownextended\\grammar\\gamutloader::isgamutstackname","markdownextended\\grammar\\gamutloader::getgamutbasename","markdownextended\\grammar\\gamutloader::getallgamuts","markdownextended\\grammar\\gamutloader::getallgamutsreversed","markdownextended\\grammar\\gamutloader::isgamutenabled","markdownextended\\grammar\\gamutloader::rungamuts","markdownextended\\grammar\\gamutloader::rungamutsmethod","markdownextended\\grammar\\gamutloader::rungamut","markdownextended\\grammar\\lexer::__construct","markdownextended\\grammar\\lexer::parse","markdownextended\\grammar\\lexer::rungamut","markdownextended\\grammar\\lexer::rungamuts","markdownextended\\grammar\\tools::getdefaultmethod","markdownextended\\grammar\\tools::prepareoutputformat","markdownextended\\grammar\\tools::teardownoutputformat","markdownextended\\grammar\\tools::appendendingnewlines","markdownextended\\grammar\\tools::encodeampandangle","markdownextended\\grammar\\tools::encodeattribute","markdownextended\\grammar\\tools::extractattributes","markdownextended\\grammar\\tools::outdent","markdownextended\\grammar\\tools::rebuildparagraph","markdownextended\\grammar\\tools::removeutf8marker","markdownextended\\grammar\\tools::standardizelineending","markdownextended\\grammar\\tools::stripspacedlines","markdownextended\\markdownextended::getappinfo","markdownextended\\markdownextended::getdefaults","markdownextended\\markdownextended::parse","markdownextended\\markdownextended::parsestring","markdownextended\\markdownextended::parsesource","markdownextended\\outputformatbag::load","markdownextended\\outputformatbag::__call","markdownextended\\outputformatbag::setformatter","markdownextended\\outputformatbag::getformatter","markdownextended\\outputformat\\abstractoutputformat::buildtag","markdownextended\\outputformat\\abstractoutputformat::gettagstring","markdownextended\\outputformat\\abstractoutputformat::getnotestostring","markdownextended\\outputformat\\abstractoutputformat::getmetadatatostring","markdownextended\\outputformat\\html::__construct","markdownextended\\outputformat\\html::gettagstring","markdownextended\\outputformat\\html::buildtitle","markdownextended\\outputformat\\html::buildmetadata","markdownextended\\outputformat\\html::buildcomment","markdownextended\\outputformat\\html::buildparagraph","markdownextended\\outputformat\\html::buildlink","markdownextended\\outputformat\\html::buildpreformatted","markdownextended\\outputformat\\html::buildmaths","markdownextended\\outputformat\\html::buildmathsblock","markdownextended\\outputformat\\html::buildmathsspan","markdownextended\\outputformat\\html::buildfootnotestandarditem","markdownextended\\outputformat\\html::buildfootnoteglossaryitem","markdownextended\\outputformat\\html::buildfootnotebibliographyitem","markdownextended\\outputformat\\html::buildfootnotestandardlink","markdownextended\\outputformat\\html::buildfootnoteglossarylink","markdownextended\\outputformat\\html::buildfootnotebibliographylink","markdownextended\\outputformat\\man::__construct","markdownextended\\outputformat\\man::buildtag","markdownextended\\outputformat\\man::gettagstring","markdownextended\\outputformat\\man::escapestring","markdownextended\\outputformat\\man::trimstring","markdownextended\\outputformat\\man::teardown","markdownextended\\outputformat\\man::buildtitle","markdownextended\\outputformat\\man::indent","markdownextended\\outputformat\\man::unindent","markdownextended\\outputformat\\man::buildmetadata","markdownextended\\outputformat\\man::buildmetatitle","markdownextended\\outputformat\\man::buildparagraph","markdownextended\\outputformat\\man::buildbold","markdownextended\\outputformat\\man::builditalic","markdownextended\\outputformat\\man::buildpreformatted","markdownextended\\outputformat\\man::buildcode","markdownextended\\outputformat\\man::buildabbreviation","markdownextended\\outputformat\\man::builddefinitionlist","markdownextended\\outputformat\\man::builddefinitionlistitemterm","markdownextended\\outputformat\\man::builddefinitionlistitemdefinition","markdownextended\\outputformat\\man::buildnewline","markdownextended\\outputformat\\man::buildhorizontalrule","markdownextended\\outputformat\\man::buildcomment","markdownextended\\outputformat\\man::buildlistitem","markdownextended\\outputformat\\man::buildunorderedlistitem","markdownextended\\outputformat\\man::buildorderedlistitem","markdownextended\\outputformat\\man::buildlist","markdownextended\\outputformat\\man::buildunorderedlist","markdownextended\\outputformat\\man::buildorderedlist","markdownextended\\outputformat\\man::buildlink","markdownextended\\outputformat\\man::buildblockquote","markdownextended\\outputformat\\man::buildtablecaption","markdownextended\\outputformat\\man::buildtablebody","markdownextended\\outputformat\\man::buildtableheader","markdownextended\\outputformat\\man::buildtablefooter","markdownextended\\outputformat\\man::buildtableline","markdownextended\\outputformat\\man::buildtablecell","markdownextended\\outputformat\\man::buildtablecellhead","markdownextended\\parser::__construct","markdownextended\\parser::getkernel","markdownextended\\parser::resetoptions","markdownextended\\parser::setoptions","markdownextended\\parser::transform","markdownextended\\parser::transformsource","markdownextended\\templater::__construct","markdownextended\\templater::parse","markdownextended\\templater::gettemplate","markdownextended\\templater::getparams","markdownextended\\util\\cacheregistry::__construct","markdownextended\\util\\cacheregistry::iscached","markdownextended\\util\\cacheregistry::getcache","markdownextended\\util\\cacheregistry::setcache","markdownextended\\util\\contentcollection::__construct","markdownextended\\util\\contentcollection::append","markdownextended\\util\\contentcollection::offsetset","markdownextended\\util\\domidregistry::__construct","markdownextended\\util\\domidregistry::has","markdownextended\\util\\domidregistry::exists","markdownextended\\util\\domidregistry::get","markdownextended\\util\\domidregistry::set","markdownextended\\util\\helper::escapecodecontent","markdownextended\\util\\helper::fillplaceholders","markdownextended\\util\\helper::header2label","markdownextended\\util\\helper::humanreadable","markdownextended\\util\\helper::encodeemailaddress","markdownextended\\util\\helper::getsafestring","markdownextended\\util\\helper::issingleline","markdownextended\\util\\helper::buildregex","markdownextended\\util\\helper::tocamelcase","markdownextended\\util\\helper::fromcamelcase","markdownextended\\util\\helper::getpath","markdownextended\\util\\helper::readfile","markdownextended\\util\\helper::writefile","markdownextended\\util\\helper::backupfile","markdownextended\\util\\helper::debug","markdownextended\\util\\registry::__construct","markdownextended\\util\\registry::set","markdownextended\\util\\registry::add","markdownextended\\util\\registry::has","markdownextended\\util\\registry::remove","markdownextended\\util\\registry::get","markdownextended\\util\\registry::getall","markdownextended\\util\\registry::count","markdownextended\\util\\registry::extend"],
        'info': [["MarkdownExtended","","MarkdownExtended.html","","",3],["MarkdownExtended\\API","","MarkdownExtended\/API.html","","",3],["MarkdownExtended\\Console","","MarkdownExtended\/Console.html","","",3],["MarkdownExtended\\Exception","","MarkdownExtended\/Exception.html","","",3],["MarkdownExtended\\Grammar","","MarkdownExtended\/Grammar.html","","",3],["MarkdownExtended\\Grammar\\Filter","","MarkdownExtended\/Grammar\/Filter.html","","",3],["MarkdownExtended\\OutputFormat","","MarkdownExtended\/OutputFormat.html","","",3],["MarkdownExtended\\Util","","MarkdownExtended\/Util.html","","",3],["ContentInterface","MarkdownExtended\\API","MarkdownExtended\/API\/ContentInterface.html","","Interface to implement for content objects",1],["GamutInterface","MarkdownExtended\\API","MarkdownExtended\/API\/GamutInterface.html","","Interface to implement for filter objects",1],["Kernel","MarkdownExtended\\API","MarkdownExtended\/API\/Kernel.html","","",1],["OutputFormatInterface","MarkdownExtended\\API","MarkdownExtended\/API\/OutputFormatInterface.html","","Interface to implement for any output format object",1],["TemplateInterface","MarkdownExtended\\API","MarkdownExtended\/API\/TemplateInterface.html","","Interface to implement for all template objects",1],["AbstractConsole","MarkdownExtended\\Console","MarkdownExtended\/Console\/AbstractConsole.html","","",1],["Console","MarkdownExtended\\Console","MarkdownExtended\/Console\/Console.html"," < AbstractConsole","This is the markdown-extended shell script definition",1],["Stream","MarkdownExtended\\Console","MarkdownExtended\/Console\/Stream.html","","",1],["UserInput","MarkdownExtended\\Console","MarkdownExtended\/Console\/UserInput.html","","A class to manage command line options based on a set",1],["UserOption","MarkdownExtended\\Console","MarkdownExtended\/Console\/UserOption.html","","A class to manage one command line option based on",1],["Content","MarkdownExtended","MarkdownExtended\/Content.html","","The default MarkdownExtended Content object",1],["BadMethodCallException","MarkdownExtended\\Exception","MarkdownExtended\/Exception\/BadMethodCallException.html"," < BadMethodCallException","Specific BadMethodCallException",1],["DomainException","MarkdownExtended\\Exception","MarkdownExtended\/Exception\/DomainException.html"," < DomainException","Specific DomainException",1],["ErrorException","MarkdownExtended\\Exception","MarkdownExtended\/Exception\/ErrorException.html"," < ErrorException","Specific ErrorException",1],["Exception","MarkdownExtended\\Exception","MarkdownExtended\/Exception\/Exception.html"," < Exception","Specific Exception",1],["InvalidArgumentException","MarkdownExtended\\Exception","MarkdownExtended\/Exception\/InvalidArgumentException.html"," < InvalidArgumentException","Specific InvalidArgumentException",1],["RuntimeException","MarkdownExtended\\Exception","MarkdownExtended\/Exception\/RuntimeException.html"," < RuntimeException","Specific RuntimeException",1],["UnexpectedValueException","MarkdownExtended\\Exception","MarkdownExtended\/Exception\/UnexpectedValueException.html"," < UnexpectedValueException","Specific UnexpectedValueException",1],["AbstractGamut","MarkdownExtended\\Grammar","MarkdownExtended\/Grammar\/AbstractGamut.html","","A basic class for filters and tools with management",1],["Filter","MarkdownExtended\\Grammar","MarkdownExtended\/Grammar\/Filter.html"," < AbstractGamut","Base class for all filters",1],["Abbreviation","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Abbreviation.html"," < Filter","Process Markdown abbreviations",1],["Anchor","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Anchor.html"," < Filter","Process Markdown links",1],["AutoLink","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/AutoLink.html"," < Filter","Process Markdown automatic links",1],["BlockInclusion","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/BlockInclusion.html"," < Filter","Process the inclusion of third-party Markdown files",1],["BlockQuote","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/BlockQuote.html"," < Filter","Process Markdown blockquotes",1],["CodeBlock","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/CodeBlock.html"," < Filter","Process Markdown code blocks",1],["DefinitionList","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/DefinitionList.html"," < Filter","Process Markdown definitions lists",1],["Detab","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Detab.html"," < Filter","Class Detab",1],["Emphasis","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Emphasis.html"," < Filter","Process Markdown emphasis: bold & italic",1],["FencedCodeBlock","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/FencedCodeBlock.html"," < Filter","Process Markdown fenced code blocks",1],["HTML","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/HTML.html"," < Filter","Process Markdown in-text HTML",1],["HardBreak","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/HardBreak.html"," < Filter","Process Markdown hard breaks",1],["Header","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Header.html"," < Filter","Process Markdown headers",1],["HorizontalRule","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/HorizontalRule.html"," < Filter","Process Markdown horizontal rules",1],["Image","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Image.html"," < Filter","Process Markdown images",1],["LinkDefinition","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/LinkDefinition.html"," < Filter","Process Markdown definitions links",1],["ListItem","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/ListItem.html"," < Filter","Process Markdown list items",1],["Maths","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Maths.html"," < Filter","Process Markdown mathematics",1],["MetaData","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/MetaData.html"," < Filter","Process Markdown meta data",1],["Note","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Note.html"," < Filter","Process Markdown notes: footnotes, glossary and bibliography",1],["Span","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Span.html"," < Filter","Process Markdown spans",1],["Table","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Table.html"," < Filter","Process Markdown tables",1],["GamutLoader","MarkdownExtended\\Grammar","MarkdownExtended\/Grammar\/GamutLoader.html"," < CacheRegistry","Central class to execute filters and tools methods",1],["Lexer","MarkdownExtended\\Grammar","MarkdownExtended\/Grammar\/Lexer.html","","The lexer dispatches the content to the gamuts loader",1],["Tools","MarkdownExtended\\Grammar","MarkdownExtended\/Grammar\/Tools.html"," < AbstractGamut","The base class for tools",1],["MarkdownExtended","MarkdownExtended","MarkdownExtended\/MarkdownExtended.html"," < Parser","PHP Markdown Extended",1],["OutputFormatBag","MarkdownExtended","MarkdownExtended\/OutputFormatBag.html","","",1],["AbstractOutputFormat","MarkdownExtended\\OutputFormat","MarkdownExtended\/OutputFormat\/AbstractOutputFormat.html","","A basic output format class",1],["Html","MarkdownExtended\\OutputFormat","MarkdownExtended\/OutputFormat\/Html.html"," < AbstractOutputFormat","Format a content in full HTML",1],["Man","MarkdownExtended\\OutputFormat","MarkdownExtended\/OutputFormat\/Man.html"," < AbstractOutputFormat","Format a content in UNIX Manpage format",1],["Parser","MarkdownExtended","MarkdownExtended\/Parser.html","","Global MarkdownExtended parser",1],["Templater","MarkdownExtended","MarkdownExtended\/Templater.html","","The default template object of MarkdownExtended",1],["CacheRegistry","MarkdownExtended\\Util","MarkdownExtended\/Util\/CacheRegistry.html","","Object to manage a cache registry",1],["ContentCollection","MarkdownExtended\\Util","MarkdownExtended\/Util\/ContentCollection.html"," < ArrayIterator","A simple Content objects collection",1],["DomIdRegistry","MarkdownExtended\\Util","MarkdownExtended\/Util\/DomIdRegistry.html","","A special registry to manage a collection of DOM ids",1],["Helper","MarkdownExtended\\Util","MarkdownExtended\/Util\/Helper.html","","Helper class with static methods only",1],["Registry","MarkdownExtended\\Util","MarkdownExtended\/Util\/Registry.html","","Basic registry object",1],["ContentInterface::__toString","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method___toString","()","Use the content as a string",2],["ContentInterface::__toArray","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method___toArray","()","Get the content as an array",2],["ContentInterface::setSource","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_setSource","(string $source)","Sets the original source of the content",2],["ContentInterface::getSource","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_getSource","()","Gets the original source of the content",2],["ContentInterface::setParsingOptions","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_setParsingOptions","(array $options)","Sets the array of options used to parse the content",2],["ContentInterface::getParsingOptions","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_getParsingOptions","()","Gets the array of options used to parse the content",2],["ContentInterface::setContent","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_setContent","(string $content)","Sets the content's \"final\" content",2],["ContentInterface::getContent","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_getContent","()","Gets the content's \"final\" content",2],["ContentInterface::setCharset","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_setCharset","(string $charset)","Sets the content's character set",2],["ContentInterface::getCharset","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_getCharset","()","Gets the content's character set",2],["ContentInterface::setTitle","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_setTitle","(string $title)","Sets the content's title",2],["ContentInterface::getTitle","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_getTitle","()","Gets the content's title",2],["ContentInterface::setBody","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_setBody","(string $str)","Sets the content's body",2],["ContentInterface::getBody","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_getBody","()","Gets the content's body",2],["ContentInterface::setNotes","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_setNotes","(array $notes)","Sets the content's footnotes",2],["ContentInterface::addNote","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_addNote","(array $note, string $note_id)","Adds a content's footnote",2],["ContentInterface::getNotes","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_getNotes","()","Gets the content's notes",2],["ContentInterface::getNotesFormatted","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_getNotesFormatted","()","Gets the content's notes formatted in current output",2],["ContentInterface::setMetadata","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_setMetadata","(array $data)","Sets content's metadata",2],["ContentInterface::addMetadata","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_addMetadata","(string $var, string $val)","Adds a new content's metadata",2],["ContentInterface::getMetadata","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_getMetadata","(null $name = null)","Gets one or all content's metadata",2],["ContentInterface::getMetadataFormatted","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_getMetadataFormatted","()","Gets content's metadata formatted in current output",2],["GamutInterface::getDefaultMethod","MarkdownExtended\\API\\GamutInterface","MarkdownExtended\/API\/GamutInterface.html#method_getDefaultMethod","()","Must return a method name",2],["Kernel::getInstance","MarkdownExtended\\API\\Kernel","MarkdownExtended\/API\/Kernel.html#method_getInstance","()","Get Kernel's instance",2],["Kernel::createInstance","MarkdownExtended\\API\\Kernel","MarkdownExtended\/API\/Kernel.html#method_createInstance","()","Create a Kernel instance",2],["Kernel::getApiFromType","MarkdownExtended\\API\\Kernel","MarkdownExtended\/API\/Kernel.html#method_getApiFromType","(string $type)","Get the API's interface by object's type",2],["Kernel::get","MarkdownExtended\\API\\Kernel","MarkdownExtended\/API\/Kernel.html#method_get","(string $name)","Gets a service by name",2],["Kernel::has","MarkdownExtended\\API\\Kernel","MarkdownExtended\/API\/Kernel.html#method_has","(string $name)","Tests if a service exists",2],["Kernel::set","MarkdownExtended\\API\\Kernel","MarkdownExtended\/API\/Kernel.html#method_set","(string $name, mixed $value)","Sets a service",2],["Kernel::remove","MarkdownExtended\\API\\Kernel","MarkdownExtended\/API\/Kernel.html#method_remove","(string $name)","Removes an existing service",2],["Kernel::valid","MarkdownExtended\\API\\Kernel","MarkdownExtended\/API\/Kernel.html#method_valid","(string|object $class_name, string $type)","Tests if a class implements concerned API's interface",2],["Kernel::validate","MarkdownExtended\\API\\Kernel","MarkdownExtended\/API\/Kernel.html#method_validate","(string|object $class_name, string $type, null $real_name = null)","Tests if a class implements concerned API's interface",2],["Kernel::getConfig","MarkdownExtended\\API\\Kernel","MarkdownExtended\/API\/Kernel.html#method_getConfig","(string $name, null $default = null)","Gets a configuration entry",2],["Kernel::setConfig","MarkdownExtended\\API\\Kernel","MarkdownExtended\/API\/Kernel.html#method_setConfig","(string $name, mixed $value)","Sets a configuration entry",2],["Kernel::addConfig","MarkdownExtended\\API\\Kernel","MarkdownExtended\/API\/Kernel.html#method_addConfig","(string $name, mixed $value)","Merges a configuration entry (concatenates string or",2],["Kernel::applyConfig","MarkdownExtended\\API\\Kernel","MarkdownExtended\/API\/Kernel.html#method_applyConfig","(string $name, array $params, null $default = null)","Applies a callback option (if it is callable) on parameters",2],["Kernel::getResourcePath","MarkdownExtended\\API\\Kernel","MarkdownExtended\/API\/Kernel.html#method_getResourcePath","(string $name, string $type)","Finds an internal resource file by type",2],["OutputFormatInterface::buildTag","MarkdownExtended\\API\\OutputFormatInterface","MarkdownExtended\/API\/OutputFormatInterface.html#method_buildTag","(string $tag_name, string $content = null, array $attributes = array())","This may construct a valid string for concerned tag,",2],["OutputFormatInterface::getTagString","MarkdownExtended\\API\\OutputFormatInterface","MarkdownExtended\/API\/OutputFormatInterface.html#method_getTagString","(string $content, string $tag_name, array $attributes = array())","",2],["OutputFormatInterface::getNotesToString","MarkdownExtended\\API\\OutputFormatInterface","MarkdownExtended\/API\/OutputFormatInterface.html#method_getNotesToString","(array $notes, <a href=\"MarkdownExtended\/API\/ContentInterface.html\"><abbr title=\"MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr><\/a> $content)","Gets the notes list as string",2],["OutputFormatInterface::getMetadataToString","MarkdownExtended\\API\\OutputFormatInterface","MarkdownExtended\/API\/OutputFormatInterface.html#method_getMetadataToString","(array $metadata, <a href=\"MarkdownExtended\/API\/ContentInterface.html\"><abbr title=\"MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr><\/a> $content)","Gets the metadata list as string",2],["TemplateInterface::parse","MarkdownExtended\\API\\TemplateInterface","MarkdownExtended\/API\/TemplateInterface.html#method_parse","(<a href=\"MarkdownExtended\/API\/ContentInterface.html\"><abbr title=\"MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr><\/a> $content)","Insert a content in a template",2],["AbstractConsole::__construct","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method___construct","()","Initializes a new console app",2],["AbstractConsole::setStream","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_setStream","(<a href=\"MarkdownExtended\/Console\/Stream.html\"><abbr title=\"MarkdownExtended\\Console\\Stream\">Stream<\/abbr><\/a> $stream)","Sets console's stream handler",2],["AbstractConsole::setUserInput","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_setUserInput","(<a href=\"MarkdownExtended\/Console\/UserInput.html\"><abbr title=\"MarkdownExtended\\Console\\UserInput\">UserInput<\/abbr><\/a> $input)","Sets console's user input handler",2],["AbstractConsole::setArgumentRequired","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_setArgumentRequired","(bool $arg_required)","Defines if an argument is required or not",2],["AbstractConsole::setName","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_setName","(string $name)","Sets the command's name",2],["AbstractConsole::setShortname","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_setShortname","(string $name)","Sets the command's short-name",2],["AbstractConsole::setVersion","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_setVersion","(string $version)","Sets the command's version number",2],["AbstractConsole::setShortVersionString","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_setShortVersionString","(string $str)","Sets the command's short version string",2],["AbstractConsole::setLongVersionString","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_setLongVersionString","(string $str)","Sets the command's long version string",2],["AbstractConsole::setDescription","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_setDescription","(string $str)","Sets the command's description",2],["AbstractConsole::setUsage","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_setUsage","(string $str)","Sets the command's usage string",2],["AbstractConsole::setSynopsis","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_setSynopsis","(string $str)","Sets the command's synopsis",2],["AbstractConsole::addCliOption","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_addCliOption","(string $name, array $opt)","Adds a new CLI option available for the command",2],["AbstractConsole::getOption","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_getOption","(string $name, null $default = null)","Gets a script's option value",2],["AbstractConsole::enableHardDebug","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_enableHardDebug","()","Enables hard debugging",2],["AbstractConsole::parseOptions","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_parseOptions","()","Get the command line user options",2],["AbstractConsole::runVersion","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_runVersion","()","Runs the `--version` option",2],["AbstractConsole::runHelp","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_runHelp","()","Runs the `--help` option",2],["AbstractConsole::runUsage","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_runUsage","()","Runs the usage string",2],["AbstractConsole::run","MarkdownExtended\\Console\\AbstractConsole","MarkdownExtended\/Console\/AbstractConsole.html#method_run","()","Actually run command's process",2],["Console::__construct","MarkdownExtended\\Console\\Console","MarkdownExtended\/Console\/Console.html#method___construct","()","Initialized the command",2],["Console::getMarkdownExtendedParser","MarkdownExtended\\Console\\Console","MarkdownExtended\/Console\/Console.html#method_getMarkdownExtendedParser","()","Gets markdown parser with current options",2],["Console::getResults","MarkdownExtended\\Console\\Console","MarkdownExtended\/Console\/Console.html#method_getResults","(bool $as_array = false)","Gets rendering results",2],["Console::run","MarkdownExtended\\Console\\Console","MarkdownExtended\/Console\/Console.html#method_run","()","Actually run the command process",2],["Stream::__construct","MarkdownExtended\\Console\\Stream","MarkdownExtended\/Console\/Stream.html#method___construct","()","Initializes all streams",2],["Stream::setStream","MarkdownExtended\\Console\\Stream","MarkdownExtended\/Console\/Stream.html#method_setStream","(string $type, resource $stream)","Sets a stream resource by type in stdin, stdout or",2],["Stream::getStream","MarkdownExtended\\Console\\Stream","MarkdownExtended\/Console\/Stream.html#method_getStream","(string $type)","Gets a stream by type: stdin, stdout or stderr",2],["Stream::setExceptionHandlerCallback","MarkdownExtended\\Console\\Stream","MarkdownExtended\/Console\/Stream.html#method_setExceptionHandlerCallback","(callable $callback)","Sets a callback triggered when an exception is caught",2],["Stream::setVerbosity","MarkdownExtended\\Console\\Stream","MarkdownExtended\/Console\/Stream.html#method_setVerbosity","(int $int)","Sets stream verbosity flag",2],["Stream::getVerbosity","MarkdownExtended\\Console\\Stream","MarkdownExtended\/Console\/Stream.html#method_getVerbosity","()","Gets stream verbosity flag",2],["Stream::_exit","MarkdownExtended\\Console\\Stream","MarkdownExtended\/Console\/Stream.html#method__exit","(int $code)","Actually exits current process",2],["Stream::handleException","MarkdownExtended\\Console\\Stream","MarkdownExtended\/Console\/Stream.html#method_handleException","(<abbr title=\"MarkdownExtended\\Console\\Exception\">Exception<\/abbr> $e)","Write a caught exception",2],["Stream::write","MarkdownExtended\\Console\\Stream","MarkdownExtended\/Console\/Stream.html#method_write","(string $str, bool $new_line = true, string $stream = self::IO_STDOUT)","Write an info to CLI output",2],["Stream::writeln","MarkdownExtended\\Console\\Stream","MarkdownExtended\/Console\/Stream.html#method_writeln","(string $str, string $stream = self::IO_STDOUT)","Write an info to CLI output with line break",2],["Stream::writetable","MarkdownExtended\\Console\\Stream","MarkdownExtended\/Console\/Stream.html#method_writetable","(array $table, string $stream = self::IO_STDOUT)","Write an info to CLI output with line break",2],["Stream::verbose","MarkdownExtended\\Console\\Stream","MarkdownExtended\/Console\/Stream.html#method_verbose","(string $str, bool $new_line = true, string $stream = self::IO_STDOUT)","Write an info to CLI output in verbose mode",2],["Stream::verboseln","MarkdownExtended\\Console\\Stream","MarkdownExtended\/Console\/Stream.html#method_verboseln","(string $str, string $stream = self::IO_STDOUT)","Write an info to CLI output with line break in verbose",2],["Stream::debug","MarkdownExtended\\Console\\Stream","MarkdownExtended\/Console\/Stream.html#method_debug","(string|array $stack, bool $new_line = true, string $stream = self::IO_STDOUT)","Write an info to CLI output in debug mode",2],["Stream::debugln","MarkdownExtended\\Console\\Stream","MarkdownExtended\/Console\/Stream.html#method_debugln","(string|array $stack, string $stream = self::IO_STDOUT)","Write an info to CLI output with line break in debug",2],["Stream::getPipedInput","MarkdownExtended\\Console\\Stream","MarkdownExtended\/Console\/Stream.html#method_getPipedInput","()","Get any output from previous command STDIN piped see",2],["UserInput::__construct","MarkdownExtended\\Console\\UserInput","MarkdownExtended\/Console\/UserInput.html#method___construct","(array $definitions)","",2],["UserInput::getOption","MarkdownExtended\\Console\\UserInput","MarkdownExtended\/Console\/UserInput.html#method_getOption","(<abbr title=\"MarkdownExtended\\Console\\$name\">$name<\/abbr> $name)","Gets an option object by name or shortcut",2],["UserInput::getIndexedOptions","MarkdownExtended\\Console\\UserInput","MarkdownExtended\/Console\/UserInput.html#method_getIndexedOptions","()","Gets the array of options indexed by their names",2],["UserInput::getFilteredOptions","MarkdownExtended\\Console\\UserInput","MarkdownExtended\/Console\/UserInput.html#method_getFilteredOptions","(string $name)","Gets an array of a value of each option, indexed by",2],["UserInput::getOptionsInfo","MarkdownExtended\\Console\\UserInput","MarkdownExtended\/Console\/UserInput.html#method_getOptionsInfo","()","Gets an automatic information of a set of options",2],["UserInput::getOptionsSynopsis","MarkdownExtended\\Console\\UserInput","MarkdownExtended\/Console\/UserInput.html#method_getOptionsSynopsis","()","Gets an automatic synopsis of a set of options",2],["UserInput::parseOptions","MarkdownExtended\\Console\\UserInput","MarkdownExtended\/Console\/UserInput.html#method_parseOptions","()","Parse the command line user options based on CLI options",2],["UserInput::getSanitizedUserInput","MarkdownExtended\\Console\\UserInput","MarkdownExtended\/Console\/UserInput.html#method_getSanitizedUserInput","()","Gets the input array of options and arguments",2],["UserOption::__construct","MarkdownExtended\\Console\\UserOption","MarkdownExtended\/Console\/UserOption.html#method___construct","(array $item, string $name)","Organize and cleanup an option definition",2],["UserOption::validateUserValue","MarkdownExtended\\Console\\UserOption","MarkdownExtended\/Console\/UserOption.html#method_validateUserValue","(string $value)","Validate a user CLI option value",2],["UserOption::getInfo","MarkdownExtended\\Console\\UserOption","MarkdownExtended\/Console\/UserOption.html#method_getInfo","()","Gets an automatic information about the option",2],["UserOption::getSynopsis","MarkdownExtended\\Console\\UserOption","MarkdownExtended\/Console\/UserOption.html#method_getSynopsis","()","Gets an automatic synopsis of the option",2],["UserOption::getArgumentString","MarkdownExtended\\Console\\UserOption","MarkdownExtended\/Console\/UserOption.html#method_getArgumentString","()","Gets an option value type as string",2],["UserOption::has","MarkdownExtended\\Console\\UserOption","MarkdownExtended\/Console\/UserOption.html#method_has","(<abbr title=\"MarkdownExtended\\Console\\$name\">$name<\/abbr> $name)","Alias of `$this->data->...`",2],["UserOption::get","MarkdownExtended\\Console\\UserOption","MarkdownExtended\/Console\/UserOption.html#method_get","(<abbr title=\"MarkdownExtended\\Console\\$name\">$name<\/abbr> $name)","Alias of `$this->data->...`",2],["UserOption::set","MarkdownExtended\\Console\\UserOption","MarkdownExtended\/Console\/UserOption.html#method_set","(<abbr title=\"MarkdownExtended\\Console\\$name\">$name<\/abbr> $name, <abbr title=\"MarkdownExtended\\Console\\$value\">$value<\/abbr> $value)","Alias of `$this->data->...`",2],["Content::__construct","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method___construct","(null|string $source = null, null|array $options = null)","Construct a new content object with a source and current",2],["Content::__toString","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method___toString","()","Use the content as a string",2],["Content::__toArray","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method___toArray","()","Get the content as an array",2],["Content::setSource","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_setSource","(string $source)","Sets the original source of the content",2],["Content::getSource","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getSource","()","Gets the original source of the content",2],["Content::setParsingOptions","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_setParsingOptions","(array $options)","Sets the array of options used to parse the content",2],["Content::getParsingOptions","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getParsingOptions","()","Gets the array of options used to parse the content",2],["Content::setContent","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_setContent","(string $content)","Sets the content's \"final\" content",2],["Content::getContent","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getContent","()","Gets the content's \"final\" content",2],["Content::setCharset","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_setCharset","(string $charset)","Sets the content's character set",2],["Content::getCharset","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getCharset","()","Gets the content's character set",2],["Content::setTitle","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_setTitle","(string $title)","Sets the content's title",2],["Content::getTitle","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getTitle","()","Gets the content's title",2],["Content::setBody","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_setBody","(string $str)","Sets the content's body",2],["Content::getBody","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getBody","()","Gets the content's body",2],["Content::setNotes","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_setNotes","(array $notes)","Sets the content's footnotes",2],["Content::addNote","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_addNote","(array $note, string $note_id)","Adds a content's footnote",2],["Content::getNotes","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getNotes","()","Gets the content's notes",2],["Content::getNotesFormatted","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getNotesFormatted","()","Gets the content's notes formatted in current output",2],["Content::setMetadata","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_setMetadata","(array $data)","Sets content's metadata",2],["Content::addMetadata","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_addMetadata","(string $var, string $val)","Adds a new content's metadata",2],["Content::getMetadata","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getMetadata","(null $name = null)","Gets one or all content's metadata",2],["Content::getMetadataFormatted","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getMetadataFormatted","()","Gets content's metadata formatted in current output",2],["AbstractGamut::runGamut","MarkdownExtended\\Grammar\\AbstractGamut","MarkdownExtended\/Grammar\/AbstractGamut.html#method_runGamut","(string $gamut, string $text, bool $forced = false)","Run a gamut stack from a filter or tool",2],["AbstractGamut::resetHash","MarkdownExtended\\Grammar\\AbstractGamut","MarkdownExtended\/Grammar\/AbstractGamut.html#method_resetHash","()","Reset the hash table",2],["AbstractGamut::setHash","MarkdownExtended\\Grammar\\AbstractGamut","MarkdownExtended\/Grammar\/AbstractGamut.html#method_setHash","(string $key, string $text)","Reference a new hash",2],["AbstractGamut::getHash","MarkdownExtended\\Grammar\\AbstractGamut","MarkdownExtended\/Grammar\/AbstractGamut.html#method_getHash","(string $key)","Retrieve a hash by its key",2],["Filter::getDefaultMethod","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter.html#method_getDefaultMethod","()","Must return a method name",2],["Filter::transform","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter.html#method_transform","(string $text)","Must process the filter on a text",2],["Filter::hashPart","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter.html#method_hashPart","(string $text, string $boundary = &#039;X&#039;)","Creates a hash for any sub-content",2],["Filter::hashBlock","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter.html#method_hashBlock","(string $text)","Shortcut function for hashPart with block-level boundaries.",2],["Filter::hashClean","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter.html#method_hashClean","(string $text)","Called whenever a tag must be hashed when a function",2],["Filter::unhash","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter.html#method_unhash","(string $text)","Swap back in all the tags hashed by _HashHTMLBlocks.",2],["Abbreviation::_setup","MarkdownExtended\\Grammar\\Filter\\Abbreviation","MarkdownExtended\/Grammar\/Filter\/Abbreviation.html#method__setup","()","Prepare masks for predefined abbreviations and descriptions",2],["Abbreviation::_teardown","MarkdownExtended\\Grammar\\Filter\\Abbreviation","MarkdownExtended\/Grammar\/Filter\/Abbreviation.html#method__teardown","()","Reset masks created by the `_setup()` method",2],["Abbreviation::transform","MarkdownExtended\\Grammar\\Filter\\Abbreviation","MarkdownExtended\/Grammar\/Filter\/Abbreviation.html#method_transform","(string $text)","Must process the filter on a text",2],["Abbreviation::strip","MarkdownExtended\\Grammar\\Filter\\Abbreviation","MarkdownExtended\/Grammar\/Filter\/Abbreviation.html#method_strip","(string $text)","Strips abbreviations from text, stores titles in hash",2],["Anchor::_setup","MarkdownExtended\\Grammar\\Filter\\Anchor","MarkdownExtended\/Grammar\/Filter\/Anchor.html#method__setup","()","Set up the `in_anchor` config flag on `false`",2],["Anchor::transform","MarkdownExtended\\Grammar\\Filter\\Anchor","MarkdownExtended\/Grammar\/Filter\/Anchor.html#method_transform","(string $text)","Must process the filter on a text",2],["AutoLink::transform","MarkdownExtended\\Grammar\\Filter\\AutoLink","MarkdownExtended\/Grammar\/Filter\/AutoLink.html#method_transform","(string $text)","Must process the filter on a text",2],["BlockInclusion::transform","MarkdownExtended\\Grammar\\Filter\\BlockInclusion","MarkdownExtended\/Grammar\/Filter\/BlockInclusion.html#method_transform","(string $text)","Must process the filter on a text",2],["BlockQuote::transform","MarkdownExtended\\Grammar\\Filter\\BlockQuote","MarkdownExtended\/Grammar\/Filter\/BlockQuote.html#method_transform","(string $text)","Must process the filter on a text",2],["CodeBlock::transform","MarkdownExtended\\Grammar\\Filter\\CodeBlock","MarkdownExtended\/Grammar\/Filter\/CodeBlock.html#method_transform","(string $text)","Must process the filter on a text",2],["CodeBlock::span","MarkdownExtended\\Grammar\\Filter\\CodeBlock","MarkdownExtended\/Grammar\/Filter\/CodeBlock.html#method_span","(string $code)","Create a code span markup for $code.",2],["DefinitionList::transform","MarkdownExtended\\Grammar\\Filter\\DefinitionList","MarkdownExtended\/Grammar\/Filter\/DefinitionList.html#method_transform","(string $text)","Must process the filter on a text",2],["DefinitionList::transformItems","MarkdownExtended\\Grammar\\Filter\\DefinitionList","MarkdownExtended\/Grammar\/Filter\/DefinitionList.html#method_transformItems","(string $list_str)","Process the contents of a single definition list, splitting",2],["Detab::init","MarkdownExtended\\Grammar\\Filter\\Detab","MarkdownExtended\/Grammar\/Filter\/Detab.html#method_init","()","Check for the availability of the function in the `utf8_strlen`",2],["Detab::transform","MarkdownExtended\\Grammar\\Filter\\Detab","MarkdownExtended\/Grammar\/Filter\/Detab.html#method_transform","(string $text)","Must process the filter on a text",2],["Emphasis::prepare","MarkdownExtended\\Grammar\\Filter\\Emphasis","MarkdownExtended\/Grammar\/Filter\/Emphasis.html#method_prepare","()","Prepare regular expressions for searching emphasis",2],["Emphasis::transform","MarkdownExtended\\Grammar\\Filter\\Emphasis","MarkdownExtended\/Grammar\/Filter\/Emphasis.html#method_transform","(string $text)","Must process the filter on a text",2],["FencedCodeBlock::transform","MarkdownExtended\\Grammar\\Filter\\FencedCodeBlock","MarkdownExtended\/Grammar\/Filter\/FencedCodeBlock.html#method_transform","(string $text)","Must process the filter on a text",2],["HTML::transform","MarkdownExtended\\Grammar\\Filter\\HTML","MarkdownExtended\/Grammar\/Filter\/HTML.html#method_transform","(string $text)","Must process the filter on a text",2],["HardBreak::transform","MarkdownExtended\\Grammar\\Filter\\HardBreak","MarkdownExtended\/Grammar\/Filter\/HardBreak.html#method_transform","(string $text)","Must process the filter on a text",2],["Header::transform","MarkdownExtended\\Grammar\\Filter\\Header","MarkdownExtended\/Grammar\/Filter\/Header.html#method_transform","(string $text)","Redefined to add id attribute support.",2],["HorizontalRule::transform","MarkdownExtended\\Grammar\\Filter\\HorizontalRule","MarkdownExtended\/Grammar\/Filter\/HorizontalRule.html#method_transform","(string $text)","Must process the filter on a text",2],["Image::transform","MarkdownExtended\\Grammar\\Filter\\Image","MarkdownExtended\/Grammar\/Filter\/Image.html#method_transform","(string $text)","Must process the filter on a text",2],["LinkDefinition::transform","MarkdownExtended\\Grammar\\Filter\\LinkDefinition","MarkdownExtended\/Grammar\/Filter\/LinkDefinition.html#method_transform","(string $text)","Must process the filter on a text",2],["LinkDefinition::strip","MarkdownExtended\\Grammar\\Filter\\LinkDefinition","MarkdownExtended\/Grammar\/Filter\/LinkDefinition.html#method_strip","(string $text)","Strips link definitions from text, stores the URLs",2],["ListItem::transform","MarkdownExtended\\Grammar\\Filter\\ListItem","MarkdownExtended\/Grammar\/Filter\/ListItem.html#method_transform","(string $text)","Must process the filter on a text",2],["ListItem::transformItems","MarkdownExtended\\Grammar\\Filter\\ListItem","MarkdownExtended\/Grammar\/Filter\/ListItem.html#method_transformItems","(string $list_str, string $marker_any_re)","Process the contents of a single ordered or unordered",2],["Maths::transform","MarkdownExtended\\Grammar\\Filter\\Maths","MarkdownExtended\/Grammar\/Filter\/Maths.html#method_transform","(string $text)","Must process the filter on a text",2],["Maths::span","MarkdownExtended\\Grammar\\Filter\\Maths","MarkdownExtended\/Grammar\/Filter\/Maths.html#method_span","(string $texblock)","Build each maths span",2],["MetaData::_setup","MarkdownExtended\\Grammar\\Filter\\MetaData","MarkdownExtended\/Grammar\/Filter\/MetaData.html#method__setup","()","Prepare object with configuration",2],["MetaData::strip","MarkdownExtended\\Grammar\\Filter\\MetaData","MarkdownExtended\/Grammar\/Filter\/MetaData.html#method_strip","(string $text)","",2],["MetaData::transform","MarkdownExtended\\Grammar\\Filter\\MetaData","MarkdownExtended\/Grammar\/Filter\/MetaData.html#method_transform","(string $line)","Must process the filter on a text",2],["MetaData::append","MarkdownExtended\\Grammar\\Filter\\MetaData","MarkdownExtended\/Grammar\/Filter\/MetaData.html#method_append","($text)","Build meta data strings",2],["Note::_setup","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method__setup","()","Prepare all required arrays",2],["Note::strip","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_strip","(string $text)","Strips link definitions from text, stores the URLs",2],["Note::transform","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_transform","(string $text)","Must process the filter on a text",2],["Note::append","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_append","(string $text)","Append footnote list to text.",2],["Note::transformFootnote","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_transformFootnote","(string $note_id)","Append footnote list to Content.",2],["Note::transformGlossary","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_transformGlossary","(string $note_id)","Append glossary notes list to Content.",2],["Note::transformBibliography","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_transformBibliography","(string $note_id)","Append bibliography notes list to Content.",2],["Note::getTypeInfo","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_getTypeInfo","($type = self::FOOTNOTE_DEFAULT)","",2],["Span::transform","MarkdownExtended\\Grammar\\Filter\\Span","MarkdownExtended\/Grammar\/Filter\/Span.html#method_transform","(string $str)","Must process the filter on a text",2],["Span::handleSpanToken","MarkdownExtended\\Grammar\\Filter\\Span","MarkdownExtended\/Grammar\/Filter\/Span.html#method_handleSpanToken","(string $token, string $str)","Handle $token provided by parseSpan by determining",2],["Table::transform","MarkdownExtended\\Grammar\\Filter\\Table","MarkdownExtended\/Grammar\/Filter\/Table.html#method_transform","(string $text)","Must process the filter on a text",2],["GamutLoader::getGamutStack","MarkdownExtended\\Grammar\\GamutLoader","MarkdownExtended\/Grammar\/GamutLoader.html#method_getGamutStack","(string $name)","Gets a gamuts' array by name",2],["GamutLoader::getGamutType","MarkdownExtended\\Grammar\\GamutLoader","MarkdownExtended\/Grammar\/GamutLoader.html#method_getGamutType","(string $value)","Gets the type of gamut in \"filter\", \"tools\" or other",2],["GamutLoader::isGamutStackName","MarkdownExtended\\Grammar\\GamutLoader","MarkdownExtended\/Grammar\/GamutLoader.html#method_isGamutStackName","(string $value)","Tests if a string seems to be a gamuts' stack reference",2],["GamutLoader::getGamutBaseName","MarkdownExtended\\Grammar\\GamutLoader","MarkdownExtended\/Grammar\/GamutLoader.html#method_getGamutBaseName","(string $gamut)","Gets the \"base name\" of a gamut entry in \"filter:class\",",2],["GamutLoader::getAllGamuts","MarkdownExtended\\Grammar\\GamutLoader","MarkdownExtended\/Grammar\/GamutLoader.html#method_getAllGamuts","()","Gets an array of all defined gamuts",2],["GamutLoader::getAllGamutsReversed","MarkdownExtended\\Grammar\\GamutLoader","MarkdownExtended\/Grammar\/GamutLoader.html#method_getAllGamutsReversed","()","Gets an array of all defined gamuts as keys",2],["GamutLoader::isGamutEnabled","MarkdownExtended\\Grammar\\GamutLoader","MarkdownExtended\/Grammar\/GamutLoader.html#method_isGamutEnabled","(string $gamut)","Tests if a gamut is enabled",2],["GamutLoader::runGamuts","MarkdownExtended\\Grammar\\GamutLoader","MarkdownExtended\/Grammar\/GamutLoader.html#method_runGamuts","(array $gamuts, string $text = null)","Runs a list of gamuts by priority on a content",2],["GamutLoader::runGamutsMethod","MarkdownExtended\\Grammar\\GamutLoader","MarkdownExtended\/Grammar\/GamutLoader.html#method_runGamutsMethod","(array $gamuts, string $method, string $text = null)","Runs a specific method of a list of gamuts by priority",2],["GamutLoader::runGamut","MarkdownExtended\\Grammar\\GamutLoader","MarkdownExtended\/Grammar\/GamutLoader.html#method_runGamut","(string $gamut, string $text = null, string $_method = null)","Runs a single gamut on a content",2],["Lexer::__construct","MarkdownExtended\\Grammar\\Lexer","MarkdownExtended\/Grammar\/Lexer.html#method___construct","()","Sets up some regex masks based on current configuration",2],["Lexer::parse","MarkdownExtended\\Grammar\\Lexer","MarkdownExtended\/Grammar\/Lexer.html#method_parse","(<a href=\"MarkdownExtended\/Content.html\"><abbr title=\"MarkdownExtended\\Content\">Content<\/abbr><\/a> $content)","Performs some pre-processing on the input text and",2],["Lexer::runGamut","MarkdownExtended\\Grammar\\Lexer","MarkdownExtended\/Grammar\/Lexer.html#method_runGamut","(string $gamut, string $text, bool $forced = false)","Run a gamut stack from a filter or tool",2],["Lexer::runGamuts","MarkdownExtended\\Grammar\\Lexer","MarkdownExtended\/Grammar\/Lexer.html#method_runGamuts","(array $gamuts, string $text = null)","Call to MarkdownExtended\\Grammar\\GamutLoader for an",2],["Tools::getDefaultMethod","MarkdownExtended\\Grammar\\Tools","MarkdownExtended\/Grammar\/Tools.html#method_getDefaultMethod","()","Must return a method name",2],["Tools::prepareOutputFormat","MarkdownExtended\\Grammar\\Tools","MarkdownExtended\/Grammar\/Tools.html#method_prepareOutputFormat","(string $text)","Works on a content before parsing",2],["Tools::teardownOutputFormat","MarkdownExtended\\Grammar\\Tools","MarkdownExtended\/Grammar\/Tools.html#method_teardownOutputFormat","(string $text)","Works on a content after parsing",2],["Tools::AppendEndingNewLines","MarkdownExtended\\Grammar\\Tools","MarkdownExtended\/Grammar\/Tools.html#method_AppendEndingNewLines","(string $text)","Make sure $text ends with a couple of newlines",2],["Tools::EncodeAmpAndAngle","MarkdownExtended\\Grammar\\Tools","MarkdownExtended\/Grammar\/Tools.html#method_EncodeAmpAndAngle","(string $text)","Smart processing for ampersands and angle brackets",2],["Tools::EncodeAttribute","MarkdownExtended\\Grammar\\Tools","MarkdownExtended\/Grammar\/Tools.html#method_EncodeAttribute","(string $text)","Encode text for a double-quoted HTML attribute.",2],["Tools::ExtractAttributes","MarkdownExtended\\Grammar\\Tools","MarkdownExtended\/Grammar\/Tools.html#method_ExtractAttributes","(string $attributes)","Extract attributes from string 'a=\"b\"'",2],["Tools::Outdent","MarkdownExtended\\Grammar\\Tools","MarkdownExtended\/Grammar\/Tools.html#method_Outdent","(string $text)","Remove one level of line-leading tabs or spaces",2],["Tools::RebuildParagraph","MarkdownExtended\\Grammar\\Tools","MarkdownExtended\/Grammar\/Tools.html#method_RebuildParagraph","(string $text)","Process paragraphs",2],["Tools::RemoveUtf8Marker","MarkdownExtended\\Grammar\\Tools","MarkdownExtended\/Grammar\/Tools.html#method_RemoveUtf8Marker","(string $text)","Remove UTF-8 BOM and marker character in input, if",2],["Tools::StandardizeLineEnding","MarkdownExtended\\Grammar\\Tools","MarkdownExtended\/Grammar\/Tools.html#method_StandardizeLineEnding","(string $text)","Standardize line endings: DOS to Unix and Mac to Unix",2],["Tools::StripSpacedLines","MarkdownExtended\\Grammar\\Tools","MarkdownExtended\/Grammar\/Tools.html#method_StripSpacedLines","(string $text)","Strip any lines consisting only of spaces and tabs.",2],["MarkdownExtended::getAppInfo","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_getAppInfo","(bool $shorten = false)","Gets app's information",2],["MarkdownExtended::getDefaults","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_getDefaults","()","App's default settings",2],["MarkdownExtended::parse","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_parse","(string $content, null $options = null)","Parse a markdown content or file",2],["MarkdownExtended::parseString","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_parseString","(string $content, null $options = null)","Parse a markdown content",2],["MarkdownExtended::parseSource","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_parseSource","(string $path, null $options = null)","Parse a markdown file",2],["OutputFormatBag::load","MarkdownExtended\\OutputFormatBag","MarkdownExtended\/OutputFormatBag.html#method_load","(string $format)","Loads a new formatter",2],["OutputFormatBag::__call","MarkdownExtended\\OutputFormatBag","MarkdownExtended\/OutputFormatBag.html#method___call","($name, array $arguments = null)","Magic method to pass any called method from the bag",2],["OutputFormatBag::setFormatter","MarkdownExtended\\OutputFormatBag","MarkdownExtended\/OutputFormatBag.html#method_setFormatter","(<a href=\"MarkdownExtended\/API\/OutputFormatInterface.html\"><abbr title=\"MarkdownExtended\\API\\OutputFormatInterface\">OutputFormatInterface<\/abbr><\/a> $formatter)","Set the current formatter",2],["OutputFormatBag::getFormatter","MarkdownExtended\\OutputFormatBag","MarkdownExtended\/OutputFormatBag.html#method_getFormatter","()","Get current formatter",2],["AbstractOutputFormat::buildTag","MarkdownExtended\\OutputFormat\\AbstractOutputFormat","MarkdownExtended\/OutputFormat\/AbstractOutputFormat.html#method_buildTag","(string $tag_name, string $content = null, array $attributes = array())","This will try to call a method `build{TagName}()` if",2],["AbstractOutputFormat::getTagString","MarkdownExtended\\OutputFormat\\AbstractOutputFormat","MarkdownExtended\/OutputFormat\/AbstractOutputFormat.html#method_getTagString","(string $content, string $tag_name, array $attributes = array())","",2],["AbstractOutputFormat::getNotesToString","MarkdownExtended\\OutputFormat\\AbstractOutputFormat","MarkdownExtended\/OutputFormat\/AbstractOutputFormat.html#method_getNotesToString","(array $notes, <a href=\"MarkdownExtended\/API\/ContentInterface.html\"><abbr title=\"MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr><\/a> $content)","Gets the notes list as string",2],["AbstractOutputFormat::getMetadataToString","MarkdownExtended\\OutputFormat\\AbstractOutputFormat","MarkdownExtended\/OutputFormat\/AbstractOutputFormat.html#method_getMetadataToString","(array $metadata, <a href=\"MarkdownExtended\/API\/ContentInterface.html\"><abbr title=\"MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr><\/a> $content)","Gets the metadata list as string",2],["Html::__construct","MarkdownExtended\\OutputFormat\\Html","MarkdownExtended\/OutputFormat\/Html.html#method___construct","()","Get the configuration 'empty_element_suffix'",2],["Html::getTagString","MarkdownExtended\\OutputFormat\\Html","MarkdownExtended\/OutputFormat\/Html.html#method_getTagString","(string $text, string $tag, array $attributes = array(), bool $close = false)","",2],["Html::buildTitle","MarkdownExtended\\OutputFormat\\Html","MarkdownExtended\/OutputFormat\/Html.html#method_buildTitle","($text, array $attributes = array())","",2],["Html::buildMetaData","MarkdownExtended\\OutputFormat\\Html","MarkdownExtended\/OutputFormat\/Html.html#method_buildMetaData","($text = null, array $attributes = array())","",2],["Html::buildComment","MarkdownExtended\\OutputFormat\\Html","MarkdownExtended\/OutputFormat\/Html.html#method_buildComment","($text = null, array $attributes = array())","",2],["Html::buildParagraph","MarkdownExtended\\OutputFormat\\Html","MarkdownExtended\/OutputFormat\/Html.html#method_buildParagraph","($text = null, array $attributes = array())","",2],["Html::buildLink","MarkdownExtended\\OutputFormat\\Html","MarkdownExtended\/OutputFormat\/Html.html#method_buildLink","($text = null, array $attributes = array())","",2],["Html::buildPreformatted","MarkdownExtended\\OutputFormat\\Html","MarkdownExtended\/OutputFormat\/Html.html#method_buildPreformatted","($text = null, array $attributes = array())","",2],["Html::buildMaths","MarkdownExtended\\OutputFormat\\Html","MarkdownExtended\/OutputFormat\/Html.html#method_buildMaths","($text = null, array $attributes = array(), $type = &#039;div&#039;)","",2],["Html::buildMathsBlock","MarkdownExtended\\OutputFormat\\Html","MarkdownExtended\/OutputFormat\/Html.html#method_buildMathsBlock","($text = null, array $attributes = array())","",2],["Html::buildMathsSpan","MarkdownExtended\\OutputFormat\\Html","MarkdownExtended\/OutputFormat\/Html.html#method_buildMathsSpan","($text = null, array $attributes = array())","",2],["Html::buildFootnoteStandardItem","MarkdownExtended\\OutputFormat\\Html","MarkdownExtended\/OutputFormat\/Html.html#method_buildFootnoteStandardItem","($text = null, array $attributes = array(), $note_type = Note::FOOTNOTE_DEFAULT)","",2],["Html::buildFootnoteGlossaryItem","MarkdownExtended\\OutputFormat\\Html","MarkdownExtended\/OutputFormat\/Html.html#method_buildFootnoteGlossaryItem","($text = null, array $attributes = array())","",2],["Html::buildFootnoteBibliographyItem","MarkdownExtended\\OutputFormat\\Html","MarkdownExtended\/OutputFormat\/Html.html#method_buildFootnoteBibliographyItem","($text = null, array $attributes = array())","",2],["Html::buildFootnoteStandardLink","MarkdownExtended\\OutputFormat\\Html","MarkdownExtended\/OutputFormat\/Html.html#method_buildFootnoteStandardLink","($text = null, array $attributes = array(), $note_type = Note::FOOTNOTE_DEFAULT)","",2],["Html::buildFootnoteGlossaryLink","MarkdownExtended\\OutputFormat\\Html","MarkdownExtended\/OutputFormat\/Html.html#method_buildFootnoteGlossaryLink","($text = null, array $attributes = array())","",2],["Html::buildFootnoteBibliographyLink","MarkdownExtended\\OutputFormat\\Html","MarkdownExtended\/OutputFormat\/Html.html#method_buildFootnoteBibliographyLink","($text = null, array $attributes = array())","",2],["Man::__construct","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method___construct","()","Remind some commons",2],["Man::buildTag","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTag","(string $tag_name, string $content = null, array $attributes = array())","This will try to call a method `build{TagName}()` if",2],["Man::getTagString","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_getTagString","(string $content, string $tag_name, array $attributes = array())","",2],["Man::escapeString","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_escapeString","(null $text = null, bool $escape_slashes = false, bool $strip_blank_lines = true)","Escape a string ready for manpage output",2],["Man::trimString","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_trimString","(null $text = null)","Special `trim()` to actually trim and \"r-trim\" last",2],["Man::teardown","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_teardown","($text)","",2],["Man::buildTitle","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTitle","($text, array $attributes = array())","",2],["Man::indent","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_indent","()","",2],["Man::unindent","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_unindent","()","",2],["Man::buildMetaData","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildMetaData","($text = null, array $attributes = array())","",2],["Man::buildMetaTitle","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildMetaTitle","($text = null, array $attributes = array())","",2],["Man::buildParagraph","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildParagraph","($text = null, array $attributes = array())","",2],["Man::buildBold","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildBold","($text = null, array $attributes = array())","",2],["Man::buildItalic","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildItalic","($text = null, array $attributes = array())","",2],["Man::buildPreformatted","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildPreformatted","($text = null, array $attributes = array())","",2],["Man::buildCode","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildCode","($text = null, array $attributes = array())","",2],["Man::buildAbbreviation","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildAbbreviation","($text = null, array $attributes = array())","",2],["Man::buildDefinitionList","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildDefinitionList","($text = null, array $attributes = array())","",2],["Man::buildDefinitionListItemTerm","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildDefinitionListItemTerm","($text = null, array $attributes = array())","",2],["Man::buildDefinitionListItemDefinition","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildDefinitionListItemDefinition","($text = null, array $attributes = array())","",2],["Man::buildNewLine","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildNewLine","($text = null, array $attributes = array())","",2],["Man::buildHorizontalRule","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildHorizontalRule","($text = null, array $attributes = array())","",2],["Man::buildComment","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildComment","($text = null, array $attributes = array())","",2],["Man::buildListItem","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildListItem","($text = null, array $attributes = array())","",2],["Man::buildUnorderedListItem","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildUnorderedListItem","($text = null, array $attributes = array())","",2],["Man::buildOrderedListItem","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildOrderedListItem","($text = null, array $attributes = array())","",2],["Man::buildList","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildList","($text = null, array $attributes = array())","",2],["Man::buildUnorderedList","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildUnorderedList","($text = null, array $attributes = array())","",2],["Man::buildOrderedList","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildOrderedList","($text = null, array $attributes = array())","",2],["Man::buildLink","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildLink","($text = null, array $attributes = array())","",2],["Man::buildBlockquote","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildBlockquote","($text = null, array $attributes = array())","",2],["Man::buildTableCaption","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableCaption","($text = null, array $attributes = array())","",2],["Man::buildTableBody","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableBody","($text = null, array $attributes = array())","",2],["Man::buildTableHeader","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableHeader","($text = null, array $attributes = array())","",2],["Man::buildTableFooter","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableFooter","($text = null, array $attributes = array())","",2],["Man::buildTableLine","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableLine","($text = null, array $attributes = array())","",2],["Man::buildTableCell","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableCell","($text = null, array $attributes = array())","",2],["Man::buildTableCellHead","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableCellHead","($text = null, array $attributes = array())","",2],["Parser::__construct","MarkdownExtended\\Parser","MarkdownExtended\/Parser.html#method___construct","(null|string|array $options = null)","Constructs a new parser with optional custom options",2],["Parser::getKernel","MarkdownExtended\\Parser","MarkdownExtended\/Parser.html#method_getKernel","()","Gets app's Kernel",2],["Parser::resetOptions","MarkdownExtended\\Parser","MarkdownExtended\/Parser.html#method_resetOptions","()","Resets options to defaults",2],["Parser::setOptions","MarkdownExtended\\Parser","MarkdownExtended\/Parser.html#method_setOptions","(string|array $options)","Defines custom options or configuration file",2],["Parser::transform","MarkdownExtended\\Parser","MarkdownExtended\/Parser.html#method_transform","(string|<a href=\"MarkdownExtended\/API\/ContentInterface.html\"><abbr title=\"MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr><\/a> $content, null $name = null, bool $primary = true)","Transforms a string",2],["Parser::transformSource","MarkdownExtended\\Parser","MarkdownExtended\/Parser.html#method_transformSource","(string $path, bool $primary = true)","Transforms a source file",2],["Templater::__construct","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method___construct","()","Initializes object's registries",2],["Templater::parse","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_parse","(<a href=\"MarkdownExtended\/API\/ContentInterface.html\"><abbr title=\"MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr><\/a> $content, $template_path = null)","Insert a content in a template",2],["Templater::getTemplate","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_getTemplate","(string $template_path)","Gets a template file content",2],["Templater::getParams","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_getParams","(<a href=\"MarkdownExtended\/API\/ContentInterface.html\"><abbr title=\"MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr><\/a> $content)","Gets the array of parameters to pass in the template",2],["CacheRegistry::__construct","MarkdownExtended\\Util\\CacheRegistry","MarkdownExtended\/Util\/CacheRegistry.html#method___construct","()","Initialize the cache registry",2],["CacheRegistry::isCached","MarkdownExtended\\Util\\CacheRegistry","MarkdownExtended\/Util\/CacheRegistry.html#method_isCached","(string $index)","Tests if an index is cached",2],["CacheRegistry::getCache","MarkdownExtended\\Util\\CacheRegistry","MarkdownExtended\/Util\/CacheRegistry.html#method_getCache","(string $index)","Gets current cached content of an index",2],["CacheRegistry::setCache","MarkdownExtended\\Util\\CacheRegistry","MarkdownExtended\/Util\/CacheRegistry.html#method_setCache","(string $index, mixed $object)","Sets a cached content for an index",2],["ContentCollection::__construct","MarkdownExtended\\Util\\ContentCollection","MarkdownExtended\/Util\/ContentCollection.html#method___construct","(array $data = array())","Constructs a new collection being sure that data are",2],["ContentCollection::append","MarkdownExtended\\Util\\ContentCollection","MarkdownExtended\/Util\/ContentCollection.html#method_append","(<a href=\"MarkdownExtended\/API\/ContentInterface.html\"><abbr title=\"MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr><\/a> $content)","Appends a new collection entry",2],["ContentCollection::offsetSet","MarkdownExtended\\Util\\ContentCollection","MarkdownExtended\/Util\/ContentCollection.html#method_offsetSet","(string $index, string $content)","Sets a collection entry",2],["DomIdRegistry::__construct","MarkdownExtended\\Util\\DomIdRegistry","MarkdownExtended\/Util\/DomIdRegistry.html#method___construct","()","Initializes the registry",2],["DomIdRegistry::has","MarkdownExtended\\Util\\DomIdRegistry","MarkdownExtended\/Util\/DomIdRegistry.html#method_has","(string $reference)","Verifies if a reference is already defined in registry",2],["DomIdRegistry::exists","MarkdownExtended\\Util\\DomIdRegistry","MarkdownExtended\/Util\/DomIdRegistry.html#method_exists","(string $id)","Verifies if an ID is already defined in the registry",2],["DomIdRegistry::get","MarkdownExtended\\Util\\DomIdRegistry","MarkdownExtended\/Util\/DomIdRegistry.html#method_get","(string $reference, null|string $id = null)","Gets a DOM unique ID",2],["DomIdRegistry::set","MarkdownExtended\\Util\\DomIdRegistry","MarkdownExtended\/Util\/DomIdRegistry.html#method_set","(string $id, string $reference = null)","Creates and get a new DOM unique ID",2],["Helper::escapeCodeContent","MarkdownExtended\\Util\\Helper","MarkdownExtended\/Util\/Helper.html#method_escapeCodeContent","(string $code)","Escape the code blocks contents to get HTML entities",2],["Helper::fillPlaceholders","MarkdownExtended\\Util\\Helper","MarkdownExtended\/Util\/Helper.html#method_fillPlaceholders","(string $text, string $replacement)","Replace any `%%` mask by a replacement",2],["Helper::header2Label","MarkdownExtended\\Util\\Helper","MarkdownExtended\/Util\/Helper.html#method_header2Label","(string $text, string $separator = &#039;-&#039;)","Transform a header string to DOM valid label",2],["Helper::humanReadable","MarkdownExtended\\Util\\Helper","MarkdownExtended\/Util\/Helper.html#method_humanReadable","(string $string = &#039;&#039;)","Transform a string to a human readable one",2],["Helper::encodeEmailAddress","MarkdownExtended\\Util\\Helper","MarkdownExtended\/Util\/Helper.html#method_encodeEmailAddress","(string $addr)","Input: an email address, e.g.",2],["Helper::getSafeString","MarkdownExtended\\Util\\Helper","MarkdownExtended\/Util\/Helper.html#method_getSafeString","(mixed $source)","Gets a \"safe string\" from a `\\DateTime` or an array",2],["Helper::isSingleLine","MarkdownExtended\\Util\\Helper","MarkdownExtended\/Util\/Helper.html#method_isSingleLine","(string $str = &#039;&#039;)","Tests if a content seems to be single line",2],["Helper::buildRegex","MarkdownExtended\\Util\\Helper","MarkdownExtended\/Util\/Helper.html#method_buildRegex","(string $mask, string $delimiter = &#039;#&#039;, string $options = &#039;i&#039;)","Get a ready-to-use regular expression from a string",2],["Helper::toCamelCase","MarkdownExtended\\Util\\Helper","MarkdownExtended\/Util\/Helper.html#method_toCamelCase","(string $name, string $replace = &#039;_&#039;, bool $capitalize_first_char = true)","Transform a name in CamelCase",2],["Helper::fromCamelCase","MarkdownExtended\\Util\\Helper","MarkdownExtended\/Util\/Helper.html#method_fromCamelCase","(string $name, string $replace = &#039;_&#039;, bool $lowerize_first_char = true)","Transform a name from CamelCase to other",2],["Helper::getPath","MarkdownExtended\\Util\\Helper","MarkdownExtended\/Util\/Helper.html#method_getPath","(array|string $parts)","Gets a wel-formatted path with environment-compliant",2],["Helper::readFile","MarkdownExtended\\Util\\Helper","MarkdownExtended\/Util\/Helper.html#method_readFile","(string $path, int $flag = FILE_USE_INCLUDE_PATH)","Reads a file and returns its content",2],["Helper::writeFile","MarkdownExtended\\Util\\Helper","MarkdownExtended\/Util\/Helper.html#method_writeFile","(string $path, string|array $content, bool $backup = true, null $flag = null)","Writes a file and returns content length",2],["Helper::backupFile","MarkdownExtended\\Util\\Helper","MarkdownExtended\/Util\/Helper.html#method_backupFile","(string $path)","Make a backup of a file",2],["Helper::debug","MarkdownExtended\\Util\\Helper","MarkdownExtended\/Util\/Helper.html#method_debug","(mixed $objs, null|string $title = null, bool $html = true)","Dump quite anything with an optional title",2],["Registry::__construct","MarkdownExtended\\Util\\Registry","MarkdownExtended\/Util\/Registry.html#method___construct","(array $data = array())","Initialize the registry",2],["Registry::set","MarkdownExtended\\Util\\Registry","MarkdownExtended\/Util\/Registry.html#method_set","(string $var, mixed $val)","Sets or resets a new instance in global registry",2],["Registry::add","MarkdownExtended\\Util\\Registry","MarkdownExtended\/Util\/Registry.html#method_add","(string $var, mixed $val)","Adds something to an existing entry of the global registry,",2],["Registry::has","MarkdownExtended\\Util\\Registry","MarkdownExtended\/Util\/Registry.html#method_has","(string $var)","Tests if an index exists in the registry",2],["Registry::remove","MarkdownExtended\\Util\\Registry","MarkdownExtended\/Util\/Registry.html#method_remove","(string $var, null|string $index = null)","Removes something to an existing entry of the global",2],["Registry::get","MarkdownExtended\\Util\\Registry","MarkdownExtended\/Util\/Registry.html#method_get","(string $var, mixed $default = null)","Gets an entry from the global registry",2],["Registry::getAll","MarkdownExtended\\Util\\Registry","MarkdownExtended\/Util\/Registry.html#method_getAll","()","Gets the global registry",2],["Registry::count","MarkdownExtended\\Util\\Registry","MarkdownExtended\/Util\/Registry.html#method_count","()","Counts the registry entries",2],["Registry::extend","MarkdownExtended\\Util\\Registry","MarkdownExtended\/Util\/Registry.html#method_extend","(mixed $what, mixed $add)","Extends a value with another, if types match",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']