var search_data = {
    'index': {
        'searchIndex': ["markdownextended","markdownextended\\api","markdownextended\\commandline","markdownextended\\exception","markdownextended\\grammar","markdownextended\\grammar\\filter","markdownextended\\grammar\\tool","markdownextended\\outputformat","markdownextended\\util","markdown","markdownextended\\api","markdownextended\\api\\collectioninterface","markdownextended\\api\\contentinterface","markdownextended\\api\\gamutinterface","markdownextended\\api\\kernelinterface","markdownextended\\api\\outputformathelperinterface","markdownextended\\api\\outputformatinterface","markdownextended\\api\\parserinterface","markdownextended\\api\\templaterinterface","markdownextended\\commandline\\abstractconsole","markdownextended\\commandline\\console","markdownextended\\commandline\\reminders","markdownextended\\config","markdownextended\\content","markdownextended\\contentcollection","markdownextended\\exception\\domainexception","markdownextended\\exception\\exception","markdownextended\\exception\\invalidargumentexception","markdownextended\\exception\\runtimeexception","markdownextended\\exception\\unexpectedvalueexception","markdownextended\\grammar\\abstractgamut","markdownextended\\grammar\\filter","markdownextended\\grammar\\filter\\abbreviation","markdownextended\\grammar\\filter\\anchor","markdownextended\\grammar\\filter\\autolink","markdownextended\\grammar\\filter\\blockinclusion","markdownextended\\grammar\\filter\\blockquote","markdownextended\\grammar\\filter\\codeblock","markdownextended\\grammar\\filter\\definitionlist","markdownextended\\grammar\\filter\\emphasis","markdownextended\\grammar\\filter\\fencedcodeblock","markdownextended\\grammar\\filter\\html","markdownextended\\grammar\\filter\\hardbreak","markdownextended\\grammar\\filter\\header","markdownextended\\grammar\\filter\\horizontalrule","markdownextended\\grammar\\filter\\image","markdownextended\\grammar\\filter\\linkdefinition","markdownextended\\grammar\\filter\\listitem","markdownextended\\grammar\\filter\\maths","markdownextended\\grammar\\filter\\metadata","markdownextended\\grammar\\filter\\note","markdownextended\\grammar\\filter\\span","markdownextended\\grammar\\filter\\table","markdownextended\\grammar\\filter\\tableofcontents","markdownextended\\grammar\\gamut","markdownextended\\grammar\\tool","markdownextended\\grammar\\tool\\appendendingnewlines","markdownextended\\grammar\\tool\\detab","markdownextended\\grammar\\tool\\encodeampandangle","markdownextended\\grammar\\tool\\encodeattribute","markdownextended\\grammar\\tool\\extractattributes","markdownextended\\grammar\\tool\\outdent","markdownextended\\grammar\\tool\\rebuildparagraph","markdownextended\\grammar\\tool\\removeutf8marker","markdownextended\\grammar\\tool\\standardizelineending","markdownextended\\grammar\\tool\\stripspacedlines","markdownextended\\helper","markdownextended\\markdownextended","markdownextended\\outputformatbag","markdownextended\\outputformat\\abstractoutputformat","markdownextended\\outputformat\\defaulthelper","markdownextended\\outputformat\\html","markdownextended\\outputformat\\htmlhelper","markdownextended\\outputformat\\man","markdownextended\\outputformat\\manhelper","markdownextended\\parser","markdownextended\\registry","markdownextended\\templater","markdownextended\\util\\compiler","markdownextended\\util\\menuitemiterator","markdownextended\\util\\recursivemenuiterator","markdown\\markdownextendedparser","markdown\\markdownextraparser","markdown\\markdownparser","markdown\\markdownparsercompatibilityinterface","markdown\\multimarkdownparser","markdownextended\\api::factory","markdownextended\\api::isvalid","markdownextended\\api::getrelativeclassname","markdownextended\\api::getabsoluteclassname","markdownextended\\api::debug","markdownextended\\api\\contentinterface::getsource","markdownextended\\api\\gamutinterface::getdefaultmethod","markdownextended\\api\\kernelinterface::__construct","markdownextended\\api\\kernelinterface::getinstance","markdownextended\\api\\kernelinterface::create","markdownextended\\api\\kernelinterface::factory","markdownextended\\api\\kernelinterface::get","markdownextended\\api\\kernelinterface::transformstring","markdownextended\\api\\kernelinterface::transformsource","markdownextended\\api\\outputformathelperinterface::getfullcontent","markdownextended\\api\\outputformathelperinterface::gettoc","markdownextended\\api\\outputformatinterface::buildtag","markdownextended\\api\\outputformatinterface::gettagstring","markdownextended\\api\\parserinterface::__construct","markdownextended\\api\\parserinterface::parse","markdownextended\\api\\templaterinterface::gettemplate","markdownextended\\api\\templaterinterface::__tostring","markdownextended\\commandline\\abstractconsole::__construct","markdownextended\\commandline\\abstractconsole::write","markdownextended\\commandline\\abstractconsole::info","markdownextended\\commandline\\abstractconsole::separator","markdownextended\\commandline\\abstractconsole::error","markdownextended\\commandline\\abstractconsole::caught","markdownextended\\commandline\\abstractconsole::exec","markdownextended\\commandline\\abstractconsole::runoption_verbose","markdownextended\\commandline\\abstractconsole::runoption_quiet","markdownextended\\commandline\\abstractconsole::runoption_debug","markdownextended\\commandline\\abstractconsole::runoption_usage","markdownextended\\commandline\\abstractconsole::setscriptpath","markdownextended\\commandline\\abstractconsole::run","markdownextended\\commandline\\abstractconsole::writeoutputfile","markdownextended\\commandline\\abstractconsole::writeoutput","markdownextended\\commandline\\abstractconsole::writeinputtitle","markdownextended\\commandline\\console::__construct","markdownextended\\commandline\\console::runoption_usage","markdownextended\\commandline\\console::runoption_help","markdownextended\\commandline\\console::runoption_version","markdownextended\\commandline\\console::runoption_man","markdownextended\\commandline\\console::runoption_multi","markdownextended\\commandline\\console::runoption_output","markdownextended\\commandline\\console::runoption_filter_html","markdownextended\\commandline\\console::runoption_filter_styles","markdownextended\\commandline\\console::runoption_extract","markdownextended\\commandline\\console::runoption_template","markdownextended\\commandline\\console::runoption_nofilter","markdownextended\\commandline\\console::runoption_format","markdownextended\\commandline\\console::runoption_body","markdownextended\\commandline\\console::runoption_simple","markdownextended\\commandline\\console::run","markdownextended\\commandline\\console::runstoryononefile","markdownextended\\commandline\\console::runonefile","markdownextended\\commandline\\console::getinput","markdownextended\\commandline\\console::parsecontent","markdownextended\\commandline\\console::extractcontent","markdownextended\\commandline\\reminders::__construct","markdownextended\\commandline\\reminders::runoption_help","markdownextended\\commandline\\reminders::runoption_docsdir","markdownextended\\commandline\\reminders::runoption_output","markdownextended\\commandline\\reminders::runoption_format","markdownextended\\commandline\\reminders::runoption_template","markdownextended\\commandline\\reminders::run","markdownextended\\commandline\\reminders::writeoutputfile","markdownextended\\commandline\\reminders::writeoutput","markdownextended\\commandline\\reminders::writeinputtitle","markdownextended\\commandline\\reminders::filterspan","markdownextended\\commandline\\reminders::filterblock","markdownextended\\commandline\\reminders::filtermisc","markdownextended\\config::__construct","markdownextended\\config::reset","markdownextended\\config::init","markdownextended\\config::load","markdownextended\\config::reload","markdownextended\\config::overload","markdownextended\\config::setconfigfile","markdownextended\\config::getconfigfile","markdownextended\\content::__construct","markdownextended\\content::__call","markdownextended\\content::setid","markdownextended\\content::getid","markdownextended\\content::getdirname","markdownextended\\content::setlastupdate","markdownextended\\content::getlastupdate","markdownextended\\content::getlastupdatetostring","markdownextended\\content::getsource","markdownextended\\content::gettitle","markdownextended\\content::getmetadata","markdownextended\\content::hasdomid","markdownextended\\content::getdomid","markdownextended\\content::setnewdomid","markdownextended\\contentcollection::__construct","markdownextended\\contentcollection::exists","markdownextended\\contentcollection::clear","markdownextended\\contentcollection::set","markdownextended\\contentcollection::add","markdownextended\\contentcollection::remove","markdownextended\\contentcollection::get","markdownextended\\contentcollection::current","markdownextended\\contentcollection::key","markdownextended\\contentcollection::next","markdownextended\\contentcollection::rewind","markdownextended\\contentcollection::valid","markdownextended\\contentcollection::first","markdownextended\\contentcollection::last","markdownextended\\contentcollection::offsetexists","markdownextended\\contentcollection::offsetget","markdownextended\\contentcollection::offsetset","markdownextended\\contentcollection::offsetunset","markdownextended\\contentcollection::count","markdownextended\\contentcollection::getarrayfilter","markdownextended\\grammar\\abstractgamut::rungamut","markdownextended\\grammar\\abstractgamut::resethash","markdownextended\\grammar\\abstractgamut::sethash","markdownextended\\grammar\\abstractgamut::gethash","markdownextended\\grammar\\filter::getdefaultmethod","markdownextended\\grammar\\filter::transform","markdownextended\\grammar\\filter::hashpart","markdownextended\\grammar\\filter::hashblock","markdownextended\\grammar\\filter::hashclean","markdownextended\\grammar\\filter::unhash","markdownextended\\grammar\\filter\\abbreviation::_setup","markdownextended\\grammar\\filter\\abbreviation::_teardown","markdownextended\\grammar\\filter\\abbreviation::transform","markdownextended\\grammar\\filter\\abbreviation::strip","markdownextended\\grammar\\filter\\anchor::_setup","markdownextended\\grammar\\filter\\anchor::transform","markdownextended\\grammar\\filter\\autolink::transform","markdownextended\\grammar\\filter\\blockinclusion::transform","markdownextended\\grammar\\filter\\blockquote::transform","markdownextended\\grammar\\filter\\codeblock::transform","markdownextended\\grammar\\filter\\codeblock::span","markdownextended\\grammar\\filter\\definitionlist::transform","markdownextended\\grammar\\filter\\definitionlist::transformitems","markdownextended\\grammar\\filter\\emphasis::prepare","markdownextended\\grammar\\filter\\emphasis::transform","markdownextended\\grammar\\filter\\fencedcodeblock::transform","markdownextended\\grammar\\filter\\html::transform","markdownextended\\grammar\\filter\\hardbreak::transform","markdownextended\\grammar\\filter\\header::transform","markdownextended\\grammar\\filter\\horizontalrule::transform","markdownextended\\grammar\\filter\\image::transform","markdownextended\\grammar\\filter\\linkdefinition::transform","markdownextended\\grammar\\filter\\linkdefinition::strip","markdownextended\\grammar\\filter\\listitem::transform","markdownextended\\grammar\\filter\\listitem::transformitems","markdownextended\\grammar\\filter\\maths::transform","markdownextended\\grammar\\filter\\maths::span","markdownextended\\grammar\\filter\\metadata::_setup","markdownextended\\grammar\\filter\\metadata::strip","markdownextended\\grammar\\filter\\metadata::transform","markdownextended\\grammar\\filter\\metadata::append","markdownextended\\grammar\\filter\\note::_setup","markdownextended\\grammar\\filter\\note::strip","markdownextended\\grammar\\filter\\note::transform","markdownextended\\grammar\\filter\\note::append","markdownextended\\grammar\\filter\\note::transformfootnote","markdownextended\\grammar\\filter\\note::transformglossary","markdownextended\\grammar\\filter\\note::transformcitation","markdownextended\\grammar\\filter\\span::transform","markdownextended\\grammar\\filter\\span::handlespantoken","markdownextended\\grammar\\filter\\table::transform","markdownextended\\grammar\\filter\\tableofcontents::_setup","markdownextended\\grammar\\filter\\tableofcontents::transform","markdownextended\\grammar\\gamut::__construct","markdownextended\\grammar\\gamut::rungamuts","markdownextended\\grammar\\gamut::rungamutsmethod","markdownextended\\grammar\\gamut::rungamut","markdownextended\\grammar\\tool::getdefaultmethod","markdownextended\\grammar\\tool::run","markdownextended\\grammar\\tool\\appendendingnewlines::run","markdownextended\\grammar\\tool\\detab::init","markdownextended\\grammar\\tool\\detab::run","markdownextended\\grammar\\tool\\encodeampandangle::run","markdownextended\\grammar\\tool\\encodeattribute::run","markdownextended\\grammar\\tool\\extractattributes::run","markdownextended\\grammar\\tool\\outdent::run","markdownextended\\grammar\\tool\\rebuildparagraph::run","markdownextended\\grammar\\tool\\removeutf8marker::run","markdownextended\\grammar\\tool\\standardizelineending::run","markdownextended\\grammar\\tool\\stripspacedlines::run","markdownextended\\helper::debug","markdownextended\\helper::info","markdownextended\\helper::smallinfo","markdownextended\\helper::escapecodecontent","markdownextended\\helper::fillplaceholders","markdownextended\\helper::header2label","markdownextended\\helper::encodeemailaddress","markdownextended\\helper::getfilesize","markdownextended\\helper::buildregex","markdownextended\\helper::find","markdownextended\\helper::tocamelcase","markdownextended\\helper::fromcamelcase","markdownextended\\markdownextended::__construct","markdownextended\\markdownextended::getinstance","markdownextended\\markdownextended::create","markdownextended\\markdownextended::transformstring","markdownextended\\markdownextended::transformsource","markdownextended\\markdownextended::addprocessedcontent","markdownextended\\markdownextended::getcontent","markdownextended\\markdownextended::getfullcontent","markdownextended\\markdownextended::gettemplater","markdownextended\\markdownextended::load","markdownextended\\markdownextended::factory","markdownextended\\markdownextended::get","markdownextended\\markdownextended::getconfig","markdownextended\\markdownextended::setconfig","markdownextended\\markdownextended::addconfig","markdownextended\\markdownextended::getvar","markdownextended\\markdownextended::setvar","markdownextended\\markdownextended::addvar","markdownextended\\markdownextended::unsetvar","markdownextended\\outputformatbag::load","markdownextended\\outputformatbag::loadhelper","markdownextended\\outputformatbag::__call","markdownextended\\outputformatbag::setformater","markdownextended\\outputformatbag::getformater","markdownextended\\outputformatbag::sethelper","markdownextended\\outputformatbag::gethelper","markdownextended\\outputformat\\abstractoutputformat::buildtag","markdownextended\\outputformat\\abstractoutputformat::gettagstring","markdownextended\\outputformat\\defaulthelper::getfullcontent","markdownextended\\outputformat\\defaulthelper::gettoc","markdownextended\\outputformat\\html::__construct","markdownextended\\outputformat\\html::gettagstring","markdownextended\\outputformat\\html::buildtitle","markdownextended\\outputformat\\html::buildmetadata","markdownextended\\outputformat\\html::buildcomment","markdownextended\\outputformat\\html::buildparagraph","markdownextended\\outputformat\\html::buildlink","markdownextended\\outputformat\\htmlhelper::getfullcontent","markdownextended\\outputformat\\htmlhelper::gettoc","markdownextended\\outputformat\\man::__construct","markdownextended\\outputformat\\man::buildtag","markdownextended\\outputformat\\man::gettagstring","markdownextended\\outputformat\\man::escapestring","markdownextended\\outputformat\\man::trimstring","markdownextended\\outputformat\\man::buildtitle","markdownextended\\outputformat\\man::indent","markdownextended\\outputformat\\man::unindent","markdownextended\\outputformat\\man::buildmetadata","markdownextended\\outputformat\\man::buildmetatitle","markdownextended\\outputformat\\man::buildparagraph","markdownextended\\outputformat\\man::buildbold","markdownextended\\outputformat\\man::builditalic","markdownextended\\outputformat\\man::buildpreformated","markdownextended\\outputformat\\man::buildcode","markdownextended\\outputformat\\man::buildabbreviation","markdownextended\\outputformat\\man::builddefinitionlist","markdownextended\\outputformat\\man::builddefinitionlistitemterm","markdownextended\\outputformat\\man::builddefinitionlistitemdefinition","markdownextended\\outputformat\\man::buildnewline","markdownextended\\outputformat\\man::buildhorizontalrule","markdownextended\\outputformat\\man::buildcomment","markdownextended\\outputformat\\man::buildlistitem","markdownextended\\outputformat\\man::buildunorderedlistitem","markdownextended\\outputformat\\man::buildorderedlistitem","markdownextended\\outputformat\\man::buildlist","markdownextended\\outputformat\\man::buildunorderedlist","markdownextended\\outputformat\\man::buildorderedlist","markdownextended\\outputformat\\man::buildlink","markdownextended\\outputformat\\man::buildblockquote","markdownextended\\outputformat\\man::buildtablecaption","markdownextended\\outputformat\\man::buildtablebody","markdownextended\\outputformat\\man::buildtableheader","markdownextended\\outputformat\\man::buildtablefooter","markdownextended\\outputformat\\man::buildtableline","markdownextended\\outputformat\\man::buildtablecell","markdownextended\\outputformat\\man::buildtablecellhead","markdownextended\\outputformat\\manhelper::getfullcontent","markdownextended\\outputformat\\manhelper::gettoc","markdownextended\\parser::__construct","markdownextended\\parser::parse","markdownextended\\parser::rungamuts","markdownextended\\parser::getallgamuts","markdownextended\\registry::__construct","markdownextended\\registry::set","markdownextended\\registry::add","markdownextended\\registry::remove","markdownextended\\registry::get","markdownextended\\registry::extend","markdownextended\\registry::validatevarname","markdownextended\\templater::__construct","markdownextended\\templater::__tostring","markdownextended\\templater::load","markdownextended\\templater::loadcollection","markdownextended\\templater::getcontent","markdownextended\\templater::gettemplate","markdownextended\\templater::buildtemplate","markdownextended\\templater::parse","markdownextended\\templater::parsecollection","markdownextended\\templater::parsecontent","markdownextended\\templater::parsetemplate","markdownextended\\templater::autoinsert","markdownextended\\util\\compiler::getdefaultfinder","markdownextended\\util\\compiler::compile","markdownextended\\util\\menuitemiterator::__construct","markdownextended\\util\\menuitemiterator::init","markdownextended\\util\\menuitemiterator::getdefault","markdownextended\\util\\menuitemiterator::setlevel","markdownextended\\util\\menuitemiterator::getlevel","markdownextended\\util\\menuitemiterator::setcontent","markdownextended\\util\\menuitemiterator::getcontent","markdownextended\\util\\menuitemiterator::setattributes","markdownextended\\util\\menuitemiterator::addattribute","markdownextended\\util\\menuitemiterator::hasattributes","markdownextended\\util\\menuitemiterator::getattributes","markdownextended\\util\\menuitemiterator::setchildren","markdownextended\\util\\menuitemiterator::addchild","markdownextended\\util\\menuitemiterator::haschildren","markdownextended\\util\\menuitemiterator::haschild","markdownextended\\util\\menuitemiterator::getchildren","markdownextended\\util\\menuitemiterator::getchild","markdownextended\\util\\menuitemiterator::offsetset","markdownextended\\util\\menuitemiterator::offsetunset","markdownextended\\util\\menuitemiterator::offsetget","markdownextended\\util\\menuitemiterator::offsetexists","markdownextended\\util\\menuitemiterator::append","markdownextended\\util\\recursivemenuiterator::__construct","markdownextended\\util\\recursivemenuiterator::next","markdownextended\\util\\recursivemenuiterator::previous","markdownextended\\util\\recursivemenuiterator::rewind","markdownextended\\util\\recursivemenuiterator::seek","markdownextended\\util\\recursivemenuiterator::position","markdownextended\\util\\recursivemenuiterator::append","markdownextended\\util\\recursivemenuiterator::getarraycopy","markdownextended\\util\\recursivemenuiterator::menukeyset","markdownextended\\util\\recursivemenuiterator::menuoffsetset","markdownextended\\util\\recursivemenuiterator::menuoffsetsetrecursive","markdown\\markdownparser::render","markdown\\markdownparser::transform","markdown\\markdownparser::transformmarkdown","markdown\\markdownparser::defaulttransform","markdown\\markdownparser::text","markdown\\markdownparser::line","markdown\\markdownparsercompatibilityinterface::render","markdown\\markdownparsercompatibilityinterface::transform","markdown\\markdownparsercompatibilityinterface::transformmarkdown","markdown\\markdownparsercompatibilityinterface::defaulttransform","markdown\\markdownparsercompatibilityinterface::text","markdown\\markdownparsercompatibilityinterface::line"],
        'info': [["MarkdownExtended","","MarkdownExtended.html","","",3],["MarkdownExtended\\API","","MarkdownExtended\/API.html","","",3],["MarkdownExtended\\CommandLine","","MarkdownExtended\/CommandLine.html","","",3],["MarkdownExtended\\Exception","","MarkdownExtended\/Exception.html","","",3],["MarkdownExtended\\Grammar","","MarkdownExtended\/Grammar.html","","",3],["MarkdownExtended\\Grammar\\Filter","","MarkdownExtended\/Grammar\/Filter.html","","",3],["MarkdownExtended\\Grammar\\Tool","","MarkdownExtended\/Grammar\/Tool.html","","",3],["MarkdownExtended\\OutputFormat","","MarkdownExtended\/OutputFormat.html","","",3],["MarkdownExtended\\Util","","MarkdownExtended\/Util.html","","",3],["markdown","","markdown.html","","",3],["API","MarkdownExtended","MarkdownExtended\/API.html","","The API defines all required interfaces",1],["CollectionInterface","MarkdownExtended\\API","MarkdownExtended\/API\/CollectionInterface.html","","Interface CollectionInterface",1],["ContentInterface","MarkdownExtended\\API","MarkdownExtended\/API\/ContentInterface.html","","Interface to implement for `MarkdownExtended\\Content`",1],["GamutInterface","MarkdownExtended\\API","MarkdownExtended\/API\/GamutInterface.html","","Interface GamutInterface",1],["KernelInterface","MarkdownExtended\\API","MarkdownExtended\/API\/KernelInterface.html","","Interface that defines a \"kernel\" principle",1],["OutputFormatHelperInterface","MarkdownExtended\\API","MarkdownExtended\/API\/OutputFormatHelperInterface.html","","PHP Markdown Extended OutputFormat helper interface",1],["OutputFormatInterface","MarkdownExtended\\API","MarkdownExtended\/API\/OutputFormatInterface.html","","PHP Markdown Extended OutputFormat interface",1],["ParserInterface","MarkdownExtended\\API","MarkdownExtended\/API\/ParserInterface.html","","Interface for a content parser",1],["TemplaterInterface","MarkdownExtended\\API","MarkdownExtended\/API\/TemplaterInterface.html","","Interface TemplaterInterface",1],["AbstractConsole","MarkdownExtended\\CommandLine","MarkdownExtended\/CommandLine\/AbstractConsole.html","","Command line controller\/interface base",1],["Console","MarkdownExtended\\CommandLine","MarkdownExtended\/CommandLine\/Console.html"," < AbstractConsole","Command line controller\/interface for MarkdownExtended",1],["Reminders","MarkdownExtended\\CommandLine","MarkdownExtended\/CommandLine\/Reminders.html"," < AbstractConsole","Command line controller to rebuild the MarkdownExtended",1],["Config","MarkdownExtended","MarkdownExtended\/Config.html"," < Registry","Global configuration registry",1],["Content","MarkdownExtended","MarkdownExtended\/Content.html","","Class defining a content object for the Parser",1],["ContentCollection","MarkdownExtended","MarkdownExtended\/ContentCollection.html","","Class defining a collection of content objects",1],["DomainException","MarkdownExtended\\Exception","MarkdownExtended\/Exception\/DomainException.html"," < DomainException","Class DomainException",1],["Exception","MarkdownExtended\\Exception","MarkdownExtended\/Exception\/Exception.html"," < Exception","Class Exception",1],["InvalidArgumentException","MarkdownExtended\\Exception","MarkdownExtended\/Exception\/InvalidArgumentException.html"," < InvalidArgumentException","Class InvalidArgumentException",1],["RuntimeException","MarkdownExtended\\Exception","MarkdownExtended\/Exception\/RuntimeException.html"," < RuntimeException","Class RuntimeException",1],["UnexpectedValueException","MarkdownExtended\\Exception","MarkdownExtended\/Exception\/UnexpectedValueException.html"," < UnexpectedValueException","Class UnexpectedValueException",1],["AbstractGamut","MarkdownExtended\\Grammar","MarkdownExtended\/Grammar\/AbstractGamut.html","","The base class for all Filters and Tools",1],["Filter","MarkdownExtended\\Grammar","MarkdownExtended\/Grammar\/Filter.html"," < AbstractGamut","Base class for all Filters",1],["Abbreviation","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Abbreviation.html"," < Filter","Process Markdown abbreviations",1],["Anchor","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Anchor.html"," < Filter","Process Markdown links",1],["AutoLink","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/AutoLink.html"," < Filter","Process Markdown automatic links",1],["BlockInclusion","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/BlockInclusion.html"," < Filter","Process the inclusion of third-party Markdown files",1],["BlockQuote","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/BlockQuote.html"," < Filter","Process Markdown blockquotes",1],["CodeBlock","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/CodeBlock.html"," < Filter","Process Markdown code blocks",1],["DefinitionList","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/DefinitionList.html"," < Filter","Process Markdown definitions lists",1],["Emphasis","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Emphasis.html"," < Filter","Process Markdown emphasis: bold & italic",1],["FencedCodeBlock","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/FencedCodeBlock.html"," < Filter","Process Markdown fenced code blocks",1],["HTML","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/HTML.html"," < Filter","Process Markdown in-text HTML",1],["HardBreak","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/HardBreak.html"," < Filter","Process Markdown hard breaks",1],["Header","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Header.html"," < Filter","Process Markdown headers",1],["HorizontalRule","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/HorizontalRule.html"," < Filter","Process Markdown horizontal rules",1],["Image","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Image.html"," < Filter","Process Markdown images",1],["LinkDefinition","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/LinkDefinition.html"," < Filter","Process Markdown definitions links",1],["ListItem","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/ListItem.html"," < Filter","Process Markdown list items",1],["Maths","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Maths.html"," < Filter","Process Markdown mathematics",1],["MetaData","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/MetaData.html"," < Filter","Process Markdown meta data",1],["Note","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Note.html"," < Filter","Process Markdown notes: footnotes, glossary and bibliography",1],["Span","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Span.html"," < Filter","Process Markdown spans",1],["Table","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/Table.html"," < Filter","Process Markdown tables",1],["TableOfContents","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter\/TableOfContents.html"," < Filter","Construct the global Table of Contents (hierarchical",1],["Gamut","MarkdownExtended\\Grammar","MarkdownExtended\/Grammar\/Gamut.html","","Central class to execute Filters and Tools methods",1],["Tool","MarkdownExtended\\Grammar","MarkdownExtended\/Grammar\/Tool.html"," < AbstractGamut","Abstract base class for Tools",1],["AppendEndingNewLines","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/AppendEndingNewLines.html"," < Tool","Class AppendEndingNewLines",1],["Detab","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/Detab.html"," < Tool","Class Detab",1],["EncodeAmpAndAngle","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/EncodeAmpAndAngle.html"," < Tool","Class EncodeAmpAndAngle",1],["EncodeAttribute","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/EncodeAttribute.html"," < Tool","Class EncodeAttribute",1],["ExtractAttributes","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/ExtractAttributes.html"," < Tool","Class ExtractAttributes",1],["Outdent","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/Outdent.html"," < Tool","Class Outdent",1],["RebuildParagraph","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/RebuildParagraph.html"," < Tool","Class RebuildParagraph",1],["RemoveUtf8Marker","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/RemoveUtf8Marker.html"," < Tool","Class RemoveUtf8Marker",1],["StandardizeLineEnding","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/StandardizeLineEnding.html"," < Tool","Class StandardizeLineEnding",1],["StripSpacedLines","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool\/StripSpacedLines.html"," < Tool","Class StripSpacedLines",1],["Helper","MarkdownExtended","MarkdownExtended\/Helper.html","","Global Markdown Extended Helper",1],["MarkdownExtended","MarkdownExtended","MarkdownExtended\/MarkdownExtended.html","","PHP Markdown Extended Mother Class",1],["OutputFormatBag","MarkdownExtended","MarkdownExtended\/OutputFormatBag.html","","PHP Markdown Extended OutputFormat container",1],["AbstractOutputFormat","MarkdownExtended\\OutputFormat","MarkdownExtended\/OutputFormat\/AbstractOutputFormat.html","","Class AbstractOutputFormat",1],["DefaultHelper","MarkdownExtended\\OutputFormat","MarkdownExtended\/OutputFormat\/DefaultHelper.html","","Default Markdown Extended output Helper",1],["HTML","MarkdownExtended\\OutputFormat","MarkdownExtended\/OutputFormat\/HTML.html"," < AbstractOutputFormat","Format a content in full HTML",1],["HTMLHelper","MarkdownExtended\\OutputFormat","MarkdownExtended\/OutputFormat\/HTMLHelper.html","","HTML output Helper",1],["Man","MarkdownExtended\\OutputFormat","MarkdownExtended\/OutputFormat\/Man.html"," < AbstractOutputFormat","Format a content in UNIX Manpage format",1],["ManHelper","MarkdownExtended\\OutputFormat","MarkdownExtended\/OutputFormat\/ManHelper.html"," < DefaultHelper","Manpages Markdown Extended output Helper",1],["Parser","MarkdownExtended","MarkdownExtended\/Parser.html","","PHP Markdown Extended Parser Class",1],["Registry","MarkdownExtended","MarkdownExtended\/Registry.html","","Class Registry",1],["Templater","MarkdownExtended","MarkdownExtended\/Templater.html","","Class Templater",1],["Compiler","MarkdownExtended\\Util","MarkdownExtended\/Util\/Compiler.html","","The Compiler class compiles the whole markdown into",1],["MenuItemIterator","MarkdownExtended\\Util","MarkdownExtended\/Util\/MenuItemIterator.html"," < ArrayIterator","This class defines each `RecursiveMenuIterator` item",1],["RecursiveMenuIterator","MarkdownExtended\\Util","MarkdownExtended\/Util\/RecursiveMenuIterator.html"," < RecursiveArrayIterator","Class RecursiveMenuIterator",1],["MarkdownExtendedParser","markdown","markdown\/MarkdownExtendedParser.html"," < MarkdownParser","Class MarkdownExtendedParser",1],["MarkdownExtraParser","markdown","markdown\/MarkdownExtraParser.html"," < MarkdownParser","Class MarkdownExtraParser",1],["MarkdownParser","markdown","markdown\/MarkdownParser.html","","Class MarkdownParser",1],["MarkdownParserCompatibilityInterface","markdown","markdown\/MarkdownParserCompatibilityInterface.html","","Interface MarkdownParserCompatibilityInterface",1],["MultiMarkdownParser","markdown","markdown\/MultiMarkdownParser.html"," < MarkdownParser","Class MultiMarkdownParser",1],["API::factory","MarkdownExtended\\API","MarkdownExtended\/API.html#method_factory","(string $name, <abbr title=\"MarkdownExtended\\null\/array\">null\/array<\/abbr> $params = null, <abbr title=\"MarkdownExtended\\null\/string\">null\/string<\/abbr> $type = null)","Build an API object validating it if needed",2],["API::isValid","MarkdownExtended\\API","MarkdownExtended\/API.html#method_isValid","(<abbr title=\"MarkdownExtended\\string\/object\">string\/object<\/abbr> $object, string $type = null, bool $bool = false)","Validate an API object checking its implemented interfaces",2],["API::getRelativeClassname","MarkdownExtended\\API","MarkdownExtended\/API.html#method_getRelativeClassname","(string $class_name)","Get a class name without the current namespace if present",2],["API::getAbsoluteClassname","MarkdownExtended\\API","MarkdownExtended\/API.html#method_getAbsoluteClassname","(string $class_name)","Get a class name with the current namespace",2],["API::debug","MarkdownExtended\\API","MarkdownExtended\/API.html#method_debug","()","Debug infos on screen during parsing",2],["ContentInterface::getSource","MarkdownExtended\\API\\ContentInterface","MarkdownExtended\/API\/ContentInterface.html#method_getSource","()","",2],["GamutInterface::getDefaultMethod","MarkdownExtended\\API\\GamutInterface","MarkdownExtended\/API\/GamutInterface.html#method_getDefaultMethod","()","Must return a method name",2],["KernelInterface::__construct","MarkdownExtended\\API\\KernelInterface","MarkdownExtended\/API\/KernelInterface.html#method___construct","(array $options = null)","Initialize the registry and flush the contents stack",2],["KernelInterface::getInstance","MarkdownExtended\\API\\KernelInterface","MarkdownExtended\/API\/KernelInterface.html#method_getInstance","(int $instance_id = null, array $options = null)","Get the instance, which will be created if required",2],["KernelInterface::create","MarkdownExtended\\API\\KernelInterface","MarkdownExtended\/API\/KernelInterface.html#method_create","(array $options = null, $instance_id = null)","Create a new singleton instance",2],["KernelInterface::factory","MarkdownExtended\\API\\KernelInterface","MarkdownExtended\/API\/KernelInterface.html#method_factory","(string $class_name, array $params = null)","Build, retain and return a dependency instance",2],["KernelInterface::get","MarkdownExtended\\API\\KernelInterface","MarkdownExtended\/API\/KernelInterface.html#method_get","(string $class_name, array $params = null, mixed $flag = \\MarkdownExtended\\API::FAIL_GRACEFULLY)","Get a service from the container ; load it if absent",2],["KernelInterface::transformString","MarkdownExtended\\API\\KernelInterface","MarkdownExtended\/API\/KernelInterface.html#method_transformString","(string $source, string|array $parser_options = null, string|null $key = null, bool $secondary = false)","Transform a source string",2],["KernelInterface::transformSource","MarkdownExtended\\API\\KernelInterface","MarkdownExtended\/API\/KernelInterface.html#method_transformSource","(string $filename, string|array $parser_options = null, string|null $key = null, bool $secondary = false)","Transform a source file content",2],["OutputFormatHelperInterface::getFullContent","MarkdownExtended\\API\\OutputFormatHelperInterface","MarkdownExtended\/API\/OutputFormatHelperInterface.html#method_getFullContent","(<abbr title=\"MarkdownExtended\\API\\MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr> $content, <abbr title=\"MarkdownExtended\\API\\MarkdownExtended\\API\\OutputFormatInterface\">OutputFormatInterface<\/abbr> $formater)","This must return a full formated string ready to write",2],["OutputFormatHelperInterface::getToc","MarkdownExtended\\API\\OutputFormatHelperInterface","MarkdownExtended\/API\/OutputFormatHelperInterface.html#method_getToc","(<abbr title=\"MarkdownExtended\\API\\MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr> $content, <abbr title=\"MarkdownExtended\\API\\MarkdownExtended\\API\\OutputFormatInterface\">OutputFormatInterface<\/abbr> $formater)","This must return a full formated table of contents",2],["OutputFormatInterface::buildTag","MarkdownExtended\\API\\OutputFormatInterface","MarkdownExtended\/API\/OutputFormatInterface.html#method_buildTag","(string $tag_name, string $content = null, array $attributes = array())","",2],["OutputFormatInterface::getTagString","MarkdownExtended\\API\\OutputFormatInterface","MarkdownExtended\/API\/OutputFormatInterface.html#method_getTagString","(string $content, string $tag_name, array $attributes = array())","",2],["ParserInterface::__construct","MarkdownExtended\\API\\ParserInterface","MarkdownExtended\/API\/ParserInterface.html#method___construct","(<abbr title=\"MarkdownExtended\\API\\array\/string\">array\/string<\/abbr> $config = null)","Constructor function: Initialize the parser object",2],["ParserInterface::parse","MarkdownExtended\\API\\ParserInterface","MarkdownExtended\/API\/ParserInterface.html#method_parse","(<abbr title=\"MarkdownExtended\\API\\MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr> $content, bool $secondary = false)","Main function.",2],["TemplaterInterface::getTemplate","MarkdownExtended\\API\\TemplaterInterface","MarkdownExtended\/API\/TemplaterInterface.html#method_getTemplate","()","",2],["TemplaterInterface::__toString","MarkdownExtended\\API\\TemplaterInterface","MarkdownExtended\/API\/TemplaterInterface.html#method___toString","()","",2],["AbstractConsole::__construct","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method___construct","()","Constructor",2],["AbstractConsole::write","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_write","(string $str, bool $new_line = true, string $stream = &#039;stdout&#039;)","Write an info to CLI output",2],["AbstractConsole::info","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_info","(string $str, bool $new_line = true, bool $leading_dot = true)","Write an info in verbose mode",2],["AbstractConsole::separator","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_separator","()","Write an separator line in verbose mode",2],["AbstractConsole::error","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_error","(string $str, int $code = 90, bool $forced = false)","Write an error info and exit",2],["AbstractConsole::caught","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_caught","(<abbr title=\"MarkdownExtended\\CommandLine\\Exception\">Exception<\/abbr> $e)","Write a caught exception",2],["AbstractConsole::exec","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_exec","(string $cmd, bool $fail_gracefully = false)","Exec a command",2],["AbstractConsole::runOption_verbose","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_runOption_verbose","()","Run the verbose option",2],["AbstractConsole::runOption_quiet","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_runOption_quiet","()","Run the quiet option",2],["AbstractConsole::runOption_debug","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_runOption_debug","()","Run the debug option",2],["AbstractConsole::runOption_usage","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_runOption_usage","($code)","Run the usage option",2],["AbstractConsole::setScriptPath","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_setScriptPath","(<abbr title=\"MarkdownExtended\\CommandLine\\$path\">$path<\/abbr> $path)","Set the current script full path",2],["AbstractConsole::run","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_run","()","Run the whole script depending on options set",2],["AbstractConsole::writeOutputFile","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_writeOutputFile","(string $output, string $output_file)","Write a result for each processed file or string in",2],["AbstractConsole::writeOutput","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_writeOutput","(string $output)","Write a result for each processed file or string",2],["AbstractConsole::writeInputTitle","MarkdownExtended\\CommandLine\\AbstractConsole","MarkdownExtended\/CommandLine\/AbstractConsole.html#method_writeInputTitle","(string $title)","Write a title for each processed file or string",2],["Console::__construct","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method___construct","()","Constructor",2],["Console::runOption_usage","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_usage","($code)","Run the usage option",2],["Console::runOption_help","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_help","()","Get the help string",2],["Console::runOption_version","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_version","()","Run the version option",2],["Console::runOption_man","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_man","()","Run the manual option",2],["Console::runOption_multi","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_multi","()","Run the multi option",2],["Console::runOption_output","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_output","(string $file)","Run the output option",2],["Console::runOption_filter_html","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_filter_html","()","Run the HTML filter option",2],["Console::runOption_filter_styles","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_filter_styles","()","Run the styles filter option",2],["Console::runOption_extract","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_extract","(string $type)","Run the extract option",2],["Console::runOption_template","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_template","(string $file)","Run the template option",2],["Console::runOption_nofilter","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_nofilter","(string $str)","Run the no-filter option",2],["Console::runOption_format","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_format","(string $str)","Run the format option",2],["Console::runOption_body","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_body","()","Run the 'body' alias",2],["Console::runOption_simple","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOption_simple","()","Run the 'simple' alias",2],["Console::run","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_run","()","Run the whole script depending on options set",2],["Console::runStoryOnOneFile","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runStoryOnOneFile","(string $input, bool $title = false)","Run the MDE process on one file or input",2],["Console::runOneFile","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_runOneFile","(string $input, string $output = null, bool $extract = null, bool $title = false)","Actually run the MDE process on a file or string",2],["Console::getInput","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_getInput","(string $input, bool $title = false)","Creates a `\\MarkdownExtended\\API\\ContentInterface`",2],["Console::parseContent","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_parseContent","(<abbr title=\"MarkdownExtended\\CommandLine\\MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr> $md_content)","Process a Content parsing",2],["Console::extractContent","MarkdownExtended\\CommandLine\\Console","MarkdownExtended\/CommandLine\/Console.html#method_extractContent","(<abbr title=\"MarkdownExtended\\CommandLine\\MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr> $md_content, string $extract)","Process a Content parsing just for special gamuts",2],["Reminders::__construct","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method___construct","()","Constructor",2],["Reminders::runOption_help","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_runOption_help","()","Get the help string",2],["Reminders::runOption_docsdir","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_runOption_docsdir","($path)","Run the multi docsdir",2],["Reminders::runOption_output","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_runOption_output","(string $file)","Run the output option",2],["Reminders::runOption_format","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_runOption_format","(string $str)","Run the format option",2],["Reminders::runOption_template","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_runOption_template","(string $file)","Run the template option",2],["Reminders::run","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_run","()","Run the whole script depending on options set",2],["Reminders::writeOutputFile","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_writeOutputFile","(string $output)","Write a result for each processed file or string in",2],["Reminders::writeOutput","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_writeOutput","(string $output, bool $exit = false)","Write a result for each processed file or string",2],["Reminders::writeInputTitle","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_writeInputTitle","(string $title)","Write a title for each processed file or string",2],["Reminders::filterSpan","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_filterSpan","($item)","",2],["Reminders::filterBlock","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_filterBlock","($item)","",2],["Reminders::filterMisc","MarkdownExtended\\CommandLine\\Reminders","MarkdownExtended\/CommandLine\/Reminders.html#method_filterMisc","($item)","",2],["Config::__construct","MarkdownExtended\\Config","MarkdownExtended\/Config.html#method___construct","()","Initialize the registry",2],["Config::reset","MarkdownExtended\\Config","MarkdownExtended\/Config.html#method_reset","()","Reset data on defaults",2],["Config::init","MarkdownExtended\\Config","MarkdownExtended\/Config.html#method_init","(<abbr title=\"MarkdownExtended\\null\/string\/array\">null\/string\/array<\/abbr> $user_config = null)","Init a new config with user options",2],["Config::load","MarkdownExtended\\Config","MarkdownExtended\/Config.html#method_load","(<abbr title=\"MarkdownExtended\\string\/array\">string\/array<\/abbr> $cfg_file, bool $silent = false)","Load and parse a INI configuration file",2],["Config::reload","MarkdownExtended\\Config","MarkdownExtended\/Config.html#method_reload","(<abbr title=\"MarkdownExtended\\string\/array\">string\/array<\/abbr> $cfg_file = null, bool $forced = false, bool $silent = false)","Over-load a configuration",2],["Config::overload","MarkdownExtended\\Config","MarkdownExtended\/Config.html#method_overload","(array $config)","Over-load a configuration",2],["Config::setConfigFile","MarkdownExtended\\Config","MarkdownExtended\/Config.html#method_setConfigFile","(string $cfg_file)","Define the object config file",2],["Config::getConfigFile","MarkdownExtended\\Config","MarkdownExtended\/Config.html#method_getConfigFile","()","Get the object config file",2],["Content::__construct","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method___construct","(string $source = null, string $filepath = null, mixed $id = null)","",2],["Content::__call","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method___call","($name, array $arguments = null)","Magic method to handle any `getXX()`, `setXX()` or",2],["Content::setId","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_setId","(mixed $id)","Define the content ID",2],["Content::getId","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getId","()","Get the content ID",2],["Content::getDirname","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getDirname","()","Get the file dirname if so",2],["Content::setLastUpdate","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_setLastUpdate","(mixed $date)","Define the last update datetime of this content",2],["Content::getLastUpdate","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getLastUpdate","()","Retrieve the content last update",2],["Content::getLastUpdateToString","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getLastUpdateToString","()","Get the last update of this content as string",2],["Content::getSource","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getSource","()","",2],["Content::getTitle","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getTitle","()","Get the content title",2],["Content::getMetadata","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getMetadata","(<abbr title=\"MarkdownExtended\\null\/string\">null\/string<\/abbr> $index = null)","Get the meta-data stack or one entry",2],["Content::hasDomId","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_hasDomId","(string $reference)","Verify if a reference is already defined in the DOM",2],["Content::getDomId","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_getDomId","(string $reference, <abbr title=\"MarkdownExtended\\null\/string\">null\/string<\/abbr> $id = null)","Get a DOM unique ID",2],["Content::setNewDomId","MarkdownExtended\\Content","MarkdownExtended\/Content.html#method_setNewDomId","(string $id, string $reference = null, bool $return_array = true)","Create and get a new DOM unique ID",2],["ContentCollection::__construct","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method___construct","(array $elements = array())","",2],["ContentCollection::exists","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_exists","()","",2],["ContentCollection::clear","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_clear","()","",2],["ContentCollection::set","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_set","(mixed $key, <a href=\"MarkdownExtended\/Content.html\"><abbr title=\"MarkdownExtended\\Content\">Content<\/abbr><\/a> $value)","Define a new item in the collection by key",2],["ContentCollection::add","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_add","(<a href=\"MarkdownExtended\/Content.html\"><abbr title=\"MarkdownExtended\\Content\">Content<\/abbr><\/a> $value)","Add a new item at the end of the collection",2],["ContentCollection::remove","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_remove","(mixed $key)","Delete an item of the collection by key",2],["ContentCollection::get","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_get","(mixed $key)","Get a collection item by key",2],["ContentCollection::current","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_current","()","Get the current collection item",2],["ContentCollection::key","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_key","()","Get the current collection item key",2],["ContentCollection::next","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_next","()","Get next collection item",2],["ContentCollection::rewind","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_rewind","()","Put the iterator on the first collection item",2],["ContentCollection::valid","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_valid","()","Test if current collection item exists",2],["ContentCollection::first","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_first","()","Rewind to first collection item",2],["ContentCollection::last","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_last","()","Go to last collection item",2],["ContentCollection::offsetExists","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_offsetExists","(mixed $offset)","Test if a collection item exists by key",2],["ContentCollection::offsetGet","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_offsetGet","(mixed $offset)","Get a collection item by key",2],["ContentCollection::offsetSet","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_offsetSet","(mixed $offset, mixed $value)","Set a collection item by key",2],["ContentCollection::offsetUnset","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_offsetUnset","(mixed $offset)","Unset a collection item by key",2],["ContentCollection::count","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_count","()","Count number of collection items",2],["ContentCollection::getArrayFilter","MarkdownExtended\\ContentCollection","MarkdownExtended\/ContentCollection.html#method_getArrayFilter","(callable $callback)","Run a callback of the collection items",2],["AbstractGamut::runGamut","MarkdownExtended\\Grammar\\AbstractGamut","MarkdownExtended\/Grammar\/AbstractGamut.html#method_runGamut","(string $gamut, string $text)","Run a gamut stack from a filter or tool",2],["AbstractGamut::resetHash","MarkdownExtended\\Grammar\\AbstractGamut","MarkdownExtended\/Grammar\/AbstractGamut.html#method_resetHash","()","Reset the hash table",2],["AbstractGamut::setHash","MarkdownExtended\\Grammar\\AbstractGamut","MarkdownExtended\/Grammar\/AbstractGamut.html#method_setHash","(string $key, string $text)","Reference a new hash",2],["AbstractGamut::getHash","MarkdownExtended\\Grammar\\AbstractGamut","MarkdownExtended\/Grammar\/AbstractGamut.html#method_getHash","(string $key)","Retrieve a hash by its key",2],["Filter::getDefaultMethod","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter.html#method_getDefaultMethod","()","Must return a method name",2],["Filter::transform","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter.html#method_transform","(string $text)","Must process the filter on a text",2],["Filter::hashPart","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter.html#method_hashPart","(string $text, string $boundary = &#039;X&#039;)","Called whenever a tag must be hashed when a function",2],["Filter::hashBlock","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter.html#method_hashBlock","(string $text)","Shortcut function for hashPart with block-level boundaries.",2],["Filter::hashClean","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter.html#method_hashClean","(string $text)","Called whenever a tag must be hashed when a function",2],["Filter::unhash","MarkdownExtended\\Grammar\\Filter","MarkdownExtended\/Grammar\/Filter.html#method_unhash","(string $text)","Swap back in all the tags hashed by _HashHTMLBlocks.",2],["Abbreviation::_setup","MarkdownExtended\\Grammar\\Filter\\Abbreviation","MarkdownExtended\/Grammar\/Filter\/Abbreviation.html#method__setup","()","Prepare masks for predefined abbreviations and descriptions",2],["Abbreviation::_teardown","MarkdownExtended\\Grammar\\Filter\\Abbreviation","MarkdownExtended\/Grammar\/Filter\/Abbreviation.html#method__teardown","()","Reset masks created by the `_setup()` method",2],["Abbreviation::transform","MarkdownExtended\\Grammar\\Filter\\Abbreviation","MarkdownExtended\/Grammar\/Filter\/Abbreviation.html#method_transform","(string $text)","Must process the filter on a text",2],["Abbreviation::strip","MarkdownExtended\\Grammar\\Filter\\Abbreviation","MarkdownExtended\/Grammar\/Filter\/Abbreviation.html#method_strip","(string $text)","Strips abbreviations from text, stores titles in hash",2],["Anchor::_setup","MarkdownExtended\\Grammar\\Filter\\Anchor","MarkdownExtended\/Grammar\/Filter\/Anchor.html#method__setup","()","Set up the `in_anchor` config flag on `false`",2],["Anchor::transform","MarkdownExtended\\Grammar\\Filter\\Anchor","MarkdownExtended\/Grammar\/Filter\/Anchor.html#method_transform","(string $text)","Must process the filter on a text",2],["AutoLink::transform","MarkdownExtended\\Grammar\\Filter\\AutoLink","MarkdownExtended\/Grammar\/Filter\/AutoLink.html#method_transform","(string $text)","Must process the filter on a text",2],["BlockInclusion::transform","MarkdownExtended\\Grammar\\Filter\\BlockInclusion","MarkdownExtended\/Grammar\/Filter\/BlockInclusion.html#method_transform","(string $text)","Must process the filter on a text",2],["BlockQuote::transform","MarkdownExtended\\Grammar\\Filter\\BlockQuote","MarkdownExtended\/Grammar\/Filter\/BlockQuote.html#method_transform","(string $text)","Must process the filter on a text",2],["CodeBlock::transform","MarkdownExtended\\Grammar\\Filter\\CodeBlock","MarkdownExtended\/Grammar\/Filter\/CodeBlock.html#method_transform","(string $text)","Must process the filter on a text",2],["CodeBlock::span","MarkdownExtended\\Grammar\\Filter\\CodeBlock","MarkdownExtended\/Grammar\/Filter\/CodeBlock.html#method_span","(string $code)","Create a code span markup for $code.",2],["DefinitionList::transform","MarkdownExtended\\Grammar\\Filter\\DefinitionList","MarkdownExtended\/Grammar\/Filter\/DefinitionList.html#method_transform","(string $text)","Must process the filter on a text",2],["DefinitionList::transformItems","MarkdownExtended\\Grammar\\Filter\\DefinitionList","MarkdownExtended\/Grammar\/Filter\/DefinitionList.html#method_transformItems","(string $list_str)","Process the contents of a single definition list, splitting",2],["Emphasis::prepare","MarkdownExtended\\Grammar\\Filter\\Emphasis","MarkdownExtended\/Grammar\/Filter\/Emphasis.html#method_prepare","()","Prepare regular expressions for searching emphasis",2],["Emphasis::transform","MarkdownExtended\\Grammar\\Filter\\Emphasis","MarkdownExtended\/Grammar\/Filter\/Emphasis.html#method_transform","(string $text)","Must process the filter on a text",2],["FencedCodeBlock::transform","MarkdownExtended\\Grammar\\Filter\\FencedCodeBlock","MarkdownExtended\/Grammar\/Filter\/FencedCodeBlock.html#method_transform","(string $text)","Must process the filter on a text",2],["HTML::transform","MarkdownExtended\\Grammar\\Filter\\HTML","MarkdownExtended\/Grammar\/Filter\/HTML.html#method_transform","(string $text)","Must process the filter on a text",2],["HardBreak::transform","MarkdownExtended\\Grammar\\Filter\\HardBreak","MarkdownExtended\/Grammar\/Filter\/HardBreak.html#method_transform","(string $text)","Must process the filter on a text",2],["Header::transform","MarkdownExtended\\Grammar\\Filter\\Header","MarkdownExtended\/Grammar\/Filter\/Header.html#method_transform","(string $text)","Must process the filter on a text",2],["HorizontalRule::transform","MarkdownExtended\\Grammar\\Filter\\HorizontalRule","MarkdownExtended\/Grammar\/Filter\/HorizontalRule.html#method_transform","(string $text)","Must process the filter on a text",2],["Image::transform","MarkdownExtended\\Grammar\\Filter\\Image","MarkdownExtended\/Grammar\/Filter\/Image.html#method_transform","(string $text)","Must process the filter on a text",2],["LinkDefinition::transform","MarkdownExtended\\Grammar\\Filter\\LinkDefinition","MarkdownExtended\/Grammar\/Filter\/LinkDefinition.html#method_transform","(string $text)","Must process the filter on a text",2],["LinkDefinition::strip","MarkdownExtended\\Grammar\\Filter\\LinkDefinition","MarkdownExtended\/Grammar\/Filter\/LinkDefinition.html#method_strip","(string $text)","Strips link definitions from text, stores the URLs",2],["ListItem::transform","MarkdownExtended\\Grammar\\Filter\\ListItem","MarkdownExtended\/Grammar\/Filter\/ListItem.html#method_transform","(string $text)","Must process the filter on a text",2],["ListItem::transformItems","MarkdownExtended\\Grammar\\Filter\\ListItem","MarkdownExtended\/Grammar\/Filter\/ListItem.html#method_transformItems","(string $list_str, string $marker_any_re)","Process the contents of a single ordered or unordered",2],["Maths::transform","MarkdownExtended\\Grammar\\Filter\\Maths","MarkdownExtended\/Grammar\/Filter\/Maths.html#method_transform","(string $text)","Must process the filter on a text",2],["Maths::span","MarkdownExtended\\Grammar\\Filter\\Maths","MarkdownExtended\/Grammar\/Filter\/Maths.html#method_span","(string $texblock)","Build each maths span",2],["MetaData::_setup","MarkdownExtended\\Grammar\\Filter\\MetaData","MarkdownExtended\/Grammar\/Filter\/MetaData.html#method__setup","()","Prepare object with configuration",2],["MetaData::strip","MarkdownExtended\\Grammar\\Filter\\MetaData","MarkdownExtended\/Grammar\/Filter\/MetaData.html#method_strip","(string $text)","",2],["MetaData::transform","MarkdownExtended\\Grammar\\Filter\\MetaData","MarkdownExtended\/Grammar\/Filter\/MetaData.html#method_transform","(string $line)","Must process the filter on a text",2],["MetaData::append","MarkdownExtended\\Grammar\\Filter\\MetaData","MarkdownExtended\/Grammar\/Filter\/MetaData.html#method_append","($text)","Build meta data strings",2],["Note::_setup","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method__setup","()","Prepare all required arrays",2],["Note::strip","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_strip","(string $text)","Strips link definitions from text, stores the URLs",2],["Note::transform","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_transform","(string $text)","Must process the filter on a text",2],["Note::append","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_append","(string $text)","Append footnote list to text.",2],["Note::transformFootnote","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_transformFootnote","(string $note_id)","Append footnote list to text.",2],["Note::transformGlossary","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_transformGlossary","(string $note_id)","Append glossary notes list to text.",2],["Note::transformCitation","MarkdownExtended\\Grammar\\Filter\\Note","MarkdownExtended\/Grammar\/Filter\/Note.html#method_transformCitation","(string $note_id)","Append bibliography notes list to text.",2],["Span::transform","MarkdownExtended\\Grammar\\Filter\\Span","MarkdownExtended\/Grammar\/Filter\/Span.html#method_transform","(string $str)","Must process the filter on a text",2],["Span::handleSpanToken","MarkdownExtended\\Grammar\\Filter\\Span","MarkdownExtended\/Grammar\/Filter\/Span.html#method_handleSpanToken","(string $token, string $str)","Handle $token provided by parseSpan by determining",2],["Table::transform","MarkdownExtended\\Grammar\\Filter\\Table","MarkdownExtended\/Grammar\/Filter\/Table.html#method_transform","(string $text)","Must process the filter on a text",2],["TableOfContents::_setup","MarkdownExtended\\Grammar\\Filter\\TableOfContents","MarkdownExtended\/Grammar\/Filter\/TableOfContents.html#method__setup","()","Reset all properties at the begining",2],["TableOfContents::transform","MarkdownExtended\\Grammar\\Filter\\TableOfContents","MarkdownExtended\/Grammar\/Filter\/TableOfContents.html#method_transform","(string $text)","Must process the filter on a text",2],["Gamut::__construct","MarkdownExtended\\Grammar\\Gamut","MarkdownExtended\/Grammar\/Gamut.html#method___construct","(array $gamut_aliases = null)","Set the gamuts aliases from config",2],["Gamut::runGamuts","MarkdownExtended\\Grammar\\Gamut","MarkdownExtended\/Grammar\/Gamut.html#method_runGamuts","(array $gamuts, string $text = null)","Run a table of gamuts by priority",2],["Gamut::runGamutsMethod","MarkdownExtended\\Grammar\\Gamut","MarkdownExtended\/Grammar\/Gamut.html#method_runGamutsMethod","(array $gamuts, string $method, string $text = null)","Run a table of gamuts for a specific method by priority",2],["Gamut::runGamut","MarkdownExtended\\Grammar\\Gamut","MarkdownExtended\/Grammar\/Gamut.html#method_runGamut","(string $gamut, string $text = null, string $_method = null, bool $silent = false)","Run a single gamut",2],["Tool::getDefaultMethod","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool.html#method_getDefaultMethod","()","Must return a method name",2],["Tool::run","MarkdownExtended\\Grammar\\Tool","MarkdownExtended\/Grammar\/Tool.html#method_run","(string $text)","Must process the tool on a text",2],["AppendEndingNewLines::run","MarkdownExtended\\Grammar\\Tool\\AppendEndingNewLines","MarkdownExtended\/Grammar\/Tool\/AppendEndingNewLines.html#method_run","(string $text)","Must process the tool on a text",2],["Detab::init","MarkdownExtended\\Grammar\\Tool\\Detab","MarkdownExtended\/Grammar\/Tool\/Detab.html#method_init","()","Check for the availability of the function in the `utf8_strlen`",2],["Detab::run","MarkdownExtended\\Grammar\\Tool\\Detab","MarkdownExtended\/Grammar\/Tool\/Detab.html#method_run","(string $text)","Must process the tool on a text",2],["EncodeAmpAndAngle::run","MarkdownExtended\\Grammar\\Tool\\EncodeAmpAndAngle","MarkdownExtended\/Grammar\/Tool\/EncodeAmpAndAngle.html#method_run","(string $text)","Must process the tool on a text",2],["EncodeAttribute::run","MarkdownExtended\\Grammar\\Tool\\EncodeAttribute","MarkdownExtended\/Grammar\/Tool\/EncodeAttribute.html#method_run","(string $text)","Must process the tool on a text",2],["ExtractAttributes::run","MarkdownExtended\\Grammar\\Tool\\ExtractAttributes","MarkdownExtended\/Grammar\/Tool\/ExtractAttributes.html#method_run","(string $attributes)","Must process the tool on a text",2],["Outdent::run","MarkdownExtended\\Grammar\\Tool\\Outdent","MarkdownExtended\/Grammar\/Tool\/Outdent.html#method_run","(string $text)","Must process the tool on a text",2],["RebuildParagraph::run","MarkdownExtended\\Grammar\\Tool\\RebuildParagraph","MarkdownExtended\/Grammar\/Tool\/RebuildParagraph.html#method_run","(string $text)","Must process the tool on a text",2],["RemoveUtf8Marker::run","MarkdownExtended\\Grammar\\Tool\\RemoveUtf8Marker","MarkdownExtended\/Grammar\/Tool\/RemoveUtf8Marker.html#method_run","(string $text)","Must process the tool on a text",2],["StandardizeLineEnding::run","MarkdownExtended\\Grammar\\Tool\\StandardizeLineEnding","MarkdownExtended\/Grammar\/Tool\/StandardizeLineEnding.html#method_run","(string $text)","Must process the tool on a text",2],["StripSpacedLines::run","MarkdownExtended\\Grammar\\Tool\\StripSpacedLines","MarkdownExtended\/Grammar\/Tool\/StripSpacedLines.html#method_run","(string $text)","Must process the tool on a text",2],["Helper::debug","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_debug","(mixed $a = &#039;&#039;, mixed $what = null, bool $exit = true)","Debug function",2],["Helper::info","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_info","(bool $html = false)","Get information string about the current Markdown Extended",2],["Helper::smallInfo","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_smallInfo","(bool $html = false, bool $version_only = false)","Get information string about the current Markdown Extended",2],["Helper::escapeCodeContent","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_escapeCodeContent","(string $code)","Escape the code blocks contents to get HTML entities",2],["Helper::fillPlaceholders","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_fillPlaceholders","(string $text, string $replacement)","Replace any `%%` mask by a replacement",2],["Helper::header2Label","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_header2Label","(string $text)","Transform a header string to DOM valid label",2],["Helper::encodeEmailAddress","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_encodeEmailAddress","(string $addr)","Input: an email address, e.g.",2],["Helper::getFileSize","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_getFileSize","(string $file_path)","Get a human readable file size",2],["Helper::buildRegex","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_buildRegex","(string $mask, string $delimiter = &#039;#&#039;, string $options = &#039;i&#039;)","Get a ready-to-use regular expression from a string",2],["Helper::find","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_find","(string $file_name, string $type = null)","Find a resource file and return its path",2],["Helper::toCamelCase","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_toCamelCase","(string $name, string $replace = &#039;_&#039;, bool $capitalize_first_char = true)","Transform a name in CamelCase",2],["Helper::fromCamelCase","MarkdownExtended\\Helper","MarkdownExtended\/Helper.html#method_fromCamelCase","(string $name, string $replace = &#039;_&#039;, bool $lowerize_first_char = true)","Transform a name from CamelCase to other",2],["MarkdownExtended::__construct","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method___construct","(array $options = null)","Initialize the registry and flush the contents stack",2],["MarkdownExtended::getInstance","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_getInstance","(int $instance_id = null, array $options = null)","Get the instance, which will be created if required",2],["MarkdownExtended::create","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_create","(array $options = null, int $instance_id = null)","Create a new singleton instance",2],["MarkdownExtended::transformString","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_transformString","(string $source, <abbr title=\"MarkdownExtended\\string\/array\">string\/array<\/abbr> $parser_options = null, <abbr title=\"MarkdownExtended\\string\/null\">string\/null<\/abbr> $key = null, bool $secondary = false)","Transform a source string",2],["MarkdownExtended::transformSource","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_transformSource","(string $filename, <abbr title=\"MarkdownExtended\\string\/array\">string\/array<\/abbr> $parser_options = null, <abbr title=\"MarkdownExtended\\string\/null\">string\/null<\/abbr> $key = null, bool $secondary = false)","Transform a source file content",2],["MarkdownExtended::addProcessedContent","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_addProcessedContent","(<abbr title=\"MarkdownExtended\\MDE_API\\ContentInterface\">ContentInterface<\/abbr> $content, bool $secondary = false)","Add a new processed content in the contents stack",2],["MarkdownExtended::getContent","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_getContent","(mixed $id = null)","Get a processed content, current by default",2],["MarkdownExtended::getFullContent","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_getFullContent","(mixed $id = null)","Get a full version of a processed content, current",2],["MarkdownExtended::getTemplater","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_getTemplater","(array $config = null)","Get current processed content in a Templater",2],["MarkdownExtended::load","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_load","(string $class_name)","Load a dependency",2],["MarkdownExtended::factory","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_factory","(string $class_name, <abbr title=\"MarkdownExtended\\null\/array\">null\/array<\/abbr> $params = null, <abbr title=\"MarkdownExtended\\null\/string\">null\/string<\/abbr> $type = null)","Build, retain and return a dependency instance",2],["MarkdownExtended::get","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_get","(string $class_name, array $params = null, int $flag = MDE_API::FAIL_GRACEFULLY)","Get a service from the container ; load it if absent",2],["MarkdownExtended::getConfig","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_getConfig","(string $var)","Get a configuration entry from registry",2],["MarkdownExtended::setConfig","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_setConfig","(string $var, mixed $val, null|string $stack = null)","Set a configuration entry in registry",2],["MarkdownExtended::addConfig","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_addConfig","(string $var, mixed $val)","Add to a configuration entry in registry",2],["MarkdownExtended::getVar","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_getVar","(string $var)","Get a parser entry from registry",2],["MarkdownExtended::setVar","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_setVar","(string $var, mixed $val)","Set a parser entry in registry",2],["MarkdownExtended::addVar","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_addVar","(string $var, mixed $val)","Add to a parser entry in registry",2],["MarkdownExtended::unsetVar","MarkdownExtended\\MarkdownExtended","MarkdownExtended\/MarkdownExtended.html#method_unsetVar","(string $var, mixed $val = null)","Unset a parser entry in registry",2],["OutputFormatBag::load","MarkdownExtended\\OutputFormatBag","MarkdownExtended\/OutputFormatBag.html#method_load","(string $format)","Loads a new formater",2],["OutputFormatBag::loadHelper","MarkdownExtended\\OutputFormatBag","MarkdownExtended\/OutputFormatBag.html#method_loadHelper","(string $format)","Loads a formater helper if it exists",2],["OutputFormatBag::__call","MarkdownExtended\\OutputFormatBag","MarkdownExtended\/OutputFormatBag.html#method___call","($name, array $arguments = null)","Magic method to pass any called method from the bag",2],["OutputFormatBag::setFormater","MarkdownExtended\\OutputFormatBag","MarkdownExtended\/OutputFormatBag.html#method_setFormater","(<a href=\"MarkdownExtended\/API\/OutputFormatInterface.html\"><abbr title=\"MarkdownExtended\\API\\OutputFormatInterface\">OutputFormatInterface<\/abbr><\/a> $formater)","Set the current formater",2],["OutputFormatBag::getFormater","MarkdownExtended\\OutputFormatBag","MarkdownExtended\/OutputFormatBag.html#method_getFormater","()","Get current formater",2],["OutputFormatBag::setHelper","MarkdownExtended\\OutputFormatBag","MarkdownExtended\/OutputFormatBag.html#method_setHelper","(<a href=\"MarkdownExtended\/API\/OutputFormatHelperInterface.html\"><abbr title=\"MarkdownExtended\\API\\OutputFormatHelperInterface\">OutputFormatHelperInterface<\/abbr><\/a> $helper)","Set the current formater helper",2],["OutputFormatBag::getHelper","MarkdownExtended\\OutputFormatBag","MarkdownExtended\/OutputFormatBag.html#method_getHelper","()","Get current formater helper",2],["AbstractOutputFormat::buildTag","MarkdownExtended\\OutputFormat\\AbstractOutputFormat","MarkdownExtended\/OutputFormat\/AbstractOutputFormat.html#method_buildTag","(string $tag_name, string $content = null, array $attributes = array())","",2],["AbstractOutputFormat::getTagString","MarkdownExtended\\OutputFormat\\AbstractOutputFormat","MarkdownExtended\/OutputFormat\/AbstractOutputFormat.html#method_getTagString","(string $content, string $tag_name, array $attributes = array())","",2],["DefaultHelper::getFullContent","MarkdownExtended\\OutputFormat\\DefaultHelper","MarkdownExtended\/OutputFormat\/DefaultHelper.html#method_getFullContent","(<a href=\"MarkdownExtended\/API\/ContentInterface.html\"><abbr title=\"MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr><\/a> $md_content, <a href=\"MarkdownExtended\/API\/OutputFormatInterface.html\"><abbr title=\"MarkdownExtended\\API\\OutputFormatInterface\">OutputFormatInterface<\/abbr><\/a> $formater)","This must return a full formated string ready to write",2],["DefaultHelper::getToc","MarkdownExtended\\OutputFormat\\DefaultHelper","MarkdownExtended\/OutputFormat\/DefaultHelper.html#method_getToc","(<a href=\"MarkdownExtended\/API\/ContentInterface.html\"><abbr title=\"MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr><\/a> $md_content, <a href=\"MarkdownExtended\/API\/OutputFormatInterface.html\"><abbr title=\"MarkdownExtended\\API\\OutputFormatInterface\">OutputFormatInterface<\/abbr><\/a> $formater)","This must return a full formated table of contents",2],["HTML::__construct","MarkdownExtended\\OutputFormat\\HTML","MarkdownExtended\/OutputFormat\/HTML.html#method___construct","()","Get the configuration 'empty_element_suffix'",2],["HTML::getTagString","MarkdownExtended\\OutputFormat\\HTML","MarkdownExtended\/OutputFormat\/HTML.html#method_getTagString","(string $text, string $tag, array $attributes = array(), bool $close = false)","",2],["HTML::buildTitle","MarkdownExtended\\OutputFormat\\HTML","MarkdownExtended\/OutputFormat\/HTML.html#method_buildTitle","($text, array $attributes = array())","",2],["HTML::buildMetaData","MarkdownExtended\\OutputFormat\\HTML","MarkdownExtended\/OutputFormat\/HTML.html#method_buildMetaData","($text = null, array $attributes = array())","",2],["HTML::buildComment","MarkdownExtended\\OutputFormat\\HTML","MarkdownExtended\/OutputFormat\/HTML.html#method_buildComment","($text = null, array $attributes = array())","",2],["HTML::buildParagraph","MarkdownExtended\\OutputFormat\\HTML","MarkdownExtended\/OutputFormat\/HTML.html#method_buildParagraph","($text = null, array $attributes = array())","",2],["HTML::buildLink","MarkdownExtended\\OutputFormat\\HTML","MarkdownExtended\/OutputFormat\/HTML.html#method_buildLink","($text = null, array $attributes = array())","",2],["HTMLHelper::getFullContent","MarkdownExtended\\OutputFormat\\HTMLHelper","MarkdownExtended\/OutputFormat\/HTMLHelper.html#method_getFullContent","(<a href=\"MarkdownExtended\/API\/ContentInterface.html\"><abbr title=\"MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr><\/a> $md_content, <a href=\"MarkdownExtended\/API\/OutputFormatInterface.html\"><abbr title=\"MarkdownExtended\\API\\OutputFormatInterface\">OutputFormatInterface<\/abbr><\/a> $formater, bool $full_html = true, bool $include_toc = false, string $html_tag = &#039;&lt;!DOCTYPE html&gt;&#039;)","This must return a full formated string ready to write",2],["HTMLHelper::getToc","MarkdownExtended\\OutputFormat\\HTMLHelper","MarkdownExtended\/OutputFormat\/HTMLHelper.html#method_getToc","(<a href=\"MarkdownExtended\/API\/ContentInterface.html\"><abbr title=\"MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr><\/a> $md_content, <a href=\"MarkdownExtended\/API\/OutputFormatInterface.html\"><abbr title=\"MarkdownExtended\\API\\OutputFormatInterface\">OutputFormatInterface<\/abbr><\/a> $formater, array $attributes = null)","This must return a full formated table of contents",2],["Man::__construct","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method___construct","()","Remind some commons",2],["Man::buildTag","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTag","(string $tag_name, string $content = null, array $attributes = array())","",2],["Man::getTagString","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_getTagString","(string $content, string $tag_name, array $attributes = array())","",2],["Man::escapeString","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_escapeString","(null $text = null, bool $escape_slashes = false, bool $strip_blank_lines = true)","Escape a string ready for manpage output",2],["Man::trimString","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_trimString","(null $text = null)","Special `trim()` to actually trim and \"r-trim\" last",2],["Man::buildTitle","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTitle","($text, array $attributes = array())","",2],["Man::indent","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_indent","()","",2],["Man::unindent","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_unindent","()","",2],["Man::buildMetaData","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildMetaData","($text = null, array $attributes = array())","",2],["Man::buildMetaTitle","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildMetaTitle","($text = null, array $attributes = array())","",2],["Man::buildParagraph","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildParagraph","($text = null, array $attributes = array())","",2],["Man::buildBold","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildBold","($text = null, array $attributes = array())","",2],["Man::buildItalic","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildItalic","($text = null, array $attributes = array())","",2],["Man::buildPreformated","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildPreformated","($text = null, array $attributes = array())","",2],["Man::buildCode","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildCode","($text = null, array $attributes = array())","",2],["Man::buildAbbreviation","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildAbbreviation","($text = null, array $attributes = array())","",2],["Man::buildDefinitionList","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildDefinitionList","($text = null, array $attributes = array())","",2],["Man::buildDefinitionListItemTerm","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildDefinitionListItemTerm","($text = null, array $attributes = array())","",2],["Man::buildDefinitionListItemDefinition","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildDefinitionListItemDefinition","($text = null, array $attributes = array())","",2],["Man::buildNewLine","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildNewLine","($text = null, array $attributes = array())","",2],["Man::buildHorizontalRule","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildHorizontalRule","($text = null, array $attributes = array())","",2],["Man::buildComment","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildComment","($text = null, array $attributes = array())","",2],["Man::buildListItem","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildListItem","($text = null, array $attributes = array())","",2],["Man::buildUnorderedListItem","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildUnorderedListItem","($text = null, array $attributes = array())","",2],["Man::buildOrderedListItem","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildOrderedListItem","($text = null, array $attributes = array())","",2],["Man::buildList","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildList","($text = null, array $attributes = array())","",2],["Man::buildUnorderedList","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildUnorderedList","($text = null, array $attributes = array())","",2],["Man::buildOrderedList","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildOrderedList","($text = null, array $attributes = array())","",2],["Man::buildLink","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildLink","($text = null, array $attributes = array())","",2],["Man::buildBlockquote","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildBlockquote","($text = null, array $attributes = array())","",2],["Man::buildTableCaption","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableCaption","($text = null, array $attributes = array())","",2],["Man::buildTableBody","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableBody","($text = null, array $attributes = array())","",2],["Man::buildTableHeader","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableHeader","($text = null, array $attributes = array())","",2],["Man::buildTableFooter","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableFooter","($text = null, array $attributes = array())","",2],["Man::buildTableLine","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableLine","($text = null, array $attributes = array())","",2],["Man::buildTableCell","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableCell","($text = null, array $attributes = array())","",2],["Man::buildTableCellHead","MarkdownExtended\\OutputFormat\\Man","MarkdownExtended\/OutputFormat\/Man.html#method_buildTableCellHead","($text = null, array $attributes = array())","",2],["ManHelper::getFullContent","MarkdownExtended\\OutputFormat\\ManHelper","MarkdownExtended\/OutputFormat\/ManHelper.html#method_getFullContent","(<a href=\"MarkdownExtended\/API\/ContentInterface.html\"><abbr title=\"MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr><\/a> $md_content, <a href=\"MarkdownExtended\/API\/OutputFormatInterface.html\"><abbr title=\"MarkdownExtended\\API\\OutputFormatInterface\">OutputFormatInterface<\/abbr><\/a> $formater)","This must return a full formated string ready to write",2],["ManHelper::getToc","MarkdownExtended\\OutputFormat\\ManHelper","MarkdownExtended\/OutputFormat\/ManHelper.html#method_getToc","(<a href=\"MarkdownExtended\/API\/ContentInterface.html\"><abbr title=\"MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr><\/a> $md_content, <a href=\"MarkdownExtended\/API\/OutputFormatInterface.html\"><abbr title=\"MarkdownExtended\\API\\OutputFormatInterface\">OutputFormatInterface<\/abbr><\/a> $formater)","This must return a full formated table of contents",2],["Parser::__construct","MarkdownExtended\\Parser","MarkdownExtended\/Parser.html#method___construct","(<abbr title=\"MarkdownExtended\\array\/string\">array\/string<\/abbr> $config = null)","Constructor function: Initialize the parser object",2],["Parser::parse","MarkdownExtended\\Parser","MarkdownExtended\/Parser.html#method_parse","(<a href=\"MarkdownExtended\/API\/ContentInterface.html\"><abbr title=\"MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr><\/a> $content, bool $secondary = false)","Main function.",2],["Parser::runGamuts","MarkdownExtended\\Parser","MarkdownExtended\/Parser.html#method_runGamuts","(array $gamuts, string $text = null)","Call to MarkdownExtended\\Grammar\\Gamut for an array",2],["Parser::getAllGamuts","MarkdownExtended\\Parser","MarkdownExtended\/Parser.html#method_getAllGamuts","()","",2],["Registry::__construct","MarkdownExtended\\Registry","MarkdownExtended\/Registry.html#method___construct","(bool $is_extendable = true, bool $is_removable = true)","Initialize the registry",2],["Registry::set","MarkdownExtended\\Registry","MarkdownExtended\/Registry.html#method_set","(string $var, mixed $val)","Set or reset a new instance in global registry",2],["Registry::add","MarkdownExtended\\Registry","MarkdownExtended\/Registry.html#method_add","(string $var, mixed $val)","Add something to an existing entry of the global registry,",2],["Registry::remove","MarkdownExtended\\Registry","MarkdownExtended\/Registry.html#method_remove","(string $var, <abbr title=\"MarkdownExtended\\null\/string\">null\/string<\/abbr> $index = null)","Remove something to an existing entry of the global",2],["Registry::get","MarkdownExtended\\Registry","MarkdownExtended\/Registry.html#method_get","(string $var, mixed $default = null)","Get an entry from the global registry",2],["Registry::extend","MarkdownExtended\\Registry","MarkdownExtended\/Registry.html#method_extend","(mixed $what, mixed $add)","Extend a value with another, if types match",2],["Registry::validateVarname","MarkdownExtended\\Registry","MarkdownExtended\/Registry.html#method_validateVarname","(string $var)","Validate a var name",2],["Templater::__construct","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method___construct","(array $user_config = array())","Construction of a new template object",2],["Templater::__toString","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method___toString","()","",2],["Templater::load","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_load","(<a href=\"MarkdownExtended\/API\/ContentInterface.html\"><abbr title=\"MarkdownExtended\\API\\ContentInterface\">ContentInterface<\/abbr><\/a> $mde_content)","Load a content object",2],["Templater::loadCollection","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_loadCollection","(<a href=\"MarkdownExtended\/API\/CollectionInterface.html\"><abbr title=\"MarkdownExtended\\API\\CollectionInterface\">CollectionInterface<\/abbr><\/a> $mde_content_collection)","Load a contents collection object",2],["Templater::getContent","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_getContent","()","Get the current content",2],["Templater::getTemplate","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_getTemplate","()","",2],["Templater::buildTemplate","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_buildTemplate","(array $params)","Build a template content passing it arguments",2],["Templater::parse","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_parse","()","Parse a content to complete it and pass it in a template",2],["Templater::parseCollection","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_parseCollection","()","Parse a contents collection to complete it and pass",2],["Templater::parseContent","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_parseContent","()","Parse a in-body tags",2],["Templater::parseTemplate","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_parseTemplate","()","Parse a template content",2],["Templater::autoInsert","MarkdownExtended\\Templater","MarkdownExtended\/Templater.html#method_autoInsert","()","Insert tags from 'auto_insert' config entry",2],["Compiler::getDefaultFinder","MarkdownExtended\\Util\\Compiler","MarkdownExtended\/Util\/Compiler.html#method_getDefaultFinder","()","",2],["Compiler::compile","MarkdownExtended\\Util\\Compiler","MarkdownExtended\/Util\/Compiler.html#method_compile","($pharFile = &#039;markdown-extended.phar&#039;, $root_dir = null)","Compiles app into a single phar file",2],["MenuItemIterator::__construct","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method___construct","(<abbr title=\"MarkdownExtended\\Util\\array\/string\">array\/string<\/abbr> $content = null, int $level = null, array $attributes = null, array $children = null, int $flags)","",2],["MenuItemIterator::init","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_init","(array $values)","Initialize a new item with an array of values",2],["MenuItemIterator::getDefault","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_getDefault","()","Get a default empty item",2],["MenuItemIterator::setLevel","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_setLevel","(int $level)","Set the item level",2],["MenuItemIterator::getLevel","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_getLevel","()","Get the item level",2],["MenuItemIterator::setContent","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_setContent","(string $content)","Set the item content",2],["MenuItemIterator::getContent","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_getContent","()","Get the item content",2],["MenuItemIterator::setAttributes","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_setAttributes","(array $attributes)","Define the item attributes array",2],["MenuItemIterator::addAttribute","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_addAttribute","(<abbr title=\"MarkdownExtended\\Util\\int\/string\">int\/string<\/abbr> $index, mixed $value)","Add a new item attribute",2],["MenuItemIterator::hasAttributes","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_hasAttributes","()","Test if an item has one or more attribute",2],["MenuItemIterator::getAttributes","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_getAttributes","()","Retrieve the item attributes array",2],["MenuItemIterator::setChildren","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_setChildren","(<a href=\"http:\/\/php.net\/ArrayAccess\"><abbr title=\"ArrayAccess\">ArrayAccess<\/abbr><\/a> $children)","Define an item children stack",2],["MenuItemIterator::addChild","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_addChild","(<abbr title=\"MarkdownExtended\\Util\\int\/string\">int\/string<\/abbr> $index, <a href=\"http:\/\/php.net\/ArrayAccess\"><abbr title=\"ArrayAccess\">ArrayAccess<\/abbr><\/a> $value)","Add a new item child",2],["MenuItemIterator::hasChildren","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_hasChildren","()","Test if the item has one or more children",2],["MenuItemIterator::hasChild","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_hasChild","(<abbr title=\"MarkdownExtended\\Util\\int\/string\">int\/string<\/abbr> $index)","Test if a child exists by its index",2],["MenuItemIterator::getChildren","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_getChildren","()","Get the item children",2],["MenuItemIterator::getChild","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_getChild","(<abbr title=\"MarkdownExtended\\Util\\int\/string\">int\/string<\/abbr> $index)","Get a child by its index",2],["MenuItemIterator::offsetSet","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_offsetSet","(string $index, mixed $newval)","Set a new value for a property if it exists in the",2],["MenuItemIterator::offsetUnset","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_offsetUnset","(string $index)","Unset a property value if it exists in the class",2],["MenuItemIterator::offsetGet","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_offsetGet","(string $index)","Retrieve a property value if it exists in the class",2],["MenuItemIterator::offsetExists","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_offsetExists","(string $index)","Test if an index exists in the class and if the property",2],["MenuItemIterator::append","MarkdownExtended\\Util\\MenuItemIterator","MarkdownExtended\/Util\/MenuItemIterator.html#method_append","(mixed $value)","Append a new child to item children with a uniq item",2],["RecursiveMenuIterator::__construct","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method___construct","(<abbr title=\"MarkdownExtended\\Util\\ArrayAccess\">ArrayAccess<\/abbr> $menu = null, int $base_level, int $flags)","",2],["RecursiveMenuIterator::next","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_next","()","Pass to next iteration",2],["RecursiveMenuIterator::previous","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_previous","()","Back to previous iteration",2],["RecursiveMenuIterator::rewind","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_rewind","()","Back to first iteration",2],["RecursiveMenuIterator::seek","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_seek","(int $position)","Seek to an iteration by its position",2],["RecursiveMenuIterator::position","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_position","()","Get the current iterator position",2],["RecursiveMenuIterator::append","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_append","(mixed $value)","Append a new value to iterator and then rebuild menu",2],["RecursiveMenuIterator::getArrayCopy","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_getArrayCopy","()","Get an array of the current menu",2],["RecursiveMenuIterator::menuKeySet","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_menuKeySet","(int $index, <abbr title=\"MarkdownExtended\\Util\\int\/string\">int\/string<\/abbr> $key)","Set a new key entry by its depth",2],["RecursiveMenuIterator::menuOffsetSet","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_menuOffsetSet","(<abbr title=\"MarkdownExtended\\Util\\int\/string\">int\/string<\/abbr> $index, <a href=\"http:\/\/php.net\/ArrayAccess\"><abbr title=\"ArrayAccess\">ArrayAccess<\/abbr><\/a> $newval)","Define a new first level entry",2],["RecursiveMenuIterator::menuOffsetSetRecursive","MarkdownExtended\\Util\\RecursiveMenuIterator","MarkdownExtended\/Util\/RecursiveMenuIterator.html#method_menuOffsetSetRecursive","(<abbr title=\"MarkdownExtended\\Util\\int\/string\">int\/string<\/abbr> $index, <a href=\"http:\/\/php.net\/ArrayAccess\"><abbr title=\"ArrayAccess\">ArrayAccess<\/abbr><\/a> $newval)","Define a new entry recursively",2],["MarkdownParser::render","markdown\\MarkdownParser","markdown\/MarkdownParser.html#method_render","(string $text)","Main function",2],["MarkdownParser::transform","markdown\\MarkdownParser","markdown\/MarkdownParser.html#method_transform","(string $text)","Performs some preprocessing on the input text and pass",2],["MarkdownParser::transformMarkdown","markdown\\MarkdownParser","markdown\/MarkdownParser.html#method_transformMarkdown","(string $text)","Transform Markdown text to HTML.",2],["MarkdownParser::defaultTransform","markdown\\MarkdownParser","markdown\/MarkdownParser.html#method_defaultTransform","(string $text)","Initialize the parser and return the result of its",2],["MarkdownParser::text","markdown\\MarkdownParser","markdown\/MarkdownParser.html#method_text","(string $text)","Performs a text for both inline and blocks elements",2],["MarkdownParser::line","markdown\\MarkdownParser","markdown\/MarkdownParser.html#method_line","(string $text)","Performs a text with ONLY inline elements",2],["MarkdownParserCompatibilityInterface::render","markdown\\MarkdownParserCompatibilityInterface","markdown\/MarkdownParserCompatibilityInterface.html#method_render","(string $text)","Main function",2],["MarkdownParserCompatibilityInterface::transform","markdown\\MarkdownParserCompatibilityInterface","markdown\/MarkdownParserCompatibilityInterface.html#method_transform","(string $text)","Performs some preprocessing on the input text and pass",2],["MarkdownParserCompatibilityInterface::transformMarkdown","markdown\\MarkdownParserCompatibilityInterface","markdown\/MarkdownParserCompatibilityInterface.html#method_transformMarkdown","(string $text)","Transform Markdown text to HTML.",2],["MarkdownParserCompatibilityInterface::defaultTransform","markdown\\MarkdownParserCompatibilityInterface","markdown\/MarkdownParserCompatibilityInterface.html#method_defaultTransform","(string $text)","Initialize the parser and return the result of its",2],["MarkdownParserCompatibilityInterface::text","markdown\\MarkdownParserCompatibilityInterface","markdown\/MarkdownParserCompatibilityInterface.html#method_text","(string $text)","Performs a text for both inline and blocks elements",2],["MarkdownParserCompatibilityInterface::line","markdown\\MarkdownParserCompatibilityInterface","markdown\/MarkdownParserCompatibilityInterface.html#method_line","(string $text)","Performs a text with ONLY inline elements",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']