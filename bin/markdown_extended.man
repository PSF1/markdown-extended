.\" author: Les Ateliers Pierrot

.TH  "MarkdownExtended" "3" "2013-06-17" "Version 0.0.8-dev" "markdown_extended Manual"

.SH NAME

.PP
\fBMarkdown Extended\fP

.PP
A complete PHP 5.3 package of Markdown syntax parser (extended version) - Command line interface

.SH SYNOPSIS

.PP
\fBmarkdown_extended [options] arguments\fP

.PP
\fBmarkdown_extended\fP  [\fB-h\fP|\fB-v\fP]  [\fB-x\fP|\fB-v\fP|\fB-q\fP|\fB-m\fP]
    [\fB-o\fP \fIfilename\fP]  [\fB-c\fP \fIconfigfile\fP]  [\fB-f\fP \fIformat\fP]
    [\fB-n\fP \fIa,b\fP]  [\fB-e\fP[=\fIblock\fP]]  [\fB-g\fP[=\fIname\fP]]
    \fBinput_filename\fP  [\fBinput_filename\fP]  [...]
    "\fBmarkdown string read from STDIN\fP"

.SH DESCRIPTION

.PP
\fBMarkdown Extended\fP converts markdown syntax text(s) source(s) in specified file(s)
(or STDIN). The rendering can be the full parsed content or just a part of this content.
By default, result is written through STDOUT in HTML format.

.PP
To transform a file content, write its path as script argument (file path may be relative
to current working directory and must exist). To process a list of input files, just write
file paths as arguments, separated by space.

.PP
To transform a string read from STDIN, write it as last argument between double-quotes or EOF.

.SH OPTIONS

.PP
The following options are supported:
.TP
\fB-h\fP , \fB--help\fP
Get a simple help information.
.TP
\fB-v\fP , \fB--version\fP
Get the current package version number.
.TP
\fB-x\fP , \fB--verbose\fP
Increase script's verbosity ; some steps are explained on STDOUT.
.TP
\fB-q\fP , \fB--quiet\fP
Decrease script's verbosity ; only result strings, Markdown Parser and PHP error
messages are written on STDOUT.
.TP
\fB-m\fP , \fB--multi\fP
Treat multi-files input ; this options is automatically enables if multiple file
names are found as arguments.
.TP
\fB-o\fP, \fB--output\fP =filename
Specify a single file name or a file name mask to write generated content in ; by
default, files are generated in current working directory.
.TP
\fB-c\fP , \fB--config\fP =filename
Define a specific configuration filename to use for the Markdown Parser ;
configuration files must be in `\fSINI\fP` format.
.TP
\fB-f\fP , \fB--format\fP =type
Define the output format to use to generate final rendering ; formats are stored in
PHP namespace `\fS\\MarkdownExtended\\OutputFormat\fP` ; default is `\fSHTML\fP`.
.TP
\fB-g\fP , \fB--gamuts\fP [=name]
Define a single gamut or a list of gamuts to execute on Markdown content parsing.
.TP
\fB-n\fP , \fB--nofilter\fP =name-a,name-b
Define a coma separated list of filters to disable during Markdown content parsing.
.TP
\fB-e\fP , \fB--extract\fP [=meta]
Define a content block to extract ; default extracted block is `\fSmetadata\fP`.
.SH MESSAGES

.PP
The script output is designed to use options '-x' or '--verbose' to increase
script verbosity on STDOUT and '-q' or '--quiet' to decrease it. The idea is quiet simple:

- in "\fBnormal\fP" rendering (no "verbose" neither than "quiet" mode), the result of the 
processed content is rendered, with the file name header in case of multi-files input
and command line script's errors are rendered ;

- in "\fBverbose\fP" mode, some process informations are shown, informing user about what is
happening, helps to follow process execution and get some informations such as some
string lengthes ; the command line script errors are rendered ;

- in "\fBquiet\fP" mode, nothing is written through SDTOUT except result of parsed content(s) ;
the command line script's errors are NOT rendered.

.PP
For all of these cases, PHP errors catched during Markdown Extended classes execution are
rendered depending on your environment `\fSerror_reporting\fP` setting and script execution may
exit with astatus code '90'.

.SH ENVIRONMENT

.PP
This script requires PHP version 5.3.0 minus.

.SH EXAMPLES

.PP
Classic parsing of the content of the Markdown syntax file `\fSsample.md\fP`:
    ~$ path/to/markdown_extended sample.md
.PP
For the same example, writing the output in file `\fSsample_parsed.html\fP`, run:
    ~$ path/to/markdown_extended -o sample_parsed.html sample.md
.PP
To extract meta-data from `\fSsample.md\fP`, run:
    ~$ path/to/markdown_extended -e sample.md
.PP
To build a man-page formated file from the Markdown source `\fSman-sample.md\fP`, run:
    ~$ path/to/markdown_extended -f man -o man-sample.man man-sample.md
.br
    // to open it with `man`:
.br
    ~$ man ./man-sample.man
.PP
To transform a string read from STDIN, run:
    ~$ path/to/markdown_extended -e=body "My **Markdown** string"
.SH LICENSE

.PP
This software is released under the BSD-3-Clause open source license. Please
read the License.text file for more information, or see
http://opensource.org/licenses/BSD-3-Clause.

.PP
PHP Markdown Extended - 
Copyright (c) 2008-2013 Pierre Cassat - 
http://github.com/atelierspierrot/markdown-extended

.PP
original MultiMarkdown - 
Copyright (c) 2005-2009 Fletcher T. Penney - 
http://fletcherpenney.net/

.PP
original PHP Markdown & Extra - 
Copyright (c) 2004-2012 Michel Fortin - 
http://michelf.com/projects/php-markdown/

.PP
original Markdown - 
Copyright (c) 2004-2006 John Gruber - 
http://daringfireball.net/projects/markdown/

.SH BUGS

.PP
To transmit bugs, see http://github.com/atelierspierrot/markdown-extended/issues.

.SH AUTHOR

.PP
\fBLes Ateliers Pierrot\fP http://www.ateliers-pierrot.fr/

